[{"D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\index.js":"1","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\App.js":"2","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\redux\\store.js":"3","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\routes.js":"4","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\redux\\dialogs-reducer.js":"5","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\redux\\profile-reducer.js":"6","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\redux\\users-reducer.js":"7","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\redux\\auth-reducer.js":"8","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\redux\\sidebar-reducer.js":"9","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\hooks\\http.hook.js":"10","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\hooks\\message.hook.js":"11","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\components\\Spinner\\spinner.js":"12","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\components\\Slider\\Slider.js":"13","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\components\\Header\\Header.js":"14","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\AuthPage\\AuthPage.js":"15","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\HomePage\\HomePage.js":"16","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\UsersPage\\UsersContainer.jsx":"17","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\UsersPage\\Users.jsx":"18","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\DialogsPage\\Dialogs\\DialogItem.js":"19","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\DialogsPage\\DialogsPage.js":"20","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\DialogsPage\\Dialogs\\Dialogs.js":"21","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\DialogsPage\\Messages\\MessagesContainer.js":"22","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\DialogsPage\\Messages\\Messages.js":"23","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\DialogsPage\\Messages\\MessageItem.js":"24","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\ProfilePage\\Profile.js":"25","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\HomePage\\PostItem.js":"26","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\components\\Spinner\\Spinner.js":"27"},{"size":570,"mtime":1616607922891,"results":"28","hashOfConfig":"29"},{"size":2002,"mtime":1616878655266,"results":"30","hashOfConfig":"29"},{"size":545,"mtime":1612608029027,"results":"31","hashOfConfig":"29"},{"size":722,"mtime":1616876714419,"results":"32","hashOfConfig":"29"},{"size":1376,"mtime":1616596690038,"results":"33","hashOfConfig":"29"},{"size":1476,"mtime":1613593751947,"results":"34","hashOfConfig":"29"},{"size":2642,"mtime":1612364996654,"results":"35","hashOfConfig":"29"},{"size":903,"mtime":1613761712963,"results":"36","hashOfConfig":"29"},{"size":140,"mtime":1611164788974,"results":"37","hashOfConfig":"29"},{"size":1127,"mtime":1616958217056,"results":"38","hashOfConfig":"29"},{"size":209,"mtime":1613319539274,"results":"39","hashOfConfig":"29"},{"size":272,"mtime":1616932481970,"results":"40","hashOfConfig":"41"},{"size":4882,"mtime":1616948179780,"results":"42","hashOfConfig":"29"},{"size":1210,"mtime":1616865480150,"results":"43","hashOfConfig":"29"},{"size":6267,"mtime":1616939129868,"results":"44","hashOfConfig":"29"},{"size":1189,"mtime":1616941720501,"results":"45","hashOfConfig":"29"},{"size":2323,"mtime":1616704967290,"results":"46","hashOfConfig":"29"},{"size":3847,"mtime":1616704966873,"results":"47","hashOfConfig":"29"},{"size":3506,"mtime":1616783364452,"results":"48","hashOfConfig":"29"},{"size":645,"mtime":1616706135779,"results":"49","hashOfConfig":"29"},{"size":3782,"mtime":1616850946863,"results":"50","hashOfConfig":"29"},{"size":914,"mtime":1616706156638,"results":"51","hashOfConfig":"29"},{"size":3935,"mtime":1616940842265,"results":"52","hashOfConfig":"29"},{"size":586,"mtime":1616706266810,"results":"53","hashOfConfig":"29"},{"size":4595,"mtime":1616957739383,"results":"54","hashOfConfig":"29"},{"size":2437,"mtime":1616957128998,"results":"55","hashOfConfig":"29"},{"size":276,"mtime":1616939396940,"results":"56","hashOfConfig":"29"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"1rnyk1d",{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yptu8l",{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"59"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"59"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"59"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"59"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"59"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"59"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"59"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"59"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\index.js",[],["122","123"],"D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\App.js",["124","125","126","127"],"import React, { createRef, forwardRef, useEffect, useRef } from 'react';\r\nimport './App.scss';\r\nimport {BrowserRouter as Router, HashRouter, Route} from \"react-router-dom\";\r\nimport Header from \"./components/Header/Header\";\r\nimport { connect } from 'react-redux';\r\nimport { useRoutes } from './routes';\r\n// import Spinner from './components/Spinner/spinner';\r\nimport { loginAC } from './redux/auth-reducer';\r\nimport AuthPage from './pages/AuthPage/AuthPage';\r\n\r\nconst App = (props) => {\r\n    const data = JSON.parse(sessionStorage.getItem('storageName'));\r\n    const appWrapper = useRef(null);\r\n\r\n    const isAuthenticated = !!props.token;\r\n    const routes = useRoutes();\r\n    \r\n    if (data && data.token) {\r\n        props.login(data.token, data.user);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fixOffset()\r\n        \r\n        window.addEventListener('resize', fixOffset);\r\n\r\n        return () => window.removeEventListener('resize', fixOffset);\r\n    }, [isAuthenticated]);\r\n\r\n    function fixOffset() {\r\n        try{\r\n            appWrapper.current.style.height = document.body.clientHeight - (isAuthenticated ? 40 : 0) + 'px';\r\n        } catch {}    \r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            {!isAuthenticated ? \r\n                <Route path=\"/\" exact component={AuthPage} />\r\n                :\r\n                <>\r\n                    <div className='white-line'></div>\r\n                    <div className='app'>\r\n                        <Header />\r\n                        <div ref={appWrapper} className='app-wrapper'> \r\n                            {routes}\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n        </Router>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token\r\n});\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (token, user) => {\r\n            dispatch(loginAC(token, user));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\redux\\store.js",[],"D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\routes.js",["128"],"import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport DialogsPage from './pages/DialogsPage/DialogsPage';\r\nimport ProfilePage from './pages/ProfilePage/Profile';\r\nimport UsersPage from './pages/UsersPage/UsersContainer';\r\nimport AuthPage from './pages/AuthPage/AuthPage';\r\nimport HomePage from './pages/HomePage/HomePage';\r\n\r\nexport const useRoutes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route  path='/dialogs' component={DialogsPage}/>\r\n            <Route exact path='/profile' render={ () => <ProfilePage /> }/>\r\n            <Route exact path='/users' render={ () => <UsersPage /> }/>\r\n            <Route exact path=\"/\" component={HomePage}/>\r\n        </Switch>\r\n    )\r\n}\r\n","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\redux\\dialogs-reducer.js",[],"D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\redux\\profile-reducer.js",[],"D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\redux\\users-reducer.js",[],"D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\redux\\auth-reducer.js",[],"D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\redux\\sidebar-reducer.js",[],"D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\hooks\\http.hook.js",[],"D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\hooks\\message.hook.js",[],"D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\components\\Spinner\\spinner.js",[],"D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\components\\Slider\\Slider.js",["129","130"],"import React, { createRef, useEffect, useRef } from 'react';\r\nimport './Slider.scss';\r\n\r\nconst Slider = ({imgWidth, imgHeight}) => {\r\n    const slidesUrls = [\r\n            {url: 'https://www.sunchemical.com/wp-content/uploads/2019/07/SunWave_banner-1200x400.jpg'},\r\n            {url: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTPuUErrrIAbhJWNbw-taT2n5SqTHHPAdjPS6Nd8eGJhsYOmZ1sEHICT8QkN5EbEL0XWVo&usqp=CAU'},\r\n            {url: 'https://www.mapix.com/wp-content/uploads/2018/04/1200x400.png'},\r\n            {url: 'https://sinctech.com/wp-content/uploads/2017/07/placeholder-1200x400.png'}\r\n        ], //slider_item\r\n        slidesWrapper = useRef(null), \r\n        slidesField = useRef(null), \r\n        slider = useRef(null), \r\n        dotWrapper = useRef(null), \r\n        slides = useRef(slidesUrls.map(() => createRef())),\r\n        dots = useRef(slidesUrls.map(() => createRef()));\r\n\r\n    let slideIndex = 1, offset = 0, toSlide = 1, width = '';\r\n\r\n    useEffect(() => {\r\n        width = replaceWords(window.getComputedStyle(slidesWrapper.current).width);\r\n        fixSlideSize();\r\n        fixOffset();\r\n        // console.log(offset)\r\n        window.addEventListener('resize', fixOffset);\r\n\r\n        colorCurDot();\r\n        \r\n        slidesField.current.style.width = 100 * slidesUrls.length + '%';\r\n\r\n        return () => window.removeEventListener('resize', fixOffset);\r\n    }, []);\r\n\r\n    const nextBtnClicked = () => {\r\n        toRight();\r\n        if (slideIndex < slidesUrls.length) {\r\n            slideIndex++;\r\n        } else {\r\n            slideIndex = 1;\r\n        }\r\n        colorCurDot();\r\n    };\r\n\r\n    const prevBtnClicked = () => {\r\n        toLeft();\r\n        if (slideIndex > 1) {\r\n            slideIndex--;\r\n        } else {\r\n            slideIndex = slidesUrls.length;\r\n        }\r\n        colorCurDot();\r\n    };\r\n\r\n    function toRight() {\r\n        if (offset == width * (slidesUrls.length - 1)) {\r\n            offset = 0;\r\n        } else {\r\n            offset += width * toSlide;\r\n        }\r\n        console.log(offset)\r\n        slidesField.current.style.transform = `translateX(-${offset}px)`;\r\n    }\r\n\r\n    function toLeft() {\r\n        if (offset === 0) {\r\n            offset = width * (slidesUrls.length - 1) * toSlide;\r\n        } else {\r\n            offset -= width * toSlide;\r\n        }\r\n        console.log(offset)\r\n        slidesField.current.style.transform = `translateX(-${offset}px)`;\r\n    }\r\n\r\n    function goToSlideByDot(dotIndex) {\r\n        toSlide = Math.abs(dotIndex - slideIndex);\r\n        if (dotIndex < slideIndex) {\r\n            slideIndex = dotIndex;\r\n            toLeft();\r\n        } else if (dotIndex > slideIndex) {\r\n            slideIndex = dotIndex;\r\n            toRight();\r\n        }\r\n        toSlide = 1;\r\n        colorCurDot();\r\n    }\r\n\r\n    function colorCurDot() {\r\n        dots.current.forEach(({current}) => {\r\n            current.style.background = \"none\";\r\n        });\r\n        dots.current[slideIndex - 1].current.style.background = \"#fdc84b\";\r\n    }\r\n\r\n    function fixSlideSize() {\r\n        slides.current.forEach(({current}) => {\r\n            current.style.width = `${width}px`;\r\n        });\r\n    }\r\n\r\n    function fixSliderHeight() {\r\n        slider.current.style.height = `${width/(imgWidth/imgHeight)}px`;\r\n    }\r\n\r\n    function fixOffset() {\r\n        let temp = width;\r\n        width = replaceWords(window.getComputedStyle(slidesWrapper.current).width);\r\n        fixSlideSize();\r\n        fixSliderHeight();\r\n        if (width > temp) {\r\n            offset += (slideIndex - 1) * Math.abs(width - temp);\r\n        } else if (width < temp) {\r\n            offset -= (slideIndex - 1) * Math.abs(width - temp);\r\n        }\r\n        slidesField.current.style.transform = `translateX(-${offset}px)`;\r\n    }\r\n\r\n    function replaceWords(element) {\r\n        let lastNumIndexInWidth = element.length - element.split('').reverse().join('').search(/\\d/);\r\n        return Math.round(+element.split('').splice(0, lastNumIndexInWidth).join(''));\r\n    }\r\n\r\n    return (\r\n        <div className=\"slider\" ref={slider}>\r\n            <div className=\"container\" ref={slidesWrapper}>\r\n                <div className=\"track\" ref={slidesField}>\r\n                    {\r\n                        slidesUrls.map(({url}, i) => <div key={i} ref={slides.current[i]} className=\"item\"><img src={url} alt=\"\"/></div>)\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"btn_prev\" onClick={prevBtnClicked}></div>\r\n            <div className=\"btn_next\" onClick={nextBtnClicked}></div>\r\n            <div className=\"dot-wrapper\" ref={dotWrapper}>\r\n                {\r\n                    slidesUrls.map((_, i) => <div className='slider-dot' ref={dots.current[i]} key={i} onClick={() => goToSlideByDot(i+1)}></div>)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Slider;","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\components\\Header\\Header.js",[],"D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\AuthPage\\AuthPage.js",["131","132","133","134"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHttp } from '../../hooks/http.hook';\r\nimport { useMessage } from '../../hooks/message.hook';\r\nimport { loginAC } from '../../redux/auth-reducer';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport './AuthPage.scss';\r\n\r\nconst AuthPage = (props) => {\r\n    const {login} = props;\r\n    const message = useMessage();\r\n    const {error, request, clearError} = useHttp();\r\n    const [loading, setLoading] = useState(false);\r\n    const [form, setForm] = useState({\r\n        email: '',\r\n        displayName: '',\r\n        password: ''\r\n    });\r\n    const [isRegistrateForm, setIsRegistrateForm] = useState(true);\r\n    \r\n    useEffect(() => {\r\n        message(error);\r\n        clearError();\r\n    },[error, message, clearError]);\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(sessionStorage.getItem('storageName'));\r\n        \r\n        if (data && data.token) {\r\n            login(data.token, data.user);\r\n        }\r\n    }, [login])\r\n\r\n    const changeHandler = e => {\r\n        setForm({...form, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const registerHandler = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const register = await request('/api/auth/register', 'POST', {...form}, {Authorization: `Bearer ${props.token}`});\r\n            message(register.message);\r\n            setLoading(false);\r\n            changeFormHandler();\r\n        } catch (err) {\r\n            alert(err.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const data = await request('/api/auth/login', 'POST', {...form}, {Authorization: `Bearer ${props.token}`});\r\n            \r\n            login(data.token, data.user);\r\n        } catch (err) {\r\n            alert(err.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const changeFormHandler = () => {\r\n        setIsRegistrateForm(!isRegistrateForm);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {loading ?\r\n                <Spinner />\r\n                :\r\n                <div className='split-screen'>\r\n                    <div className='left'>\r\n                        <section className='copy'>\r\n                            <h1>Kalina</h1>\r\n                            <p>For the beauty text.</p>\r\n                        </section>\r\n                    </div>\r\n                    <div className='right'>\r\n                        <form>\r\n                            <section className='copy'>\r\n                                <h2>Sign {isRegistrateForm ? 'up' : 'in'}</h2>\r\n                                <div className='login-container'>\r\n                                    {isRegistrateForm ?\r\n                                        <p>Already have an account? <a onClick={changeFormHandler}><strong>Sign in!</strong></a></p>\r\n                                        :\r\n                                        <p>Don't have an account? <a onClick={changeFormHandler}><strong>Sign up!</strong></a></p>\r\n                                    }\r\n                                </div>\r\n                            </section>\r\n                            {isRegistrateForm && <div className='input-container name'>\r\n                                <label htmlFor='displayName'>Nickname</label>\r\n                                <input \r\n                                    name=\"displayName\"\r\n                                    id=\"displayName\" \r\n                                    type=\"text\"\r\n                                    value={form.displayName}\r\n                                    onChange={changeHandler}\r\n                                    required/>\r\n                            </div>}\r\n                            <div className='input-container email'>\r\n                                <label htmlFor='email'>Email</label>\r\n                                <input \r\n                                    name=\"email\"\r\n                                    id=\"email\" \r\n                                    type=\"email\" \r\n                                    value={form.email}\r\n                                    onChange={changeHandler}\r\n                                    required/>\r\n                            </div>\r\n                            <div className='input-container password'>\r\n                                <label htmlFor='password'>Password</label>\r\n                                <input \r\n                                    name=\"password\"\r\n                                    id=\"password\" \r\n                                    type=\"password\" \r\n                                    value={form.password}\r\n                                    onChange={changeHandler}\r\n                                    placeholder='At least 6 characters!' \r\n                                    required/>\r\n                                <i className='far fa-eye-slash' />\r\n                            </div>\r\n                            {isRegistrateForm ?\r\n                                <button className='signup-btn' type='submit' onClick={registerHandler}>Sign up</button>\r\n                                :\r\n                                <button className='signup-btn' type='submit' onClick={loginHandler}>Sign in</button>\r\n                            }\r\n                            <section className='copy legal'>\r\n                                <p>\r\n                                    <span className='small'>\r\n                                        By continuing, you agree to accept our <br/><a>Privacy Policy</a> & <a>Terms of Service</a>.\r\n                                    </span>\r\n                                </p>\r\n                            </section>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (token, user) => {\r\n            dispatch(loginAC(token, user));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthPage);","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\HomePage\\HomePage.js",["135","136","137","138"],"import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Slider from '../../components/Slider/Slider';\r\nimport { useHttp } from '../../hooks/http.hook';\r\nimport './HomePage.scss';\r\nimport PostItem from './PostItem';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nconst HomePage = (props) => {\r\n    const [allPosts, setAllPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const {error, request, clearError} = useHttp();\r\n\r\n    useEffect(async () => {\r\n        const data = await request('/api/posts/get/posts', 'GET', null, {\r\n            Authorization: `Bearer ${props.token}`,\r\n        });\r\n        setAllPosts(data.posts)\r\n        setLoading(false)\r\n    }, []);\r\n\r\n    return (\r\n        <div className='home-page'>\r\n            {loading && <Spinner/>}\r\n            <div className='element'>\r\n                <Slider imgWidth={1200} imgHeight={500}/>\r\n            </div>\r\n            {allPosts.map(post => <PostItem post={post} key={post._id}/>)}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token\r\n});\r\n\r\nexport default connect(mapStateToProps)(HomePage);","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\UsersPage\\UsersContainer.jsx",[],"D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\UsersPage\\Users.jsx",[],"D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\DialogsPage\\Dialogs\\DialogItem.js",["139","140","141","142","143","144","145"],"import React, { useEffect, useState } from 'react';\r\nimport './DialogItem.scss';\r\nimport {Link} from \"react-router-dom\";\r\nimport { Avatar } from '@material-ui/core';\r\nimport Pusher from 'pusher-js';\r\nimport { setChatAC, setDialogsAC, setIsDialogSelectedAC, setMessagesAC } from \"../../../redux/dialogs-reducer\";\r\nimport { connect } from 'react-redux';\r\nimport { useHttp } from '../../../hooks/http.hook';\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\n\r\nconst pusher = new Pusher('b634efb073fba40fbf3a', {\r\n    cluster: 'eu'\r\n});\r\n\r\nconst DialogItem = (props) => {\r\n    // const path = \"/dialogs/\" + props.id;\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [dialogsLastMsg, setDialogsLastMsg] = useState({});\r\n    let displayName = '', message = '', timestamp = 0;\r\n\r\n    const getLastMessage = async () => {\r\n        try {\r\n            const data = await request(`/api/chats/get/lastMessage?id=${props.id}`, 'GET', null, {Authorization: `Bearer ${props.token}`});\r\n            setDialogsLastMsg(data);\r\n        } catch {console.log(1)}\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLastMessage();\r\n        \r\n        const channel = pusher.subscribe('messages');\r\n        channel.bind('newMessage', () => {\r\n            getLastMessage();   \r\n        });\r\n\r\n        return () => {\r\n            channel.unbind_all();\r\n            channel.unsubscribe();\r\n        };\r\n    }, [props.id]);\r\n\r\n    const selectedDialog = async () => {\r\n        try {\r\n            const data = await request(`/api/chats/get/conversation?id=${props.id}`, 'GET', null, {Authorization: `Bearer ${props.token}`});\r\n            props.setMessages(data['0'].conversation);\r\n            props.setChat({\r\n                chatName: data['0'].chatName,\r\n                chatId: props.id\r\n            });\r\n            props.setIsDialogSelected(true);\r\n        } catch {console.log(1)}\r\n    }\r\n\r\n    try {\r\n        displayName = dialogsLastMsg.user.displayName;\r\n        message = dialogsLastMsg.message;\r\n        timestamp = dialogsLastMsg.timestamp;\r\n    } catch {}\r\n\r\n    return (\r\n        // <Link to={path}>\r\n            <div onClick={selectedDialog} className='dialogItem'>\r\n                <div className='dialogItem__info'>\r\n                    <div className='dialogItem__info-avatar'><img src={userPhoto} alt=''/></div>\r\n                    <div className='dialogItem__info-main'>\r\n                        <div><h1>{props.name}</h1></div>\r\n                        <span className='dialogItem__info-message'>{displayName}: {message}</span>\r\n                    </div>\r\n                    <div className=\"timaStamp\"><small>24.03</small></div>\r\n                </div>\r\n            </div>\r\n        // </Link>  \r\n    )\r\n}\r\n\r\n\r\n// {/* <div><small>{new Date(parseInt(timestamp)).toISOString().replace(/T/g, ' ').replace(/\\..*/, '')}</small> </div> */}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setDialogs: (dialogs) => {\r\n            dispatch(setDialogsAC(dialogs));\r\n        },\r\n        setMessages: (messages) => {\r\n            dispatch(setMessagesAC(messages));\r\n        },\r\n        setChat: chat => {\r\n            dispatch(setChatAC(chat))\r\n        },\r\n        setIsDialogSelected: (a) => {\r\n            dispatch(setIsDialogSelectedAC(a))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogItem);","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\DialogsPage\\DialogsPage.js",[],"D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\DialogsPage\\Dialogs\\Dialogs.js",["146","147","148","149","150","151","152"],"import React, { useEffect, useRef } from 'react';\r\n// import ChatIcon from '@material-ui/icons/Chat';\r\n// import DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport \"./Dialogs.scss\";\r\n// import { IconButton, Avatar } from '@material-ui/core';\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport DialogItem from './DialogItem';\r\nimport { Button } from '@material-ui/core';\r\nimport Pusher from 'pusher-js';\r\nimport { useHttp } from '../../../hooks/http.hook';\r\nimport { setDialogsAC } from '../../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { useState } from 'react';\r\n\r\nconst pusher = new Pusher('b634efb073fba40fbf3a', {\r\n    cluster: 'eu'\r\n});\r\n\r\nconst DialogsList = (props) => {    \r\n    const {error, request, clearError} = useHttp();\r\n    const [loading, setLoading] = useState(false);\r\n    const dialogs = useRef(null);\r\n    const dialogsHeader = useRef(null);\r\n    const dialogsItems = useRef(null);\r\n\r\n    const getDialogs = async () => {\r\n        try {\r\n            const data = await request('/api/chats/get/conversations', 'GET', null, {\r\n                Authorization: `Bearer ${props.token}`,\r\n            });\r\n            props.setDialogs(data);\r\n        } catch(err) {console.log(err)}\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        !props.isDialogSelected ? dialogs.current.classList.add('show') : dialogs.current.classList.remove('show');\r\n    }, [props.isDialogSelected])\r\n    \r\n    useEffect(() => {\r\n        getDialogs();\r\n        \r\n        const channel = pusher.subscribe('chats');\r\n        channel.bind('newChat', () => {\r\n            getDialogs();\r\n        });\r\n    }, []);\r\n\r\n    const addNewChat = async (e) => {\r\n        e.preventDefault();\r\n        const chatName = prompt('Enter a chat name');\r\n        const firstMsg = prompt('Send a welcome message');\r\n\r\n        if(chatName && firstMsg) {\r\n            try {\r\n                let chatId = '';\r\n\r\n                const data = await request('/api/chats/new/conversation', 'POST', {chatName}, {Authorization: `Bearer ${props.token}`});\r\n\r\n                chatId = data._id\r\n\r\n                await request(`/api/chats/new/message?id=${chatId}`, 'POST', {\r\n                    message: firstMsg,\r\n                    timestamp: Date.now(),\r\n                    user: props.user\r\n                }, {Authorization: `Bearer ${props.token}`});\r\n            } catch {console.log(1)}\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div ref={dialogs} className='dialogs'>\r\n            <div ref={dialogsHeader} className='dialogs__header'>\r\n                <input placeholder='Search or start new chat' type='text' />\r\n                <button onClick={addNewChat}>+</button>\r\n            </div>\r\n            {/* <div className='dialogs__search'>\r\n                <div className='dialogs__searchContainer'>\r\n                    <SearchOutlined/>\r\n                    <input placeholder='Search or start new chat' type='text' />\r\n                </div>\r\n            </div> */}\r\n            <div ref={dialogsItems} className='dialogs__items'>\r\n                {props.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} timestamp={dialog.timestamp}/> )} \r\n            </div>\r\n        </div>\r\n    )  \r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        isDialogSelected: state.dialogsPage.isDialogSelected,\r\n        user: state.auth.user,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setDialogs: (dialogs) => {\r\n            dispatch(setDialogsAC(dialogs));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogsList);","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\DialogsPage\\Messages\\MessagesContainer.js",[],"D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\DialogsPage\\Messages\\Messages.js",["153","154","155","156","157"],"import { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, InsertEmoticon, MoreVert, SearchOutlined } from '@material-ui/icons';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Messages.scss';\r\nimport Pusher from 'pusher-js';\r\nimport MessageItem from './MessageItem';\r\nimport { useHttp } from '../../../hooks/http.hook';\r\nimport btnBack from '../../../assets/images/arrowback.svg';\r\n\r\nconst MessagesList = (props) => {\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [newMessage, setNewMessage] = useState('');\r\n    \r\n    const onSendMessageClick = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await request(`/api/chats/new/message?id=${props.chat.chatId}`, 'POST', {\r\n                message: newMessage,\r\n                timestamp: Date.now(),\r\n                user: props.user\r\n            }, {Authorization: `Bearer ${props.token}`});\r\n        } catch {console.log(1)}\r\n        setNewMessage('');\r\n    }\r\n\r\n    const fixScroll = () => {\r\n        try {\r\n            const block = document.querySelector('.messages__body');\r\n            block.scrollTop = block.scrollHeight;\r\n        } catch{}\r\n    }\r\n\r\n    const onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        setNewMessage(body);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => fixScroll());\r\n\r\n        return () => window.removeEventListener('resize', () => fixScroll());\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const pusher = new Pusher('b634efb073fba40fbf3a', {\r\n            cluster: 'eu'\r\n        });\r\n      \r\n        const channel = pusher.subscribe('messages');\r\n        channel.bind('newMessage', async () => {\r\n            try {\r\n                const data = await request(`/api/chats/get/conversation?id=${props.chat.chatId}`, 'GET', null, {Authorization: `Bearer ${props.token}`});\r\n                props.setMessages(data['0'].conversation);\r\n                fixScroll();\r\n            } catch {}\r\n        });\r\n\r\n        fixScroll();\r\n\r\n        return () => {\r\n            channel.unbind_all();\r\n            channel.unsubscribe();\r\n        };\r\n    }, [props.chat.chatId]);\r\n\r\n    const toggleChat = () => {props.setIsDialogSelected(false)}\r\n\r\n    return (\r\n        <div className='messages'>\r\n            <div className='messages__header'>\r\n                <i onClick={toggleChat} className={\"material-icons btnBack\"} style={{fontSize: '40px'}}>arrow_back</i>\r\n                <Avatar />\r\n                <div className='messages__headerInfo'>\r\n                    <h3>{props.chat.chatName}</h3>\r\n                </div>\r\n                <div className='messages__headerRight'>\r\n                    <IconButton>\r\n                        <SearchOutlined/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className='messages__body'>\r\n                { props.messages.map( message => <MessageItem userName={props.user.displayName} message={message} key={message._id} /> ) }\r\n            </div>\r\n            <div className='messages__footer'>\r\n                <InsertEmoticon className='emoji'/>\r\n                <form>\r\n                    <input \r\n                        type='text'\r\n                        value={newMessage}\r\n                        onChange={onNewMessageChange}\r\n                        placeholder='Enter your message'/>\r\n                    <button \r\n                        type='submit'\r\n                        onClick={onSendMessageClick}>Send</button>\r\n                </form>\r\n                <MicIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessagesList;","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\DialogsPage\\Messages\\MessageItem.js",[],"D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\ProfilePage\\Profile.js",["158","159","160","161","162","163","164"],"import { connect } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHttp } from '../../hooks/http.hook';\r\n// import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n// import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport './Profile.scss';\r\n\r\nconst Profile = (props) => {\r\n    const {error, request, clearError} = useHttp();\r\n    const [isCreatePostOpen, setIsCreatePostOpen] = useState(false);\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [myPosts, setMyPosts] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        const data = await request('/api/posts/get/myposts', 'GET', null, {\r\n            Authorization: `Bearer ${props.token}`,\r\n        });\r\n        setMyPosts(data.posts)\r\n    }, []);\r\n\r\n    const postDetails = async () => {\r\n        const formData = new FormData();\r\n        formData.append('file', image);\r\n        formData.append('upload_preset', 'kalina-why-not');\r\n        formData.append('cloud_name', 'kalina-why-not');\r\n        await fetch('https://api.cloudinary.com/v1_1/kalina-why-not/image/upload', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        .then(res => res.json())\r\n        .then(async formData => {\r\n            await request('/api/posts/new/post', 'POST', {title, body, picture: formData.url}, {\r\n                Authorization: `Bearer ${props.token}`,\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n    const deletePost = async () => {\r\n        const data = await request('/api/posts/delete/post/id', 'DELETE', null, {\r\n            Authorization: `Bearer ${props.token}`,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='profile-page'>\r\n            <div className='profile__info'>\r\n                <div>\r\n                    <img src=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/5952bfa6-4594-4d7c-bee6-0b5a3988a099/dapn32z-2a11b870-38b2-4caf-ba16-5bbe9a84fe7f.png/v1/fill/w_200,h_200,strp/moonlight_deer___200x200_pixelart_by_fluffzee_dapn32z-fullview.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3siaGVpZ2h0IjoiPD0yMDAiLCJwYXRoIjoiXC9mXC81OTUyYmZhNi00NTk0LTRkN2MtYmVlNi0wYjVhMzk4OGEwOTlcL2RhcG4zMnotMmExMWI4NzAtMzhiMi00Y2FmLWJhMTYtNWJiZTlhODRmZTdmLnBuZyIsIndpZHRoIjoiPD0yMDAifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6aW1hZ2Uub3BlcmF0aW9ucyJdfQ.nf-qh5IpeWu7UCzndssg2ee6_hETzDEAjAQ8cmU0JXE\" alt=\"\" />\r\n                </div> \r\n                <div>\r\n                    <h4>{props.user.displayName}</h4>\r\n                    <div className='profile__info-attributes'>\r\n                        <h5>40 posts</h5>\r\n                        <h5>30 followers</h5>\r\n                        <h5>40 following</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button onClick={() => setIsCreatePostOpen(true)}>Add new post</button>\r\n            {isCreatePostOpen && <>\r\n                <div className='newPostWindow'>\r\n                    <div className='closeWindow' onClick={() => setIsCreatePostOpen(false)}>Close</div>\r\n                    <div className='newPostBody'>\r\n                        <span>Title</span>\r\n                        <input type='text' placeholder='Enter title' value={title} onChange={e => setTitle(e.target.value)} />\r\n                        <span>Description</span>\r\n                        <input type='text' placeholder='Enter Description' value={body} onChange={e => setBody(e.target.value)}/>\r\n                        <span>Upload image</span>\r\n                        <input type='file' onChange={e => setImage(e.target.files[0])}/>\r\n                        <button onClick={postDetails}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </>}\r\n            <div className='profile__gallery'>\r\n            {/* <i onClick={deletePost} className={\"material-icons\"} style={{fontSize: '30px', cursor: 'pointer', float: 'right'}}>delete</i> */}\r\n                {myPosts.map(post => <img key={post._id} src={post.picture} alt=\"\"/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         setDialogs: (dialogs) => {\r\n//             dispatch(setDialogsAC(dialogs));\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default connect(mapStateToProps)(Profile);","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\pages\\HomePage\\PostItem.js",["165","166","167","168","169"],"import { connect } from 'react-redux';\r\nimport React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useHttp } from '../../hooks/http.hook';\r\n\r\nconst PostItem = ({post, token, user}) => {\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [isLiked, setIsLiked] = useState(post.likes.includes(user._id));\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [likesCount, setLikesCount] = useState(post.likes.length);\r\n    const [comments, setComments] = useState(post.comments);\r\n    const [newComment, setNewComment] = useState('');\r\n\r\n    useEffect(async () => {\r\n        if (isLoaded) {\r\n            const data = await request(`/api/posts/put/${isLiked ? 'like' : 'unlike'}`, 'PUT', {postId: post._id}, {Authorization: `Bearer ${token}`});\r\n            setLikesCount(data.likes.length);\r\n        }\r\n    }, [isLiked]);\r\n\r\n    const likeHandler = () => {\r\n        setIsLoaded(true);\r\n        setIsLiked(!isLiked);\r\n    }\r\n    \r\n    const newCommentHandler = async () => {\r\n        const data = await request(`/api/posts/put/comment`, 'PUT', {postId: post._id, text: newComment}, {Authorization: `Bearer ${token}`});\r\n        setComments(data.comments);\r\n        setNewComment('');\r\n    }\r\n\r\n    return (\r\n        <div className='element'>\r\n            <div className='card'>\r\n                <h5>{post.owner.displayName}</h5>\r\n                <div className='card-image'>\r\n                    <img src={post.picture} alt=\"\"/>\r\n                </div>\r\n                <div className='card-content'>\r\n                    <i onClick={likeHandler} className={\"material-icons\"} style={{fontSize: '40px', cursor: 'pointer'}}>{isLiked ? 'favorite' : 'favorite_border'}</i>\r\n                    <h6>{likesCount} likes</h6>\r\n                    <p>{post.body}</p>\r\n                    <small><strong>Comments</strong></small>\r\n                    {comments.map(item => <div key={item._id}>{item.owner.displayName + ': ' + item.text}</div>)}\r\n                    <input value={newComment} onChange={(e) => setNewComment(e.target.value)} type='text' placeholder='add a comment'/>\r\n                    <button onClick={newCommentHandler}>Send comment</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token,\r\n    user: state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PostItem);","D:\\xampp73\\xampp\\htdocs\\react\\Social-Network\\client\\src\\components\\Spinner\\Spinner.js",[],{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},{"ruleId":"174","severity":1,"message":"178","line":1,"column":28,"nodeType":"176","messageId":"177","endLine":1,"endColumn":38},{"ruleId":"174","severity":1,"message":"179","line":3,"column":34,"nodeType":"176","messageId":"177","endLine":3,"endColumn":44},{"ruleId":"180","severity":1,"message":"181","line":28,"column":8,"nodeType":"182","endLine":28,"endColumn":25,"suggestions":"183"},{"ruleId":"174","severity":1,"message":"184","line":6,"column":8,"nodeType":"176","messageId":"177","endLine":6,"endColumn":16},{"ruleId":"180","severity":1,"message":"185","line":21,"column":17,"nodeType":"186","endLine":21,"endColumn":83},{"ruleId":"187","severity":1,"message":"188","line":55,"column":20,"nodeType":"189","messageId":"190","endLine":55,"endColumn":22},{"ruleId":"191","severity":1,"message":"192","line":85,"column":69,"nodeType":"193","endLine":85,"endColumn":100},{"ruleId":"191","severity":1,"message":"192","line":87,"column":67,"nodeType":"193","endLine":87,"endColumn":98},{"ruleId":"191","severity":1,"message":"192","line":131,"column":85,"nodeType":"193","endLine":131,"endColumn":88},{"ruleId":"191","severity":1,"message":"192","line":131,"column":109,"nodeType":"193","endLine":131,"endColumn":112},{"ruleId":"174","severity":1,"message":"194","line":12,"column":12,"nodeType":"176","messageId":"177","endLine":12,"endColumn":17},{"ruleId":"174","severity":1,"message":"195","line":12,"column":28,"nodeType":"176","messageId":"177","endLine":12,"endColumn":38},{"ruleId":"180","severity":1,"message":"196","line":14,"column":15,"nodeType":"197","endLine":20,"endColumn":6},{"ruleId":"180","severity":1,"message":"198","line":20,"column":8,"nodeType":"182","endLine":20,"endColumn":10,"suggestions":"199"},{"ruleId":"174","severity":1,"message":"200","line":3,"column":9,"nodeType":"176","messageId":"177","endLine":3,"endColumn":13},{"ruleId":"174","severity":1,"message":"201","line":4,"column":10,"nodeType":"176","messageId":"177","endLine":4,"endColumn":16},{"ruleId":"174","severity":1,"message":"202","line":17,"column":12,"nodeType":"176","messageId":"177","endLine":17,"endColumn":19},{"ruleId":"174","severity":1,"message":"194","line":17,"column":21,"nodeType":"176","messageId":"177","endLine":17,"endColumn":26},{"ruleId":"174","severity":1,"message":"195","line":17,"column":37,"nodeType":"176","messageId":"177","endLine":17,"endColumn":47},{"ruleId":"180","severity":1,"message":"203","line":40,"column":8,"nodeType":"182","endLine":40,"endColumn":18,"suggestions":"204"},{"ruleId":"174","severity":1,"message":"205","line":57,"column":9,"nodeType":"176","messageId":"177","endLine":57,"endColumn":18},{"ruleId":"174","severity":1,"message":"206","line":7,"column":10,"nodeType":"176","messageId":"177","endLine":7,"endColumn":24},{"ruleId":"174","severity":1,"message":"207","line":9,"column":10,"nodeType":"176","messageId":"177","endLine":9,"endColumn":16},{"ruleId":"174","severity":1,"message":"194","line":21,"column":12,"nodeType":"176","messageId":"177","endLine":21,"endColumn":17},{"ruleId":"174","severity":1,"message":"195","line":21,"column":28,"nodeType":"176","messageId":"177","endLine":21,"endColumn":38},{"ruleId":"174","severity":1,"message":"202","line":22,"column":12,"nodeType":"176","messageId":"177","endLine":22,"endColumn":19},{"ruleId":"174","severity":1,"message":"208","line":22,"column":21,"nodeType":"176","messageId":"177","endLine":22,"endColumn":31},{"ruleId":"180","severity":1,"message":"209","line":48,"column":8,"nodeType":"182","endLine":48,"endColumn":10,"suggestions":"210"},{"ruleId":"174","severity":1,"message":"211","line":9,"column":8,"nodeType":"176","messageId":"177","endLine":9,"endColumn":15},{"ruleId":"174","severity":1,"message":"202","line":12,"column":12,"nodeType":"176","messageId":"177","endLine":12,"endColumn":19},{"ruleId":"174","severity":1,"message":"194","line":12,"column":21,"nodeType":"176","messageId":"177","endLine":12,"endColumn":26},{"ruleId":"174","severity":1,"message":"195","line":12,"column":37,"nodeType":"176","messageId":"177","endLine":12,"endColumn":47},{"ruleId":"180","severity":1,"message":"212","line":65,"column":8,"nodeType":"182","endLine":65,"endColumn":27,"suggestions":"213"},{"ruleId":"174","severity":1,"message":"200","line":3,"column":10,"nodeType":"176","messageId":"177","endLine":3,"endColumn":14},{"ruleId":"174","severity":1,"message":"194","line":10,"column":12,"nodeType":"176","messageId":"177","endLine":10,"endColumn":17},{"ruleId":"174","severity":1,"message":"195","line":10,"column":28,"nodeType":"176","messageId":"177","endLine":10,"endColumn":38},{"ruleId":"180","severity":1,"message":"196","line":17,"column":15,"nodeType":"197","endLine":22,"endColumn":6},{"ruleId":"180","severity":1,"message":"198","line":22,"column":8,"nodeType":"182","endLine":22,"endColumn":10,"suggestions":"214"},{"ruleId":"174","severity":1,"message":"215","line":42,"column":11,"nodeType":"176","messageId":"177","endLine":42,"endColumn":21},{"ruleId":"174","severity":1,"message":"216","line":43,"column":15,"nodeType":"176","messageId":"177","endLine":43,"endColumn":19},{"ruleId":"174","severity":1,"message":"202","line":7,"column":12,"nodeType":"176","messageId":"177","endLine":7,"endColumn":19},{"ruleId":"174","severity":1,"message":"194","line":7,"column":21,"nodeType":"176","messageId":"177","endLine":7,"endColumn":26},{"ruleId":"174","severity":1,"message":"195","line":7,"column":37,"nodeType":"176","messageId":"177","endLine":7,"endColumn":47},{"ruleId":"180","severity":1,"message":"196","line":14,"column":15,"nodeType":"197","endLine":19,"endColumn":6},{"ruleId":"180","severity":1,"message":"217","line":19,"column":8,"nodeType":"182","endLine":19,"endColumn":17,"suggestions":"218"},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'createRef' is defined but never used.","Identifier","unusedVar","'forwardRef' is defined but never used.","'HashRouter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fixOffset'. Either include it or remove the dependency array.","ArrayExpression",["221"],"'AuthPage' is defined but never used.","Assignments to the 'width' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'error' is assigned a value but never used.","'clearError' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'props.token' and 'request'. Either include them or remove the dependency array.",["222"],"'Link' is defined but never used.","'Avatar' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getLastMessage'. Either include it or remove the dependency array.",["223"],"'timestamp' is assigned a value but never used.","'SearchOutlined' is defined but never used.","'Button' is defined but never used.","'setLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getDialogs'. Either include it or remove the dependency array.",["224"],"'btnBack' is defined but never used.","React Hook useEffect has missing dependencies: 'props' and 'request'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["225"],["226"],"'deletePost' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isLoaded', 'post._id', 'request', and 'token'. Either include them or remove the dependency array.",["227"],"no-global-assign","no-unsafe-negation",{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"230","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [fixOffset, isAuthenticated]",{"range":"241","text":"242"},"Update the dependencies array to be: [props.token, request]",{"range":"243","text":"244"},"Update the dependencies array to be: [getLastMessage, props.id]",{"range":"245","text":"246"},"Update the dependencies array to be: [getDialogs]",{"range":"247","text":"248"},"Update the dependencies array to be: [props, props.chat.chatId, request]",{"range":"249","text":"250"},{"range":"251","text":"244"},"Update the dependencies array to be: [isLiked, isLoaded, post._id, request, token]",{"range":"252","text":"253"},[953,970],"[fixOffset, isAuthenticated]",[744,746],"[props.token, request]",[1407,1417],"[getLastMessage, props.id]",[1702,1704],"[getDialogs]",[2215,2234],"[props, props.chat.chatId, request]",[881,883],[868,877],"[isLiked, isLoaded, post._id, request, token]"]