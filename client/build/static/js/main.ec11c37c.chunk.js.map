{"version":3,"sources":["redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/store.js","hooks/http.hook.js","components/Header/Header.js","hooks/toLocalDate.hook.js","pages/DialogsPage/Dialogs/DialogItem.js","components/Spinner/Spinner.js","pages/DialogsPage/Dialogs/Dialogs.js","pages/DialogsPage/Messages/MessageItem.js","pages/DialogsPage/Messages/Messages.js","pages/DialogsPage/Messages/MessagesContainer.js","pages/DialogsPage/DialogsPage.js","pages/HomePage/PostItem.js","hooks/imgParams.hook.js","pages/ProfilePage/Profile.js","pages/ProfilePage/UserProfile.js","pages/UsersPage/Users.js","pages/HomePage/HomePage.js","pages/AuthPage/AuthPage.js","App.js","routes.js","index.js"],"names":["ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","initialState","posts","id","message","likesCount","newPostText","profile","profileReducer","state","action","type","newPost","newText","dialogs","messages","chat","isDialogSelected","setMessagesAC","setDialogsAC","setChatAC","setIsDialogSelectedAC","dialogsReducer","newMessageBody","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","map","u","userId","followed","count","filter","token","user","loginAC","jwtSecret","authReducer","sessionStorage","setItem","JSON","stringify","removeItem","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","store","createStore","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","res","json","data","ok","Error","clearError","connect","dispatch","logout","props","history","useHistory","searchUsers","setSearchUsers","foundUsers","setFoundUsers","document","onmouseup","e","searchUser","querySelector","path","includes","useEffect","query","Authorization","console","log","className","to","style","position","top","transform","placeholder","value","onChange","target","length","_id","onClick","Avatar","src","profileImg","displayName","preventDefault","push","toLocalDate","t","date","Date","temp","getTime","getTimezoneOffset","toISOString","split","time","replace","pusher","Pusher","cluster","setDialogs","setMessages","setChat","setIsDialogSelected","dialogsLastMsg","setDialogsLastMsg","isLoaded","setIsLoaded","extra","setExtra","forEach","el","getLastMessage","channel","subscribe","bind","unbind_all","unsubscribe","selectedDialog","conversation","chatName","chatImg","chatId","name","owner","parseInt","timestamp","Spinner","searchChats","setSearchChats","useRef","dialogsHeader","dialogsItems","getDialogs","current","classList","remove","add","addNewChat","prompt","firstMsg","now","ref","paddingLeft","right","paddingRight","dialog","Message","userName","MessagesList","newMessage","setNewMessage","isOpenedEmoji","setIsOpenedEmoji","chosenEmoji","setChosenEmoji","inputMessage","focus","emojiDiv","onSendMessageClick","fixScroll","block","scrollTop","scrollHeight","window","addEventListener","removeEventListener","prev","emoji","height","width","fontSize","left","IconButton","SearchOutlined","MoreVert","cursor","onKeyUp","keyCode","disabled","zIndex","disableAutoFocus","onEmojiClick","event","emojiObject","sendMessage","post","likes","isLiked","setIsLiked","setLikesCount","comments","setComments","commentsCount","setCommentsCount","showAllComments","setShowAllComments","newComment","setNewComment","commentsField","createdAt","postId","newCommentHandler","text","toggle","picture","alt","color","item","bottom","imgParams","Promise","rej","solve","then","params","i","img","createElement","resolve","reject","onload","minWidth","minHeight","login","isCreatePostOpen","setIsCreatePostOpen","isPostDetailOpen","setIsPostDetailOpen","isChangingProfileImage","setIsChangingProfileImage","setBody","newPostImage","setNewPostImage","newProfileImage","setNewProfileImage","myPosts","setMyPosts","followData","setFollowData","profileImgParams","setProfileImgParams","isChangesLoading","setIsChangesLoading","selectedPost","setSelectedPost","newfollowData","setPostData","formData","FormData","append","catch","err","changeProfileImage","newData","parse","getItem","deletePost","followers","following","accept","files","userProfile","setUserProfile","isFollowing","setIsFollowing","useParams","followUser","followId","unfollowUser","unfollowId","pop","other","allPosts","setAllPosts","email","password","form","setForm","isRegistrateForm","setIsRegistrateForm","changeHandler","registerHandler","changeFormHandler","alert","loginHandler","htmlFor","required","app","isAuthenticated","routes","component","DialogsPage","exact","render","UserProfile","HomePage","fixOffset","clientHeight","AuthPage","vh","innerHeight","documentElement","setProperty","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.ec11c37c.chunk.js","sourcesContent":["const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    newPostText: '',\r\n    profile: null\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text })\r\n\r\nexport default profileReducer;","let initialState = {\r\n    dialogs: [],\r\n    messages: [],\r\n    chat: {},\r\n    isDialogSelected: false\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SEND_MESSAGE':\r\n            return {\r\n                ...state\r\n            }\r\n        case 'SET_MESSAGES':\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: action.messages\r\n            };\r\n        case 'SET_DIALOGS':\r\n            return {\r\n                ...state,\r\n                dialogs: action.dialogs\r\n            };\r\n        case 'SET_CHAT':\r\n            return {\r\n                ...state,\r\n                chat: action.chat\r\n            };\r\n        case 'SET_IS_DIALOG_SELECTED':\r\n            return {\r\n                ...state,\r\n                isDialogSelected: action.isDialogSelected\r\n        };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = () => ({type: 'SEND_MESSAGE'});\r\nexport const setMessagesAC = (messages) => ({type: 'SET_MESSAGES', messages});\r\nexport const setDialogsAC = (dialogs) => ({type: 'SET_DIALOGS', dialogs});\r\nexport const setChatAC = (chat) => ({type: 'SET_CHAT', chat});\r\nexport const setIsDialogSelectedAC = (isDialogSelected) => ({type: 'SET_IS_DIALOG_SELECTED', isDialogSelected});\r\n\r\nexport default dialogsReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId })\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport default usersReducer;","let initialState = {\r\n    token: null,\r\n    user: {}\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            sessionStorage.setItem('storageName', JSON.stringify({\r\n                token: action.jwtSecret,\r\n                user: action.user\r\n            }));\r\n            \r\n            return {\r\n                ...state,\r\n                token: action.jwtSecret,\r\n                user: action.user\r\n            }\r\n        case 'LOGOUT':\r\n            sessionStorage.removeItem('storageName');\r\n\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: {}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const loginAC = (jwtSecret, user) => ({type: 'LOGIN', jwtSecret, user});\r\nexport const logoutAC = () => ({type: 'LOGOUT'});\r\nexport default authReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const request = useCallback( async (url, method = 'GET', body = null, headers = {}) => {\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body);\r\n                headers['Content-Type'] = 'application/json';\r\n            }\r\n\r\n            // const res = await fetch(`http://localhost:5000${url}`, {method, body, headers});\r\n            const res = await fetch(`https://kalinaserver.herokuapp.com${url}`, {method, body, headers});\r\n            const data = await res.json();\r\n\r\n            if (!res.ok) {\r\n                throw new Error(data.message || 'Something goes wrong');\r\n            }\r\n\r\n            setLoading(false);\r\n\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n    \r\n    return {loading, error, request, clearError};\r\n} ","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport { useHttp } from '../../hooks/http.hook';\r\nimport { logoutAC } from '../../redux/auth-reducer';\r\nimport './Header.scss';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nconst Header = (props) => {\r\n    const {logout} = props;\r\n    const history = useHistory();\r\n    const {error, request, clearError} = useHttp();\r\n    const [searchUsers, setSearchUsers] = useState('');\r\n    const [foundUsers, setFoundUsers] = useState([]);\r\n\r\n    const logoutHandler = (e) => {\r\n        e.preventDefault();\r\n        logout(); \r\n        history.push('/');\r\n    };\r\n\r\n    document.onmouseup = (e) => {\r\n        const searchUser = document.querySelector('.search-user');\r\n        if (!e.path.includes(searchUser)) {\r\n            setFoundUsers([]);\r\n            setSearchUsers('');\r\n        }\r\n    }\r\n    \r\n    useEffect(async () => {\r\n        if (searchUsers) {\r\n            try{\r\n                const users = await request('/api/users/post/users-search', 'POST', {query: searchUsers}, {Authorization: `Bearer ${props.token}`});\r\n                setFoundUsers(users);\r\n            } catch (err) {console.log(err)}\r\n        } else {\r\n            setFoundUsers([]);\r\n        }\r\n    }, [searchUsers]);\r\n\r\n    return (\r\n        <div className='header-wrapper'>\r\n            <div className='header'>\r\n                <span className=\"label\"><Link to=\"/\"><big>Kalina</big></Link></span>\r\n                <div className=\"search-user\">\r\n                    <i className=\"material-icons\" style={{position: 'absolute', top: '50%', transform: 'translateY(-50%)'}}>search</i>\r\n                    <input type=\"text\" placeholder=\"Search users...\" id=\"search-input\" value={searchUsers} onChange={(e) => setSearchUsers(e.target.value)}/>\r\n                    {\r\n                        foundUsers.length !== 0 &&\r\n                        <div className=\"dropdown-content\">\r\n                            {foundUsers.map(user => <Link to={props.user._id !== user._id ? '/profile/' + user._id : '/profile'}  key={user._id} onClick={() => setSearchUsers('')}><div><Avatar src={user.profileImg}/><p>{user.displayName}</p></div></Link>)}\r\n                        </div> \r\n                    }\r\n                </div>\r\n                <div className=\"navigation\">\r\n                    <Link to=\"/\"><i className=\"material-icons\">home</i></Link>\r\n                    <Link to=\"/profile\"><i className=\"material-icons\">person</i></Link>\r\n                    <Link to=\"/dialogs\"><i className=\"material-icons\">message</i></Link>\r\n                    <Link to=\"/users\"><i className=\"material-icons\">people</i></Link>\r\n                    <Link to=\"/\" onClick={logoutHandler}><i className=\"material-icons\">exit_to_app</i></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logout: () => {\r\n            dispatch(logoutAC());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","const toLocalDate = (t) => {\r\n    const date = new Date(t);\r\n    const dateWithOffset = new Date(date.getTime() - (date.getTimezoneOffset() * 60000)).toISOString();\r\n    const temp = dateWithOffset.split('T');\r\n    return {date: temp[0], time: temp[1].replace(/:\\d+\\..*$/g, '')}\r\n};\r\n\r\nexport default toLocalDate;\r\n\r\n// temp[0].replace(/^\\d+-/g, '')","import React, { useEffect, useState } from 'react';\r\nimport './DialogItem.scss';\r\nimport { Avatar } from '@material-ui/core';\r\nimport Pusher from 'pusher-js';\r\nimport { setChatAC, setDialogsAC, setIsDialogSelectedAC, setMessagesAC } from \"../../../redux/dialogs-reducer\";\r\nimport { connect } from 'react-redux';\r\nimport { useHttp } from '../../../hooks/http.hook';\r\nimport toLocalDate from '../../../hooks/toLocalDate.hook';\r\n\r\nconst pusher = new Pusher('b634efb073fba40fbf3a', {\r\n    cluster: 'eu'\r\n});\r\n\r\nconst DialogItem = (props) => {\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [dialogsLastMsg, setDialogsLastMsg] = useState({});\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [extra, setExtra] = useState({});\r\n\r\n    useEffect(() => {\r\n        props.extra.forEach(el => {\r\n            if (el.id !== props.user._id) {\r\n                setExtra(el);\r\n            }\r\n        });\r\n        \r\n        return () =>  props.setIsDialogSelected(false);\r\n    }, []);\r\n\r\n    const getLastMessage = async () => {\r\n        try {\r\n            const data = await request(`/api/chats/get/lastMessage?id=${props.id}`, 'GET', null, {Authorization: `Bearer ${props.token}`});\r\n            setDialogsLastMsg(data);\r\n            setIsLoaded(true);\r\n        } catch(err) {console.log(err)}\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLastMessage();\r\n        \r\n        const channel = pusher.subscribe('messages');\r\n        channel.bind('newMessage', () => {\r\n            getLastMessage();   \r\n        });\r\n\r\n        return () => {\r\n            channel.unbind_all();\r\n            channel.unsubscribe();\r\n        };\r\n    }, [props.id]);\r\n\r\n    const selectedDialog = async () => {\r\n        try {\r\n            const data = await request(`/api/chats/get/conversation?id=${props.id}`, 'GET', null, {Authorization: `Bearer ${props.token}`});\r\n            props.setMessages(data.conversation);\r\n            props.setChat({\r\n                chatName: extra.displayName || data.chatName,\r\n                chatImg: extra.profileImg || data.chatImg,\r\n                chatId: props.id\r\n            });\r\n            props.setIsDialogSelected(true);\r\n        } catch(err) {console.log(err)}\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {isLoaded &&\r\n            <div onClick={selectedDialog} className='dialogItem'>\r\n                <div className='dialogItem__info'>\r\n                    <div className='dialogItem__info-avatar'><Avatar src={extra.profileImg}/></div>\r\n                    <div className='dialogItem__info-main'>\r\n                        <div><h1>{extra.displayName || props.name}</h1></div>\r\n                        <span className='dialogItem__info-message'>{dialogsLastMsg.owner.displayName}: {dialogsLastMsg.message}</span>\r\n                    </div>\r\n                    <div className=\"timeStamp\">\r\n                        <div>{toLocalDate(parseInt(dialogsLastMsg.timestamp)).date}</div>\r\n                        <div>{toLocalDate(parseInt(dialogsLastMsg.timestamp)).time}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        token: state.auth.token,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setDialogs: (dialogs) => {\r\n            dispatch(setDialogsAC(dialogs));\r\n        },\r\n        setMessages: (messages) => {\r\n            dispatch(setMessagesAC(messages));\r\n        },\r\n        setChat: chat => {\r\n            dispatch(setChatAC(chat))\r\n        },\r\n        setIsDialogSelected: (a) => {\r\n            dispatch(setIsDialogSelectedAC(a))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogItem);","import React from 'react';\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import React, { useEffect, useRef } from 'react';\r\n// import ChatIcon from '@material-ui/icons/Chat';\r\n// import DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport \"./Dialogs.scss\";\r\n// import { IconButton, Avatar } from '@material-ui/core';\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport DialogItem from './DialogItem';\r\nimport { Button } from '@material-ui/core';\r\nimport Pusher from 'pusher-js';\r\nimport { useHttp } from '../../../hooks/http.hook';\r\nimport { setDialogsAC } from '../../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport Spinner from '../../../components/Spinner/Spinner';\r\n\r\nconst pusher = new Pusher('b634efb073fba40fbf3a', {\r\n    cluster: 'eu'\r\n});\r\n\r\nconst DialogsList = (props) => {    \r\n    const {error, request, clearError} = useHttp();\r\n    const [loading, setLoading] = useState(true);\r\n    const [searchChats, setSearchChats] = useState('');\r\n    const dialogs = useRef(null);\r\n    const dialogsHeader = useRef(null);\r\n    const dialogsItems = useRef(null);\r\n\r\n    const getDialogs = async () => {\r\n        try {\r\n            const data = await request('/api/chats/get/conversations', 'GET', null, {\r\n                Authorization: `Bearer ${props.token}`,\r\n            });\r\n            props.setDialogs(data);\r\n            setLoading(false);\r\n        } catch(err) {console.log(err)}\r\n    }\r\n    \r\n    useEffect(() => {\r\n        !props.isDialogSelected ? dialogs.current.classList.add('show') : dialogs.current.classList.remove('show');\r\n    }, [props.isDialogSelected])\r\n    \r\n    useEffect(() => {\r\n        getDialogs();\r\n        \r\n        const channel = pusher.subscribe('chats');\r\n        channel.bind('newChat', () => {\r\n            getDialogs();\r\n        });\r\n    }, []);\r\n\r\n    const addNewChat = async () => {\r\n        const chatName = prompt('Enter a chat name');\r\n        const firstMsg = prompt('Send a welcome message');\r\n\r\n        if(chatName && firstMsg) {\r\n            try {\r\n                let chatId = '';\r\n\r\n                const data = await request('/api/chats/new/conversation', 'POST', {chatName}, {Authorization: `Bearer ${props.token}`});\r\n\r\n                chatId = data._id\r\n\r\n                await request(`/api/chats/new/message?id=${chatId}`, 'POST', {\r\n                    message: firstMsg,\r\n                    timestamp: Date.now()\r\n                }, {Authorization: `Bearer ${props.token}`});\r\n            } catch(err) {console.log(err)}\r\n        }\r\n    }\r\n    \r\n    return (\r\n            <div ref={dialogs} className={'dialogs show'}>\r\n                <div ref={dialogsHeader} className='dialogs__header'>\r\n                    <div className=\"search-chats\">\r\n                        <i className=\"material-icons\" style={{position: 'absolute', top: '50%', transform: 'translateY(-50%)', paddingLeft: '5px'}}>search</i>\r\n                        <input type=\"text\" placeholder=\"Search the chat or start new\" id=\"search-chats-input\" value={searchChats} onChange={(e) => setSearchChats(e.target.value)}/>\r\n                        <i onClick={addNewChat} className=\"material-icons\" style={{position: 'absolute', top: '50%', right: '0', transform: 'translateY(-50%)', paddingRight: '5px'}}>add</i>\r\n                    </div>\r\n                </div>\r\n                <div ref={dialogsItems} className='dialogs__items'>\r\n                {\r\n                    loading ? \r\n                    <Spinner />\r\n                    :\r\n                    props.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} timestamp={dialog.timestamp} extra={dialog.extra}/> )\r\n                }\r\n                </div>\r\n            </div>\r\n    )  \r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        isDialogSelected: state.dialogsPage.isDialogSelected,\r\n        user: state.auth.user,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setDialogs: (dialogs) => {\r\n            dispatch(setDialogsAC(dialogs));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogsList);","import React from 'react';\r\nimport toLocalDate from '../../../hooks/toLocalDate.hook';\r\nimport './MessageItem.scss';\r\n\r\nconst Message = (props) => {\r\n    const timestamp = toLocalDate(parseInt(props.message.timestamp));\r\n    \r\n    return (\r\n        <div className={`messages__item  ${props.message.owner.displayName === props.userName && 'messages__receiver'}`}>\r\n            <span className='message__name'>{props.message.owner.displayName}</span>\r\n            <div className='message'>{props.message.message}</div>\r\n            <span className='message__timestamp'>{timestamp.date + ' ' + timestamp.time}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, InsertEmoticon, MoreVert, SearchOutlined } from '@material-ui/icons';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport './Messages.scss';\r\nimport Pusher from 'pusher-js';\r\nimport MessageItem from './MessageItem';\r\nimport { useHttp } from '../../../hooks/http.hook';\r\nimport Picker from 'emoji-picker-react';\r\n\r\nconst MessagesList = (props) => {\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [isOpenedEmoji, setIsOpenedEmoji] = useState(false);\r\n    const [chosenEmoji, setChosenEmoji] = useState(null);\r\n    const inputMessage = useRef(null);\r\n\r\n    const onEmojiClick = (event, emojiObject) => {\r\n        setChosenEmoji(emojiObject);\r\n    };\r\n    \r\n    useEffect(() => {\r\n        document.onmouseup = (e) => {\r\n            inputMessage.current.focus();\r\n            const emojiDiv = document.querySelector('.emojiDiv');\r\n            if (!e.path.includes(emojiDiv)) {\r\n                setIsOpenedEmoji(false);\r\n            }\r\n        }\r\n        \r\n        return () => document.onmouseup = null;\r\n    }, [isOpenedEmoji]);\r\n    \r\n    const onSendMessageClick = async () => {\r\n        setNewMessage('');\r\n        setIsOpenedEmoji(false);\r\n        try {\r\n            await request(`/api/chats/new/message?id=${props.chat.chatId}`, 'POST', {\r\n                message: newMessage,\r\n                timestamp: Date.now()\r\n            }, {Authorization: `Bearer ${props.token}`});\r\n        } catch(err) {console.log(err)}\r\n    }\r\n\r\n    const fixScroll = () => {\r\n        try {\r\n            const block = document.querySelector('.messages__body');\r\n            block.scrollTop = block.scrollHeight;\r\n        } catch{}\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => fixScroll());\r\n        inputMessage.current.focus();\r\n\r\n        return () => window.removeEventListener('resize', () => fixScroll());\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const pusher = new Pusher('b634efb073fba40fbf3a', {\r\n            cluster: 'eu'\r\n        });\r\n      \r\n        const channel = pusher.subscribe('messages');\r\n        channel.bind('newMessage', async () => {\r\n            try {\r\n                const data = await request(`/api/chats/get/conversation?id=${props.chat.chatId}`, 'GET', null, {Authorization: `Bearer ${props.token}`});\r\n                props.setMessages(data.conversation);\r\n                fixScroll();\r\n            } catch {}\r\n        });\r\n\r\n        fixScroll();\r\n\r\n        return () => {\r\n            channel.unbind_all();\r\n            channel.unsubscribe();\r\n        };\r\n    }, [props.chat.chatId]);\r\n\r\n    useEffect(() => {\r\n        if (chosenEmoji)\r\n        setNewMessage(prev => prev + chosenEmoji.emoji);\r\n    }, [chosenEmoji]);\r\n\r\n    return (\r\n        <div className='messages'>\r\n            <div className='messages__header'>\r\n                <div className=\"btnBack\" style={{height: '50px', width: '30px'}}>\r\n                    <i onClick={() => props.setIsDialogSelected(false)} className=\"material-icons\" style={{fontSize: '50px', position: 'absolute', left: '-5px'}}>chevron_left</i>\r\n                </div>\r\n                <Avatar src={props.chat.chatImg}/>\r\n                <div className='messages__headerInfo'>\r\n                    <h3>{props.chat.chatName}</h3>\r\n                </div>\r\n                <div className='messages__headerRight'>\r\n                    <IconButton>\r\n                        <SearchOutlined/>\r\n                    </IconButton>\r\n                    {/* <IconButton>\r\n                        <AttachFile/>\r\n                    </IconButton> */}\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className='messages__body'>\r\n                { props.messages.map( message => <MessageItem userName={props.user.displayName} message={message} key={message._id} /> ) }\r\n            </div>\r\n            <div className='messages__footer'>\r\n                <i onClick={() => setIsOpenedEmoji(!isOpenedEmoji)} \r\n                    className={\"material-icons emojicon\"} \r\n                    style={{fontSize: '35px', cursor: 'pointer', width: '35px'}} >insert_emoticon</i>\r\n                <input \r\n                    ref={inputMessage}\r\n                    value={newMessage} \r\n                    onChange={e => {setNewMessage(e.target.value); setIsOpenedEmoji(false);}} \r\n                    onKeyUp={e => (e.keyCode === 13 && newMessage) ? onSendMessageClick() : false} \r\n                    type='text' \r\n                    placeholder='Enter your message'/>\r\n                <button onClick={onSendMessageClick} disabled={!newMessage}><i className={\"material-icons\"} style={{fontSize: '35px', cursor: 'pointer', width: '35px'}}>send</i></button>\r\n            </div>\r\n            {isOpenedEmoji && \r\n            <div className='emojiDiv' style={{position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', zIndex: '1000'}}>\r\n                <Picker disableAutoFocus={true} onEmojiClick={onEmojiClick} />\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessagesList;","import {sendMessageCreator, setChatAC, setIsDialogSelectedAC, setMessagesAC} from \"../../../redux/dialogs-reducer\";\r\nimport MessagesList from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.dialogsPage.messages,\r\n        chat: state.dialogsPage.chat,\r\n        user: state.auth.user,\r\n        token: state.auth.token\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        },\r\n        setMessages: (messages) => {\r\n            dispatch(setMessagesAC(messages));\r\n        },\r\n        setChat: chat => {\r\n            dispatch(setChatAC(chat))\r\n        },\r\n        setIsDialogSelected: (a) => {\r\n            dispatch(setIsDialogSelectedAC(a))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessagesList);\r\n","import React from 'react';\r\nimport './DialogsPage.scss';\r\nimport Dialogs from './Dialogs/Dialogs';\r\nimport Messages from './Messages/MessagesContainer';\r\nimport { connect } from 'react-redux';\r\n \r\nconst DialogsPage = (props) => {\r\n    return (\r\n        <div className='dialogs-page'>\r\n            <Dialogs />\r\n            {!props.isDialogSelected ? <div className='chooseChat'>Choose a chat</div> : <Messages />}\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isDialogSelected: state.dialogsPage.isDialogSelected\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DialogsPage);","import { connect } from 'react-redux';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { useState } from 'react';\r\nimport { useHttp } from '../../hooks/http.hook';\r\nimport { Link } from 'react-router-dom';\r\nimport { Avatar } from '@material-ui/core';\r\nimport Picker from 'emoji-picker-react';\r\nimport toLocalDate from '../../hooks/toLocalDate.hook';\r\n\r\nconst PostItem = ({post, token, user}) => {\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [isLiked, setIsLiked] = useState(post.likes.includes(user._id));\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [likesCount, setLikesCount] = useState(post.likes.length);\r\n    const [comments, setComments] = useState(post.comments);\r\n    const [commentsCount, setCommentsCount] = useState(post.comments.length);\r\n    const [showAllComments, setShowAllComments] = useState(false);\r\n    const [newComment, setNewComment] = useState('');\r\n    const commentsField = useRef(null);\r\n    const [chosenEmoji, setChosenEmoji] = useState(null);\r\n    const [isOpenedEmoji, setIsOpenedEmoji] = useState(false);\r\n    const timestamp = toLocalDate(post.createdAt);\r\n\r\n    const onEmojiClick = (event, emojiObject) => setChosenEmoji(emojiObject);\r\n    \r\n    useEffect(() => {\r\n        document.onmouseup = (e) => {\r\n            const emojiDiv = document.querySelector('.emojiDiv');\r\n            if (!e.path.includes(emojiDiv)) {\r\n                setIsOpenedEmoji(false);\r\n            }\r\n        }\r\n\r\n        return () => document.onmouseup = null;\r\n    }, [isOpenedEmoji]);\r\n\r\n    useEffect(async () => {\r\n        if (isLoaded) {\r\n            const data = await request(`/api/posts/put/${isLiked ? 'like' : 'unlike'}`, 'PUT', {postId: post._id}, {Authorization: `Bearer ${token}`});\r\n            setLikesCount(data.likes.length);\r\n        }\r\n    }, [isLiked]);\r\n\r\n    const likeHandler = () => {\r\n        setIsLoaded(true);\r\n        setIsLiked(!isLiked);\r\n    }\r\n    \r\n    const newCommentHandler = async () => {\r\n        const data = await request(`/api/posts/put/comment`, 'PUT', {postId: post._id, text: newComment}, {Authorization: `Bearer ${token}`});\r\n        setComments(data.comments);\r\n        setNewComment('');\r\n        setCommentsCount(data.comments.length);\r\n        setIsOpenedEmoji(false);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        commentsField.current.classList.toggle('show-comments');\r\n    }, [showAllComments]);\r\n\r\n    useEffect(() => {\r\n        if (chosenEmoji) setNewComment(prev => prev + chosenEmoji.emoji);\r\n    }, [chosenEmoji]);\r\n\r\n    return (\r\n        <div className='element'>\r\n            <div className='card'>\r\n                <div className='card-header'>\r\n                    <Link to={user._id !== post.owner._id ? '/profile/' + post.owner._id : '/profile'}><Avatar src={post.owner.profileImg}/><p>{post.owner.displayName}</p></Link>\r\n                </div>\r\n                <div className='card-image'>\r\n                    <img src={post.picture} alt=\"\"/>\r\n                </div>\r\n                <div className='card-content'>\r\n                    <i onClick={likeHandler} className={\"material-icons\"} style={{fontSize: '35px', cursor: 'pointer', color: 'red'}} >{isLiked ? 'favorite' : 'favorite_border'}</i>\r\n                    <small><strong>Likes: {likesCount}</strong></small>\r\n                    <p><strong>{post.owner.displayName}</strong> {post.body}</p>\r\n                    <div><strong className='show-comments-btn' onClick={() => setShowAllComments(!showAllComments)}>{!showAllComments ? 'Show' : 'Hide'} all comments ({commentsCount})</strong></div>\r\n                    <div className={'comments show-comments'} ref={commentsField}>\r\n                        {comments.map(item => <div key={item._id}><strong>{item.owner.displayName}</strong> {item.text}</div>)}\r\n                    </div>\r\n                    <div className='timestamp'>{timestamp.date + ' ' + timestamp.time}</div>\r\n                </div>\r\n                <div className='new-comment'>\r\n                    {isOpenedEmoji && \r\n                        <div className='emojiDiv' style={{position: 'absolute', bottom: '20px', left: '50%', transform: 'translate(-50%, -32px)', zIndex: '1000'}}>\r\n                            <Picker disableAutoFocus={true} onEmojiClick={onEmojiClick} />\r\n                        </div>\r\n                    }\r\n                    <i onClick={() => setIsOpenedEmoji(!isOpenedEmoji)} className={\"material-icons emojicon\"} style={{fontSize: '35px', cursor: 'pointer', width: '35px'}} >insert_emoticon</i>\r\n                    <input value={newComment} onChange={e => {setNewComment(e.target.value); setIsOpenedEmoji(false);}} onKeyUp={e => (e.keyCode === 13 && newComment) ? newCommentHandler() : false} type='text' placeholder='Add a comment...'/>\r\n                    <button onClick={newCommentHandler} disabled={!newComment}>Publish</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token,\r\n    user: state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PostItem);","function imgParams(data) {\r\n    return new Promise((res, rej) => {\r\n        if (typeof(data) === 'string') {\r\n            solve(data).then(params => res(params));\r\n        } else {\r\n            if (data.length === 0) res(data);\r\n            \r\n            for (let i = 0; i < data.length; ++i){\r\n                solve(data[i].picture).then((params) => {\r\n                    data[i].params = params;\r\n                    \r\n                    if (i+1 === data.length) res(data);\r\n                });\r\n            }\r\n        }\r\n\r\n        function solve(src) {\r\n            let img = document.createElement('img');\r\n            img.src = src;\r\n            return new Promise((resolve, reject) => {\r\n                img.onload = () => { \r\n                    resolve(\r\n                        img.width >= img.height ? \r\n                        {height: '100%', minWidth: '100%', width: 'none', minHeight: 'none'} \r\n                        : \r\n                        {height: 'none', minWidth: 'none', width: '100%', minHeight: '100%'}\r\n                    );\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport default imgParams;","import { connect } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHttp } from '../../hooks/http.hook';\r\nimport './Profile.scss';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport { loginAC } from '../../redux/auth-reducer';\r\nimport PostItem from '../HomePage/PostItem';\r\nimport imgParams from '../../hooks/imgParams.hook';\r\n\r\n\r\nconst Profile = (props) => {\r\n    const {error, request, clearError} = useHttp();\r\n    const [isCreatePostOpen, setIsCreatePostOpen] = useState(false);\r\n    const [isPostDetailOpen, setIsPostDetailOpen] = useState(false);\r\n    const [isChangingProfileImage, setIsChangingProfileImage] = useState(false);\r\n    const [body, setBody] = useState('');\r\n    const [newPostImage, setNewPostImage] = useState('');\r\n    const [newProfileImage, setNewProfileImage] = useState('');\r\n    const [myPosts, setMyPosts] = useState(null);\r\n    const [followData, setFollowData] = useState(null);\r\n    const [profileImgParams, setProfileImgParams] = useState(null);\r\n    const [isChangesLoading, setIsChangesLoading] = useState(false);\r\n    const [selectedPost, setSelectedPost] = useState(null);\r\n    \r\n    useEffect(async () => {\r\n        const data = await request('/api/posts/get/myposts', 'GET', null, {\r\n            Authorization: `Bearer ${props.token}`,\r\n        });\r\n        \r\n        const newfollowData = await request('/api/users/get/myfollowdata', 'GET', null, {\r\n            Authorization: `Bearer ${props.token}`\r\n        });\r\n\r\n        setFollowData(newfollowData);\r\n\r\n        imgParams(data.posts).then((data) => {\r\n            setMyPosts(data);\r\n        });\r\n\r\n        imgParams(props.user.profileImg).then(params => {\r\n            setProfileImgParams(params);\r\n        });\r\n    }, []);\r\n\r\n    const setPostData = async () => {\r\n        setIsChangesLoading(true);\r\n        const formData = new FormData();\r\n        formData.append('file', newPostImage);\r\n        formData.append('upload_preset', 'kalina-why-not');\r\n        formData.append('cloud_name', 'kalina-why-not');\r\n        await fetch('https://api.cloudinary.com/v1_1/kalina-why-not/image/upload', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        .then(res => res.json())\r\n        .then(async formData => {\r\n            const newPost = await request('/api/posts/new/post', 'POST', {body, picture: formData.url}, {\r\n                Authorization: `Bearer ${props.token}`,\r\n            });\r\n\r\n            imgParams([newPost]).then((data) => {\r\n                setMyPosts([data[0], ...myPosts]);\r\n                setIsChangesLoading(false);\r\n                setIsCreatePostOpen(false);\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n    const changeProfileImage = async () => {\r\n        setIsChangesLoading(true);\r\n        const formData = new FormData();\r\n        formData.append('file', newProfileImage);\r\n        formData.append('upload_preset', 'kalina-why-not');\r\n        formData.append('cloud_name', 'kalina-why-not');\r\n        await fetch('https://api.cloudinary.com/v1_1/kalina-why-not/image/upload', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        .then(res => res.json())\r\n        .then(async formData => {\r\n            const data = await request('/api/users/put/profileImg', 'PUT', {picture: formData.url}, {\r\n                Authorization: `Bearer ${props.token}`,\r\n            });\r\n            sessionStorage.setItem('storageName', JSON.stringify({\r\n                token: props.token, user: data\r\n            }));\r\n            const newData = JSON.parse(sessionStorage.getItem('storageName'));\r\n            if (newData && newData.token) {\r\n                props.login(newData.token, newData.user);\r\n            }\r\n            setIsChangesLoading(false);\r\n            setIsChangingProfileImage(false);\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n    const deletePost = async (postId) => {\r\n        setIsChangesLoading(true);\r\n        await request(`/api/posts/delete/post/${postId}`, 'DELETE', null, {\r\n            Authorization: `Bearer ${props.token}`,\r\n        });\r\n        const data = await request('/api/posts/get/myposts', 'GET', null, {\r\n            Authorization: `Bearer ${props.token}`,\r\n        });\r\n\r\n        imgParams(data.posts).then(data => setMyPosts(data));\r\n\r\n        setIsChangesLoading(false);\r\n        setIsPostDetailOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            !myPosts ? \r\n            <Spinner />\r\n            :\r\n            <div className='profile-page'>\r\n                <div className='profile__info'>\r\n                    <div className='avatar'>\r\n                        <img style={profileImgParams} src={props.user.profileImg} alt=''/>\r\n                    </div> \r\n                    <div className='info'>\r\n                        <div className='name-settings'>\r\n                            <h1>{props.user.displayName}</h1>\r\n                            <div>\r\n                                <i onClick={() => setIsChangingProfileImage(true)} className={\"material-icons\"}>settings</i>\r\n                                <i onClick={() => setIsCreatePostOpen(true)} className={\"material-icons\"}>add_to_photos</i>\r\n                            </div>\r\n                        </div> \r\n                        <div className='attributes'>\r\n                            <h3><strong>{myPosts.length}</strong> posts</h3>\r\n                            <h3><strong>{followData.followers.length}</strong> followers</h3>\r\n                            <h3><strong>{followData.following.length}</strong> following</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='mobile-attributes'>\r\n                    <h3><strong>{myPosts.length}</strong> posts</h3>\r\n                    <h3><strong>{followData.followers.length}</strong> followers</h3>\r\n                    <h3><strong>{followData.following.length}</strong> following</h3>\r\n                </div>\r\n                <div className='profile__gallery'>\r\n                {myPosts.map(post => <div onClick={() => {setSelectedPost(post); setIsPostDetailOpen(true)}} key={post._id}><div><img src={post.picture} alt=\"\"  style={post.params}/></div></div>)}\r\n                </div>\r\n                \r\n                {isChangingProfileImage && <>\r\n                    <div onClick={() => setIsPostDetailOpen(false)} className='modal-window__close'></div>\r\n                    <div className='modal-window'>\r\n                        {isChangesLoading && <Spinner />}\r\n                        <i onClick={() => setIsChangingProfileImage(false)} className={\"material-icons close-btn\"}>clear</i>\r\n                        <div className='newPostBody'>\r\n                            <h1>Account settings</h1>\r\n                            <div>\r\n                                <span>Upload image</span>\r\n                                <input type='file' accept=\"image/jpeg,image/png,image/bmp\" onChange={e => setNewProfileImage(e.target.files[0])}/>\r\n                            </div>\r\n                            <button onClick={changeProfileImage}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {isCreatePostOpen && <>\r\n                    <div onClick={() => setIsPostDetailOpen(false)} className='modal-window__close'></div>\r\n                    <div className='modal-window'>\r\n                        {isChangesLoading && <Spinner />}\r\n                        <i onClick={() => setIsCreatePostOpen(false)} className={\"material-icons close-btn\"}>clear</i>\r\n                        <div className='newPostBody'>\r\n                            <span>Description</span>\r\n                            <input type='text' placeholder='Enter Description' value={body} onChange={e => setBody(e.target.value)}/>\r\n                            <span>Upload image</span>\r\n                            <input type='file' accept=\"image/jpeg,image/png,image/bmp\" onChange={e => setNewPostImage(e.target.files[0])}/>\r\n                            <button onClick={setPostData}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {(selectedPost && isPostDetailOpen) && \r\n                <>\r\n                    <div onClick={() => setIsPostDetailOpen(false)} className='modal-window__close'></div>\r\n                    <div className='modal-window'>\r\n                        {isChangesLoading && <Spinner />}\r\n                        <i onClick={() => deletePost(selectedPost._id)} className={\"material-icons delete-btn\"}>delete</i>\r\n                        <i onClick={() => setIsPostDetailOpen(false)} className={\"material-icons close-btn\"}>clear</i>\r\n                        <PostItem post={selectedPost} />\r\n                    </div>\r\n                </>}\r\n            </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (token, user) => {\r\n            dispatch(loginAC(token, user));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","import { connect } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useHttp } from '../../hooks/http.hook';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport PostItem from '../HomePage/PostItem';\r\nimport imgParams from '../../hooks/imgParams.hook';\r\nimport './Profile.scss';\r\n\r\nconst Profile = (props) => {\r\n    const {error, request, clearError} = useHttp(); \r\n    const [userProfile, setUserProfile] = useState(null);\r\n    const [isFollowing, setIsFollowing] = useState(null);\r\n    const [profileImgParams, setProfileImgParams] = useState(null);\r\n    const {userId} = useParams();\r\n    const [isPostDetailOpen, setIsPostDetailOpen] = useState(false);\r\n    const [selectedPost, setSelectedPost] = useState(null);\r\n\r\n    useEffect(async () => {\r\n        const data = await request(`/api/users/get/user/${userId}`, 'GET', null, {\r\n            Authorization: `Bearer ${props.token}`,\r\n        });\r\n\r\n        imgParams(data.posts).then(posts => {\r\n            setUserProfile({posts, user: data.user});\r\n            setIsFollowing(data.user.followers.includes(props.user._id));\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (userProfile) {\r\n            imgParams(userProfile.user.profileImg).then(params => {\r\n                setProfileImgParams(params);\r\n            });\r\n        }\r\n    }, [userProfile])\r\n\r\n    const followUser = async () => {\r\n        await request(`/api/users/put/follow`, 'PUT', {followId: userId}, {\r\n            Authorization: `Bearer ${props.token}`,\r\n        }); \r\n        \r\n        setUserProfile(prev => {\r\n            prev.user.followers.push('');\r\n            return prev;\r\n        });\r\n\r\n        setIsFollowing(true);\r\n    }\r\n\r\n    const unfollowUser = async () => {\r\n        await request(`/api/users/put/unfollow`, 'PUT', {unfollowId: userId}, {\r\n            Authorization: `Bearer ${props.token}`,\r\n        }); \r\n        \r\n        setUserProfile(prev => {\r\n            prev.user.followers.pop();\r\n            return prev;\r\n        });\r\n\r\n        setIsFollowing(false);\r\n    }\r\n\r\n    const sendMessage = async () => {\r\n        const chatName = 'prompt';\r\n        const firstMsg = 'Hello';\r\n\r\n        if(chatName && firstMsg) {\r\n            try {\r\n                let chatId = '';\r\n\r\n                const data = await request('/api/chats/new/conversation', 'POST', {chatName, other: userId}, {Authorization: `Bearer ${props.token}`});\r\n\r\n                chatId = data._id\r\n\r\n                await request(`/api/chats/new/message?id=${chatId}`, 'POST', {\r\n                    message: firstMsg,\r\n                    timestamp: Date.now()\r\n                }, {Authorization: `Bearer ${props.token}`});\r\n            } catch(err) {console.log(err)}\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <>\r\n        {\r\n            !userProfile ?\r\n            <Spinner />\r\n            :\r\n            <div className='profile-page'>\r\n                <div className='profile__info'>\r\n                    <div className='avatar'>\r\n                        <img style={profileImgParams} src={userProfile.user.profileImg} alt=''/>\r\n                    </div> \r\n                    <div className='info'>\r\n                        <div className='name-settings'>\r\n                            <h1>{userProfile.user.displayName}</h1>\r\n                            <div className='btn-wrapper'>\r\n                                {\r\n                                    isFollowing ? \r\n                                    <button onClick={unfollowUser}>Unfollow</button>\r\n                                    :\r\n                                    <button onClick={followUser}>Follow</button>\r\n                                }\r\n                                <button onClick={sendMessage}>Send message</button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='attributes'>\r\n                            <h3><strong>{userProfile.posts.length}</strong> posts</h3>\r\n                            <h3><strong>{userProfile.user.followers.length}</strong> followers</h3>\r\n                            <h3><strong>{userProfile.user.following.length}</strong> following</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='mobile-attributes'>\r\n                    <h3><strong>{userProfile.posts.length}</strong> posts</h3>\r\n                    <h3><strong>{userProfile.user.followers.length}</strong> followers</h3>\r\n                    <h3><strong>{userProfile.user.following.length}</strong> following</h3>\r\n                </div>\r\n                <div className='profile__gallery'>\r\n                {/* <i onClick={deletePost} className={\"material-icons\"} style={{fontSize: '30px', cursor: 'pointer', float: 'right'}}>delete</i> */}\r\n                {userProfile.posts.map(post => <div onClick={() => {setSelectedPost(post); setIsPostDetailOpen(true)}} key={post._id}><div><img src={post.picture} alt=\"\"  style={post.params}/></div></div>)}\r\n                </div>\r\n                {(selectedPost && isPostDetailOpen) && <>\r\n                    <div onClick={() => setIsPostDetailOpen(false)} className='modal-window__close'></div>\r\n                    <div className='modal-window'>\r\n                        <i onClick={() => setIsPostDetailOpen(false)} className={\"material-icons close-btn\"}>clear</i>\r\n                        <PostItem post={selectedPost} />\r\n                    </div>\r\n                </>}\r\n            </div>\r\n        }\r\n        </>        \r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         setDialogs: (dialogs) => {\r\n//             dispatch(setDialogsAC(dialogs));\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default connect(mapStateToProps)(Profile);","import { Avatar } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHttp } from '../../hooks/http.hook';\r\nimport './Users.scss';\r\n\r\nlet Users = (props) => {\r\n    const {error, request, clearError} = useHttp();\r\n    const [searchUsers, setSearchUsers] = useState('');\r\n    const [foundUsers, setFoundUsers] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        if (searchUsers) {\r\n            try{\r\n                const users = await request('/api/users/post/users-search', 'POST', {query: searchUsers}, {Authorization: `Bearer ${props.token}`});\r\n                setFoundUsers(users);\r\n            } catch (err) {console.log(err)}\r\n        } else {\r\n            setFoundUsers([]);\r\n        }\r\n    }, [searchUsers]);\r\n\r\n    return (\r\n        <div className='users-page'>\r\n            <div className=\"search-user\">\r\n                <i className=\"material-icons\" style={{position: 'absolute', top: '50%', transform: 'translateY(-50%)'}}>search</i>\r\n                <input type=\"text\" placeholder=\"Search...\" className=\"search-input\" value={searchUsers} onChange={(e) => setSearchUsers(e.target.value)}/>\r\n                </div>\r\n                {\r\n                    foundUsers.length !== 0 &&\r\n                    <div className=\"dropdown-content\">\r\n                        {foundUsers.map(user => <Link to={props.user._id !== user._id ? '/profile/' + user._id : '/profile'}  key={user._id} onClick={() => setSearchUsers('')}><div><Avatar src={user.profileImg}/><p>{user.displayName}</p></div></Link>)}\r\n                    </div> \r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Users);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Slider from '../../components/Slider/Slider';\r\nimport { useHttp } from '../../hooks/http.hook';\r\nimport './HomePage.scss';\r\nimport PostItem from './PostItem';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nconst HomePage = (props) => {\r\n    const [allPosts, setAllPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const {error, request, clearError} = useHttp();\r\n\r\n    useEffect(async () => {\r\n        const data = await request('/api/posts/get/posts', 'GET', null, {\r\n            Authorization: `Bearer ${props.token}`,\r\n        });\r\n        setAllPosts(data.posts)\r\n        setLoading(false)\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {loading ? \r\n                <Spinner/>\r\n                :\r\n                <div className='home-page'>\r\n                    {/* <div className='element'>\r\n                        <Slider imgWidth={1200} imgHeight={500}/>\r\n                    </div> */}\r\n                    <div className='home-page__inner'>\r\n                        {allPosts.map(post => <PostItem post={post} key={post._id}/>)}\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token\r\n});\r\n\r\nexport default connect(mapStateToProps)(HomePage);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHttp } from '../../hooks/http.hook';\r\nimport { loginAC } from '../../redux/auth-reducer';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport './AuthPage.scss';\r\n\r\nconst AuthPage = (props) => {\r\n    const {login} = props;\r\n    const {error, request, clearError} = useHttp();\r\n    const [loading, setLoading] = useState(false);\r\n    const [form, setForm] = useState({\r\n        email: '',\r\n        displayName: '',\r\n        password: ''\r\n    });\r\n    const [isRegistrateForm, setIsRegistrateForm] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(sessionStorage.getItem('storageName'));\r\n        \r\n        if (data && data.token) {\r\n            login(data.token, data.user);\r\n        }\r\n    }, [login])\r\n\r\n    const changeHandler = e => {\r\n        setForm({...form, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const registerHandler = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const register = await request('/api/auth/register', 'POST', {...form}, {Authorization: `Bearer ${props.token}`});\r\n            setLoading(false);\r\n            changeFormHandler();\r\n        } catch (err) {\r\n            alert(err.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const data = await request('/api/auth/login', 'POST', {...form}, {Authorization: `Bearer ${props.token}`});\r\n            \r\n            login(data.token, data.user);\r\n        } catch (err) {\r\n            alert(err.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const changeFormHandler = () => {\r\n        setIsRegistrateForm(!isRegistrateForm);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {loading ?\r\n                <Spinner />\r\n                :\r\n                <div className='split-screen'>\r\n                    <div className='left'>\r\n                        <section className='copy'>\r\n                            <h1>Kalina</h1>\r\n                            <p>Text for the beauty.</p>\r\n                        </section>\r\n                    </div>\r\n                    <div className='right'>\r\n                        <form>\r\n                            <section className='copy'>\r\n                                <h2>Sign {isRegistrateForm ? 'up' : 'in'}</h2>\r\n                                <div className='login-container'>\r\n                                    {isRegistrateForm ?\r\n                                        <p>Already have an account? <a onClick={changeFormHandler}><strong>Sign in!</strong></a></p>\r\n                                        :\r\n                                        <p>Don't have an account? <a onClick={changeFormHandler}><strong>Sign up!</strong></a></p>\r\n                                    }\r\n                                </div>\r\n                            </section>\r\n                            {isRegistrateForm && <div className='input-container name'>\r\n                                <label htmlFor='displayName'>Nickname</label>\r\n                                <input \r\n                                    name=\"displayName\"\r\n                                    id=\"displayName\" \r\n                                    type=\"text\"\r\n                                    value={form.displayName}\r\n                                    onChange={changeHandler}\r\n                                    required/>\r\n                            </div>}\r\n                            <div className='input-container email'>\r\n                                <label htmlFor='email'>Email</label>\r\n                                <input \r\n                                    name=\"email\"\r\n                                    id=\"email\" \r\n                                    type=\"email\" \r\n                                    value={form.email}\r\n                                    onChange={changeHandler}\r\n                                    required/>\r\n                            </div>\r\n                            <div className='input-container password'>\r\n                                <label htmlFor='password'>Password</label>\r\n                                <input \r\n                                    name=\"password\"\r\n                                    id=\"password\" \r\n                                    type=\"password\" \r\n                                    value={form.password}\r\n                                    onChange={changeHandler}\r\n                                    placeholder='At least 6 characters!' \r\n                                    required/>\r\n                                <i className='far fa-eye-slash' />\r\n                            </div>\r\n                            {isRegistrateForm ?\r\n                                <button className='signup-btn' type='submit' onClick={registerHandler}>Sign up</button>\r\n                                :\r\n                                <button className='signup-btn' type='submit' onClick={loginHandler}>Sign in</button>\r\n                            }\r\n                            <section className='copy legal'>\r\n                                <p>\r\n                                    <span className='small'>\r\n                                        By continuing, you agree to accept our <br/><a>Privacy Policy</a> & <a>Terms of Service</a>.\r\n                                    </span>\r\n                                </p>\r\n                            </section>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (token, user) => {\r\n            dispatch(loginAC(token, user));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthPage);","import React, { createRef, forwardRef, useEffect, useRef } from 'react';\r\nimport './App.scss';\r\nimport {BrowserRouter as Router, HashRouter, Route} from \"react-router-dom\";\r\nimport Header from \"./components/Header/Header\";\r\nimport { connect } from 'react-redux';\r\nimport { useRoutes } from './routes';\r\n// import Spinner from './components/Spinner/spinner';\r\nimport { loginAC } from './redux/auth-reducer';\r\nimport AuthPage from './pages/AuthPage/AuthPage';\r\n\r\nconst App = (props) => {\r\n    const data = JSON.parse(sessionStorage.getItem('storageName'));\r\n    const app = useRef(null);\r\n\r\n    const isAuthenticated = !!props.token;\r\n    const routes = useRoutes();\r\n\r\n    if (data && data.token) {\r\n        props.login(data.token, data.user);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fixOffset()\r\n        \r\n        window.addEventListener('resize', fixOffset);\r\n\r\n        return () => window.removeEventListener('resize', fixOffset);\r\n    }, [isAuthenticated]);\r\n\r\n    function fixOffset() {\r\n        try{\r\n            app.current.style.height = document.body.clientHeight - (isAuthenticated ? 40 : 0) + 'px';\r\n        } catch {}    \r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            {!isAuthenticated ? \r\n                <Route path=\"/\" exact component={AuthPage} />\r\n                :\r\n                <>\r\n                    <div className='main'>\r\n                        <Header />\r\n                        <div ref={app} className='app'> \r\n                            <div className='app-inner'>\r\n                                {routes}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n        </Router>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (token, user) => {\r\n            dispatch(loginAC(token, user));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport DialogsPage from './pages/DialogsPage/DialogsPage';\r\nimport ProfilePage from './pages/ProfilePage/Profile';\r\nimport UserProfile from './pages/ProfilePage/UserProfile';\r\nimport UsersPage from './pages/UsersPage/Users';\r\nimport HomePage from './pages/HomePage/HomePage';\r\n\r\nexport const useRoutes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path='/dialogs' component={DialogsPage}/>\r\n            <Route exact path='/profile' render={ () => <ProfilePage /> }/>\r\n            <Route exact path='/profile/:userId' render={ () => <UserProfile /> }/>\r\n            <Route exact path='/users' render={ () => <UsersPage /> }/>\r\n            <Route exact path=\"/\" component={HomePage}/>\r\n        </Switch>\r\n    )\r\n}\r\n","import store from \"./redux/store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nlet vh = window.innerHeight * 0.01;\r\ndocument.documentElement.style.setProperty('--vh', `${vh}px`);\r\n\r\nwindow.addEventListener('resize', () => {\r\n  let vh = window.innerHeight * 0.01;\r\n  document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n});\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n    , document.getElementById('root'));"],"sourceRoot":""}