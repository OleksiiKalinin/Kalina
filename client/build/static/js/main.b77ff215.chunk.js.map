{"version":3,"sources":["components/Users/users.module.css","components/Profile/MyPosts/Post/Post.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/store.js","components/Header/Header.jsx","hooks/http.hook.js","components/Dialogs/DialogsList/DialogItem.js","components/Dialogs/DialogsList/DialogsList.js","components/Dialogs/MessagesList/Message.js","components/Dialogs/MessagesList/MessagesList.js","components/Dialogs/MessagesList/MessagesListContainer.js","components/Dialogs/Dialogs/Dialogs.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","assets/images/user.png","components/Users/Users.jsx","components/Users/UsersContainer.jsx","components/Spinner/spinner.js","pages/AuthPage.js","hooks/message.hook.js","App.js","routes.js","index.js"],"names":["module","exports","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","initialState","posts","id","message","likesCount","newPostText","profile","profileReducer","state","action","type","newPost","newText","dialogs","messages","chat","isDialogChose","setMessagesAC","setDialogsAC","setChatAC","dialogsReducer","newMessageBody","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","map","u","userId","followed","count","filter","token","user","authReducer","localStorage","setItem","JSON","stringify","jwtSecret","removeItem","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","store","createStore","connect","dispatch","logout","props","history","useHistory","className","to","onClick","e","preventDefault","push","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","res","json","data","ok","Error","clearError","pusher","Pusher","cluster","setDialogs","setMessages","setChat","setIsDialogChose","dialogsLastMsg","setDialogsLastMsg","displayName","timestamp","getLastMessage","Authorization","console","log","useEffect","channel","subscribe","bind","unbind_all","unsubscribe","choosedDialog","conversation","chatName","chatId","Avatar","name","Date","parseInt","toISOString","replace","getDialogs","addNewChat","prompt","firstMsg","_id","now","Button","SearchOutlined","placeholder","dialog","Message","userName","MessagesList","newMessage","setNewMessage","onSendMessageClick","fixScroll","block","document","querySelector","scrollTop","scrollHeight","IconButton","AttachFile","MoreVert","InsertEmoticon","value","onChange","target","sendMessage","MessagesListContainer","ProfileInfo","alt","src","photos","large","Post","s","item","MyPosts","postsElements","p","newPostElement","React","createRef","text","current","updateNewPostText","ref","addPost","updateNewPostTextActionCreator","Profile","MyPostsContainer","ProfileContainer","this","match","params","Component","WithUrlDataContainerComponent","withRouter","setUserProfile","Users","pagesCount","Math","ceil","pages","i","styles","selectedPage","onPageChanged","small","userPhoto","disabled","some","toggleFollowingProgress","status","UsersContainer","pageNumber","setCurrentPage","toggleIsFetching","follow","unfollow","setUsers","setTotalUsersCount","Spinner","login","loginAC","window","M","toast","html","email","password","form","setForm","isRegistrateForm","setIsRegistrateForm","parse","getItem","changeHandler","registerHandler","register","changeFormHandler","loginHandler","isAuthenticated","routes","exact","path","component","Dialogs","render","AuthPage","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.b77ff215.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__pOnw3\",\"selectedPage\":\"users_selectedPage__CpXl2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2gkFz\"};","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    newPostText: '',\r\n    profile: null\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text })\r\n\r\nexport default profileReducer;","let initialState = {\r\n    dialogs: [],\r\n    messages: [],\r\n    chat: {},\r\n    isDialogChose: false\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SEND_MESSAGE':\r\n            return {\r\n                ...state\r\n            }\r\n        case 'SET_MESSAGES':\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: action.messages\r\n            };\r\n        case 'SET_DIALOGS':\r\n            return {\r\n                ...state,\r\n                dialogs: action.dialogs\r\n            };\r\n        case 'SET_CHAT':\r\n            return {\r\n                ...state,\r\n                chat: action.chat\r\n            };\r\n        case 'SET_IS_DIALOG_CHOSEN':\r\n            return {\r\n                ...state,\r\n                isDialogChose: true\r\n        };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = () => ({type: 'SEND_MESSAGE'});\r\nexport const setMessagesAC = (messages) => ({type: 'SET_MESSAGES', messages});\r\nexport const setDialogsAC = (dialogs) => ({type: 'SET_DIALOGS', dialogs});\r\nexport const setChatAC = (chat) => ({type: 'SET_CHAT', chat});\r\nexport const setIsDialogChoseAC = () => ({type: 'SET_IS_DIALOG_CHOSEN'});\r\n\r\nexport default dialogsReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId })\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport default usersReducer;","let initialState = {\r\n    token: null,\r\n    user: {}\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            localStorage.setItem('storageName', JSON.stringify({\r\n                token: action.jwtSecret,\r\n                user: action.user\r\n            }));\r\n\r\n            return {\r\n                ...state,\r\n                token: action.jwtSecret,\r\n                user: action.user\r\n            }\r\n        case 'LOGOUT':\r\n            localStorage.removeItem('storageName');\r\n\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: {}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const loginAC = (jwtSecret, user) => ({type: 'LOGIN', jwtSecret, user});\r\nexport const logoutAC = () => ({type: 'LOGOUT'});\r\nexport default authReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport { logoutAC } from '../../redux/auth-reducer';\r\nimport './Header.css';\r\n\r\nconst Header = (props) => {\r\n    const {logout} = props;\r\n    const history = useHistory();\r\n\r\n    const logoutHandler = (e) => {\r\n        e.preventDefault();\r\n        logout();\r\n        history.push('/');\r\n    };\r\n\r\n    return (\r\n        <header className='header'>\r\n            <span className=\"label\"><big>Kalina chats</big></span>\r\n            <ul className=\"navigation\">\r\n                <li><Link to=\"/dialogs\">Dialogs</Link></li>\r\n                <li><Link to=\"/profile/:userId?\">Profile</Link></li>\r\n                <li><Link to=\"/users\">Users</Link></li>\r\n                <li><Link to=\"/\" onClick={logoutHandler}>Log out</Link></li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logout: () => {\r\n            dispatch(logoutAC());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const request = useCallback( async (url, method = 'GET', body = null, headers = {}) => {\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body);\r\n                headers['Content-Type'] = 'application/json';\r\n            }\r\n\r\n            const res = await fetch(`https://kalinaserver.herokuapp.com${url}`, {method, body, headers});\r\n            const data = await res.json();\r\n\r\n            if (!res.ok) {\r\n                throw new Error(data.message || 'Something goes wrong');\r\n            }\r\n\r\n            setLoading(false);\r\n\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n    \r\n    return {loading, error, request, clearError};\r\n} ","import React, { useEffect, useState } from 'react';\r\nimport './DialogItem.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport { Avatar } from '@material-ui/core';\r\nimport Pusher from 'pusher-js';\r\nimport { setChatAC, setDialogsAC, setIsDialogChoseAC, setMessagesAC } from \"../../../redux/dialogs-reducer\";\r\nimport { connect } from 'react-redux';\r\nimport { useHttp } from '../../../hooks/http.hook';\r\n\r\nconst pusher = new Pusher('b634efb073fba40fbf3a', {\r\n    cluster: 'eu'\r\n});\r\n\r\nconst DialogItem = (props) => {\r\n    // const path = \"/dialogs/\" + props.id;\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [dialogsLastMsg, setDialogsLastMsg] = useState({});\r\n    let displayName = '', message = '', timestamp = 0;\r\n\r\n    const getLastMessage = async () => {\r\n        try {\r\n            const data = await request(`/api/chats/get/lastMessage?id=${props.id}`, 'GET', null, {Authorization: `Bearer ${props.token}`});\r\n            setDialogsLastMsg(data);\r\n        } catch {console.log(1)}\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLastMessage();\r\n        \r\n        const channel = pusher.subscribe('messages');\r\n        channel.bind('newMessage', () => {\r\n            getLastMessage();   \r\n        });\r\n\r\n        return () => {\r\n            channel.unbind_all();\r\n            channel.unsubscribe();\r\n        };\r\n    }, [props.id]);\r\n\r\n    const choosedDialog = async () => {\r\n        try {\r\n            const data = await request(`/api/chats/get/conversation?id=${props.id}`, 'GET', null, {Authorization: `Bearer ${props.token}`});\r\n            props.setMessages(data['0'].conversation);\r\n            props.setChat({\r\n                chatName: data['0'].chatName,\r\n                chatId: props.id\r\n            });\r\n            props.setIsDialogChose();\r\n        } catch {console.log(1)}\r\n    }\r\n\r\n    try {\r\n        displayName = dialogsLastMsg.user.displayName;\r\n        message = dialogsLastMsg.message;\r\n        timestamp = dialogsLastMsg.timestamp;\r\n    } catch {}\r\n\r\n    return (\r\n        // <Link to={path}>\r\n            <div onClick={() => choosedDialog()} className='dialogItem'>\r\n                <div className='dialogItem__info'>\r\n                    <Avatar />\r\n                    <h2>{props.name}</h2>\r\n                    <p>{(displayName + ': ' + message) || ''}</p>\r\n                </div>\r\n                <small>{new Date(parseInt(timestamp)).toISOString().replace(/T/g, ' ').replace(/\\..*/, '')}</small> \r\n            </div>\r\n        // </Link>  \r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setDialogs: (dialogs) => {\r\n            dispatch(setDialogsAC(dialogs));\r\n        },\r\n        setMessages: (messages) => {\r\n            dispatch(setMessagesAC(messages));\r\n        },\r\n        setChat: chat => {\r\n            dispatch(setChatAC(chat))\r\n        },\r\n        setIsDialogChose: () => {\r\n            dispatch(setIsDialogChoseAC())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogItem);","import React, { useEffect } from 'react';\r\n// import ChatIcon from '@material-ui/icons/Chat';\r\n// import DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport \"./DialogsList.css\";\r\n// import { IconButton, Avatar } from '@material-ui/core';\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport DialogItem from './DialogItem';\r\nimport { Button } from '@material-ui/core';\r\nimport Pusher from 'pusher-js';\r\nimport { useHttp } from '../../../hooks/http.hook';\r\nimport { setDialogsAC } from '../../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { useState } from 'react';\r\n\r\nconst pusher = new Pusher('b634efb073fba40fbf3a', {\r\n    cluster: 'eu'\r\n});\r\n\r\nconst DialogsList = (props) => {    \r\n    const {error, request, clearError} = useHttp();\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n    const getDialogs = async () => {\r\n        try {\r\n            const data = await request('/api/chats/get/conversations', 'GET', null, {\r\n                Authorization: `Bearer ${props.token}`,\r\n            });\r\n            props.setDialogs(data);\r\n        } catch {console.log(1)}\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDialogs();\r\n        \r\n        const channel = pusher.subscribe('chats');\r\n        channel.bind('newChat', () => {\r\n            getDialogs();\r\n        });\r\n    }, []);\r\n\r\n    const addNewChat = async (e) => {\r\n        e.preventDefault();\r\n        const chatName = prompt('Enter a chat name');\r\n        const firstMsg = prompt('Send a welcome message');\r\n\r\n        if(chatName && firstMsg) {\r\n            try {\r\n                let chatId = '';\r\n\r\n                const data = await request('/api/chats/new/conversation', 'POST', {chatName}, {Authorization: `Bearer ${props.token}`});\r\n\r\n                chatId = data._id\r\n\r\n                await request(`/api/chats/new/message?id=${chatId}`, 'POST', {\r\n                    message: firstMsg,\r\n                    timestamp: Date.now(),\r\n                    user: props.user\r\n                }, {Authorization: `Bearer ${props.token}`});\r\n            } catch {console.log(1)}\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className='dialogs'>\r\n            <div className='dialogs__header'>\r\n                {/* <Avatar src=''/> \r\n                <div className='dialogs__headerRight'>\r\n                    <IconButton>\r\n                        <DonutLargeIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <ChatIcon/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon/>\r\n                    </IconButton>\r\n                </div> */}\r\n                <Button onClick={addNewChat}>Add a new chat</Button>\r\n            </div>\r\n            <div className='dialogs__search'>\r\n                <div className='dialogs__searchContainer'>\r\n                    <SearchOutlined/>\r\n                    <input placeholder='Search or start new chat' type='text' />\r\n                </div>\r\n            </div>\r\n            <div className='dialogs__items'>\r\n                {props.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} timestamp={dialog.timestamp}/> )} \r\n            </div>\r\n        </div>\r\n    )  \r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        user: state.auth.user,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setDialogs: (dialogs) => {\r\n            dispatch(setDialogsAC(dialogs));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogsList);","import React from 'react';\r\nimport './Message.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={`messages__item  ${props.message.user.displayName === props.userName && 'messages__receiver'}`}>\r\n            <span className='message__name'>{props.message.user.displayName}</span>\r\n            <div className='message'>{props.message.message}</div>\r\n            <span className='message__timestamp'>{new Date(parseInt(props.message.timestamp)).toISOString().replace(/T/g, ' ').replace(/\\..*/, '')}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, InsertEmoticon, MoreVert, SearchOutlined } from '@material-ui/icons';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './MessagesList.css';\r\nimport Pusher from 'pusher-js';\r\nimport Message from './Message';\r\nimport { useHttp } from '../../../hooks/http.hook';\r\n\r\nconst MessagesList = (props) => {\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [newMessage, setNewMessage] = useState('');\r\n    \r\n    const onSendMessageClick = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await request(`/api/chats/new/message?id=${props.chat.chatId}`, 'POST', {\r\n                message: newMessage,\r\n                timestamp: Date.now(),\r\n                user: props.user\r\n            }, {Authorization: `Bearer ${props.token}`});\r\n        } catch {console.log(1)}\r\n        setNewMessage('');\r\n    }\r\n\r\n    const fixScroll = () => {\r\n        const block = document.querySelector('.messages__body');\r\n        block.scrollTop = block.scrollHeight;\r\n    }\r\n\r\n    const onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        setNewMessage(body);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const pusher = new Pusher('b634efb073fba40fbf3a', {\r\n            cluster: 'eu'\r\n        });\r\n      \r\n        const channel = pusher.subscribe('messages');\r\n        channel.bind('newMessage', async () => {\r\n            try {\r\n                const data = await request(`/api/chats/get/conversation?id=${props.chat.chatId}`, 'GET', null, {Authorization: `Bearer ${props.token}`});\r\n                props.setMessages(data['0'].conversation);\r\n                fixScroll();\r\n            } catch {console.log(1)}\r\n        });\r\n\r\n        fixScroll();\r\n\r\n        return () => {\r\n            channel.unbind_all();\r\n            channel.unsubscribe();\r\n        };\r\n    }, [props.chat.chatId]);\r\n\r\n    return (\r\n        <div className='messages'>\r\n            <div className='messages__header'>\r\n                <Avatar />\r\n                <div className='messages__headerInfo'>\r\n                    <h3>{props.chat.chatName}</h3>\r\n                    <p>Last seen at...</p>\r\n                </div>\r\n                <div className='messages__headerRight'>\r\n                    <IconButton>\r\n                        <SearchOutlined/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className='messages__body'>\r\n                { props.messages.map( message => <Message userName={props.user.displayName} message={message} key={message._id} /> ) }\r\n            </div>\r\n            <div className='messages__footer'>\r\n                <InsertEmoticon />\r\n                <form>\r\n                    <input \r\n                        type='text'\r\n                        value={newMessage}\r\n                        onChange={onNewMessageChange}\r\n                        placeholder='Enter your message'/>\r\n                    <button \r\n                        type='submit'\r\n                        onClick={onSendMessageClick}>Send</button>\r\n                </form>\r\n                <MicIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessagesList;","import {sendMessageCreator, setChatAC, setMessagesAC} from \"../../../redux/dialogs-reducer\";\r\nimport MessagesList from \"./MessagesList\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.dialogsPage.messages,\r\n        chat: state.dialogsPage.chat,\r\n        user: state.auth.user,\r\n        token: state.auth.token\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        },\r\n        setMessages: (messages) => {\r\n            dispatch(setMessagesAC(messages));\r\n        },\r\n        setChat: chat => {\r\n            dispatch(setChatAC(chat))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessagesList);\r\n","import React from 'react';\r\nimport './Dialogs.css';\r\nimport DialogsList from '../DialogsList/DialogsList';\r\nimport MessagesListContainer from '../MessagesList/MessagesListContainer';\r\nimport { connect } from 'react-redux';\r\n \r\nconst Dialogs = (props) => {\r\n    return (\r\n        <div className='main'>\r\n            <DialogsList />\r\n            {!props.isDialogChose ? <div className='chooseChat'>Choose a chat</div> : <MessagesListContainer />}\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isDialogChose: state.dialogsPage.isDialogChose\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dialogs);","import React from 'react';\r\nimport './ProfileInfo.css';\r\n// import Preloader from \"../../common/Preloader/Preloader\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    // if (!props.profile) {\r\n    //     return <Preloader />\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <img alt='' src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'/>\r\n            </div>\r\n            <div className={'description'}>\r\n                <img alt='' src={props.profile.photos.large} />\r\n                ava + description\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img alt='' src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport './MyPosts.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements =\r\n        props.posts.map( p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    }\r\n\r\n    return (\r\n        <div className={'posts'}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={ onPostChange } ref={newPostElement}\r\n                              value={props.newPostText} />\r\n                </div>\r\n                <div>\r\n                    <button onClick={ onAddPost }>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={'posts__list'}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts);;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport './Profile.css';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className='profile'>\r\n            <div className='profile__inner'>\r\n                <ProfileInfo profile={props.profile} />\r\n                <MyPostsContainer />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\n// import * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUserProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = 2;\r\n        }\r\n        // axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\r\n        //     .then(response => {\r\n        //         this.props.setUserProfile(response.data);\r\n        //     });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile\r\n});\r\n\r\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer);\r\n\r\nexport default connect(mapStateToProps, {setUserProfile})(WithUrlDataContainerComponent);","export default __webpack_public_path__ + \"static/media/user.96e310a6.png\";","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n// import * as axios from \"axios\";\r\n// import {toggleFollowingProgress} from \"../../redux/users-reducer\";\r\n\r\nlet Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p && styles.selectedPage}\r\n                             onClick={(e) => {\r\n                                 props.onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + u.id}>\r\n                        <img alt='' src={u.photos.small != null ? u.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.toggleFollowingProgress(true, u.id);\r\n                                // axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {\r\n                                //     withCredentials: true,\r\n                                //     headers: {\r\n                                //         \"API-KEY\": \"b1775b2f-c3a5-4509-8dc9-90b5629de7c3\"\r\n                                //     }\r\n                                // })\r\n                                //     .then(response => {\r\n                                //         if (response.data.resultCode === 0) {\r\n                                //             props.unfollow(u.id);\r\n                                //         }\r\n                                //         props.toggleFollowingProgress(false, u.id);\r\n                                //     });\r\n\r\n\r\n\r\n                            }}>Unfollow</button>\r\n                            : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.toggleFollowingProgress(true, u.id);\r\n                                // axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {}, {\r\n                                //     withCredentials: true,\r\n                                //     headers: {\r\n                                //         \"API-KEY\": \"b1775b2f-c3a5-4509-8dc9-90b5629de7c3\"\r\n                                //     }\r\n                                // })\r\n                                //     .then(response => {\r\n                                //         if (response.data.resultCode === 0) {\r\n                                //             props.follow(u.id);\r\n                                //         }\r\n                                //         props.toggleFollowingProgress(false, u.id);\r\n                                //     });\r\n\r\n\r\n                            }}>Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setUsers,\r\n    setTotalUsersCount,\r\n    toggleIsFetching,\r\n    unfollow, toggleFollowingProgress\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n\r\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n\r\n        //         this.props.toggleIsFetching(false);\r\n        //         this.props.setUsers(data.items);\r\n        //         this.props.setTotalUsersCount(data.totalCount);\r\n        //     });\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.toggleIsFetching(true);\r\n\r\n        // usersAPI.getUsers(pageNumber, this.props.pageSize)\r\n        //     .then(data => {\r\n        //         this.props.toggleIsFetching(false);\r\n        //         this.props.setUsers(data.items);\r\n        //     });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {/* { this.props.isFetching ? <Preloader /> : null } */}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage={this.props.currentPage}\r\n                        onPageChanged={this.onPageChanged}\r\n                        users={this.props.users}\r\n                        follow={this.props.follow}\r\n                        unfollow={this.props.unfollow}\r\n                        toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                        followingInProgress={this.props.followingInProgress}\r\n             />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching, toggleFollowingProgress})(UsersContainer);","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"ldio-xb2vocd1fhk\">\r\n                <div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { useMessage } from '../hooks/message.hook';\r\nimport { loginAC } from '../redux/auth-reducer';\r\nimport Spinner from '../components/Spinner/spinner';\r\nimport './AuthPage.css';\r\n\r\nconst AuthPage = (props) => {\r\n    const {login} = props;\r\n    const message = useMessage();\r\n    const {error, request, clearError} = useHttp();\r\n    const [loading, setLoading] = useState(false);\r\n    const [form, setForm] = useState({\r\n        email: '',\r\n        displayName: '',\r\n        password: ''\r\n    });\r\n    const [isRegistrateForm, setIsRegistrateForm] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        message(error);\r\n        clearError();\r\n    },[error, message, clearError]);\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem('storageName'));\r\n        \r\n        if (data && data.token) {\r\n            login(data.token, data.user);\r\n        }\r\n    }, [])\r\n\r\n    const changeHandler = e => {\r\n        setForm({...form, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const registerHandler = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const register = await request('/api/auth/register', 'POST', {...form}, {Authorization: `Bearer ${props.token}`});\r\n            message(register.message);\r\n            setLoading(false);\r\n            changeFormHandler();\r\n        } catch {console.log(-1)}\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const data = await request('/api/auth/login', 'POST', {...form}, {Authorization: `Bearer ${props.token}`});\r\n            login(data.token, data.user);\r\n        } catch {console.log(-1)}\r\n    }\r\n\r\n    const changeFormHandler = () => {\r\n        setIsRegistrateForm(!isRegistrateForm);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {loading ?\r\n                <Spinner />\r\n            :\r\n                <div className=\"auth-form\">\r\n                    <div className=\"auth-form__inner\">\r\n                        <h1>Sign In With</h1>\r\n                        <div className='auth-form__main'>\r\n                            <div className='auth-form__fields'>\r\n                                <div className=\"auth-form__email\">\r\n                                    <input\r\n                                        name=\"email\"\r\n                                        id=\"email\" \r\n                                        type=\"email\" \r\n                                        className=\"validate\"\r\n                                        value={form.email}\r\n                                        onChange={changeHandler}\r\n                                        placeholder='Email'\r\n                                    />\r\n                                </div>\r\n                                {isRegistrateForm && <div className=\"auth-form__name\">\r\n                                    <input\r\n                                        name=\"displayName\"\r\n                                        id=\"displayName\" \r\n                                        type=\"text\" \r\n                                        className=\"validate\"\r\n                                        value={form.displayName}\r\n                                        onChange={changeHandler}\r\n                                        placeholder='Name'\r\n                                    />\r\n                                </div> }\r\n                                <div className=\"auth-form__password\">\r\n                                    <input \r\n                                        name=\"password\"\r\n                                        id=\"password\" \r\n                                        type=\"password\" \r\n                                        className=\"validate\"\r\n                                        value={form.password}\r\n                                        onChange={changeHandler}\r\n                                        placeholder='Password'\r\n                                    />\r\n                                </div>\r\n                            </div>  \r\n                            <div className='auth-form__btn'>\r\n                                {!isRegistrateForm ?\r\n                                    <button\r\n                                        onClick={loginHandler}\r\n                                        >\r\n                                            Sign in\r\n                                    </button>\r\n                                    :\r\n                                    <button \r\n                                        onClick={registerHandler}>\r\n                                            Sign up\r\n                                    </button>\r\n                                }\r\n                                {!isRegistrateForm ?\r\n                                    <div>\r\n                                        <p>or</p>\r\n                                        <p>Not a member? <a onClick={changeFormHandler}>Sign up</a> now!</p>\r\n                                    </div>\r\n                                    :\r\n                                    <a onClick={changeFormHandler}>&larr;Back</a>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (token, user) => {\r\n            dispatch(loginAC(token, user));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthPage);","import { useCallback } from \"react\"\r\n\r\nexport const useMessage = () => {\r\n    return useCallback(text => {\r\n        if (window.M && text) {\r\n            window.M.toast({html: text});\r\n        }\r\n    }, []);\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\nimport Header from \"./components/Header/Header\";\r\nimport { connect } from 'react-redux';\r\nimport { useRoutes } from './routes';\r\n\r\nconst App = (props) => {\r\n    const isAuthenticated = !!props.token;\r\n    const routes = useRoutes(isAuthenticated);\r\n\r\n    return (\r\n        <Router>\r\n            <div className='root__child'>\r\n                {isAuthenticated && <Header />}\r\n                <div className='app-wrapper'> \r\n                    <div className='app-wrapper-content'>\r\n                        {routes}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport Dialogs from './components/Dialogs/Dialogs/Dialogs';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport AuthPage from './pages/AuthPage';\r\n\r\nexport const useRoutes = (isAuthenticates) => {\r\n    if (isAuthenticates) {\r\n        return (\r\n            <Switch>\r\n                <Route exact path='/dialogs' component={Dialogs}/>\r\n                <Route exact path='/profile/:userId?' render={ () => <ProfileContainer /> }/>\r\n                <Route exact path='/users' render={ () => <UsersContainer /> }/>\r\n                {/* <Redirect to=\"/\"/> */}\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    return <Route path=\"/\" exact component={AuthPage} />\r\n}","import store from \"./redux/store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    , document.getElementById('root'));"],"sourceRoot":""}