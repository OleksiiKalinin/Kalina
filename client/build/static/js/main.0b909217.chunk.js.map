{"version":3,"sources":["redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/store.js","hooks/http.hook.js","assets/images/user.png","components/Header/Header.js","pages/DialogsPage/Dialogs/DialogItem.js","components/Spinner/Spinner.js","pages/DialogsPage/Dialogs/Dialogs.js","pages/DialogsPage/Messages/MessageItem.js","assets/images/arrowback.svg","pages/DialogsPage/Messages/Messages.js","pages/DialogsPage/Messages/MessagesContainer.js","pages/DialogsPage/DialogsPage.js","pages/ProfilePage/Profile.js","pages/ProfilePage/UserProfile.js","pages/UsersPage/Users.js","pages/HomePage/PostItem.js","pages/HomePage/HomePage.js","pages/AuthPage/AuthPage.js","hooks/message.hook.js","App.js","routes.js","index.js"],"names":["ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","initialState","posts","id","message","likesCount","newPostText","profile","profileReducer","state","action","type","newPost","newText","dialogs","messages","chat","isDialogSelected","setMessagesAC","setDialogsAC","setChatAC","setIsDialogSelectedAC","dialogsReducer","newMessageBody","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","map","u","userId","followed","count","filter","token","user","loginAC","jwtSecret","authReducer","sessionStorage","setItem","JSON","stringify","removeItem","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","store","createStore","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","res","json","data","ok","Error","clearError","connect","dispatch","logout","props","history","useHistory","searchUsers","setSearchUsers","foundUsers","setFoundUsers","useEffect","query","Authorization","console","log","className","to","style","position","top","transform","onBlur","placeholder","value","onChange","e","target","length","_id","onClick","Avatar","src","profileImg","userPhoto","displayName","preventDefault","push","pusher","Pusher","cluster","setDialogs","setMessages","setChat","setIsDialogSelected","dialogsLastMsg","setDialogsLastMsg","extra","setExtra","timestamp","forEach","el","getLastMessage","channel","subscribe","bind","unbind_all","unsubscribe","selectedDialog","conversation","chatName","chatImg","chatId","owner","name","Date","parseInt","getMonth","getDay","Spinner","searchChats","setSearchChats","useRef","dialogsHeader","dialogsItems","getDialogs","current","classList","remove","add","addNewChat","prompt","firstMsg","now","ref","paddingLeft","right","paddingRight","dialog","Message","userName","toISOString","replace","MessagesList","newMessage","setNewMessage","isOpenedEmoji","setIsOpenedEmoji","chosenEmoji","setChosenEmoji","onSendMessageClick","fixScroll","block","document","querySelector","scrollTop","scrollHeight","window","addEventListener","removeEventListener","prev","emoji","fontSize","IconButton","SearchOutlined","MoreVert","cursor","width","onKeyUp","keyCode","disabled","left","zIndex","disableAutoFocus","onEmojiClick","event","emojiObject","sendMessage","isCreatePostOpen","setIsCreatePostOpen","isChangingProfileImage","setIsChangingProfileImage","title","setBody","newPostImage","setNewPostImage","newProfileImage","setNewProfileImage","myPosts","setMyPosts","followData","setFollowData","profileImgParams","setProfileImgParams","newfollowData","Promise","resolve","reject","i","img","createElement","picture","onload","params","height","minWidth","minHeight","then","setPostData","formData","FormData","append","catch","err","changeProfileImage","alt","followers","following","post","files","userProfile","setUserProfile","isFollowing","setIsFollowing","useParams","includes","followUser","followId","unfollowUser","unfollowId","pop","other","Users","likes","isLiked","setIsLiked","isLoaded","setIsLoaded","setLikesCount","comments","setComments","commentsCount","setCommentsCount","showAllComments","setShowAllComments","newComment","setNewComment","commentsField","postId","newCommentHandler","text","toggle","sort","b","color","item","createdAt","allPosts","setAllPosts","login","M","toast","html","email","password","form","setForm","isRegistrateForm","setIsRegistrateForm","parse","getItem","changeHandler","registerHandler","register","changeFormHandler","alert","loginHandler","htmlFor","required","appWrapper","isAuthenticated","routes","path","component","DialogsPage","exact","render","UserProfile","HomePage","fixOffset","clientHeight","AuthPage","vh","innerHeight","documentElement","setProperty","ReactDOM","getElementById"],"mappings":"yfAAMA,EAAW,WACXC,EAAuB,uBACvBC,EAAmB,mBAErBC,EAAe,CACfC,MAAO,CACH,CAACC,GAAI,EAAGC,QAAS,mBAAoBC,WAAY,IACjD,CAACF,GAAI,EAAGC,QAAS,qBAAuBC,WAAY,IACpD,CAACF,GAAI,EAAGC,QAAS,SAAUC,WAAY,IACvC,CAACF,GAAI,EAAGC,QAAS,OAAQC,WAAY,KAEzCC,YAAa,GACbC,QAAS,MAsCEC,EAnCQ,WAAmC,IAAlCC,EAAiC,uDAAzBR,EAAcS,EAAW,uCAErD,OAAOA,EAAOC,MACV,KAAKb,EACD,IAAIc,EAAU,CACVT,GAAI,EACJC,QAASK,EAAMH,YACfD,WAAY,GAEhB,OAAO,2BACAI,GADP,IAEIP,MAAM,GAAD,mBAAMO,EAAMP,OAAZ,CAAmBU,IACxBN,YAAa,KAGrB,KAAKP,EACD,OAAO,2BACAU,GADP,IAEIH,YAAaI,EAAOG,UAG5B,KAAKb,EACD,OAAO,2BAAIS,GAAX,IAAkBF,QAASG,EAAOH,UAEtC,QACI,OAAOE,ICxCfR,EAAe,CACfa,QAAS,GACTC,SAAU,GACVC,KAAM,GACNC,kBAAkB,GAoCTC,EAAgB,SAACH,GAAD,MAAe,CAACJ,KAAM,eAAgBI,aACtDI,EAAe,SAACL,GAAD,MAAc,CAACH,KAAM,cAAeG,YACnDM,EAAY,SAACJ,GAAD,MAAW,CAACL,KAAM,WAAYK,SAC1CK,EAAwB,SAACJ,GAAD,MAAuB,CAACN,KAAM,yBAA0BM,qBAE9EK,EAtCQ,WAAmC,IAAlCb,EAAiC,uDAAzBR,EAAcS,EAAW,uCACrD,OAAQA,EAAOC,MACX,IAAK,eACD,OAAO,eACAF,GAEX,IAAK,eACD,OAAO,2BACAA,GADP,IAEIc,eAAgB,GAChBR,SAAUL,EAAOK,WAEzB,IAAK,cACD,OAAO,2BACAN,GADP,IAEIK,QAASJ,EAAOI,UAExB,IAAK,WACD,OAAO,2BACAL,GADP,IAEIO,KAAMN,EAAOM,OAErB,IAAK,yBACD,OAAO,2BACAP,GADP,IAEIQ,iBAAkBP,EAAOO,mBAEjC,QACI,OAAOR,ICnCfR,EAAe,GAMJuB,EAJQ,WAAmC,IAAlCf,EAAiC,uDAAzBR,EAC5B,OAAOQ,GCHLgB,EAAS,SACTC,EAAW,WACXC,EAAY,YACZC,EAAmB,mBACnBC,EAAwB,wBACxBC,EAAqB,qBACrBC,EAA+B,+BAEjC9B,EAAe,CACf+B,MAAO,GACPC,SAAU,EACVC,gBAAiB,EACjBC,YAAa,EACbC,YAAY,EACZC,oBAAqB,IA2DVC,EAxDM,WAAmC,IAAlC7B,EAAiC,uDAAzBR,EAAcS,EAAW,uCACnD,OAAOA,EAAOC,MACV,KAAKc,EACD,OAAO,2BACAhB,GADP,IAEIuB,MAAOvB,EAAMuB,MAAMO,KAAK,SAAAC,GACpB,OAAIA,EAAErC,KAAOO,EAAO+B,OACT,2BAAID,GAAX,IAAcE,UAAU,IAErBF,OAGnB,KAAKd,EACD,OAAO,2BACAjB,GADP,IAEIuB,MAAOvB,EAAMuB,MAAMO,KAAK,SAAAC,GACpB,OAAIA,EAAErC,KAAOO,EAAO+B,OACT,2BAAID,GAAX,IAAcE,UAAU,IAErBF,OAGnB,KAAKb,EACD,OAAO,2BAAKlB,GAAZ,IAAmBuB,MAAOtB,EAAOsB,QAErC,KAAKJ,EACD,OAAO,2BAAKnB,GAAZ,IAAmB0B,YAAazB,EAAOyB,cAE3C,KAAKN,EACD,OAAO,2BAAKpB,GAAZ,IAAmByB,gBAAiBxB,EAAOiC,QAE/C,KAAKb,EACD,OAAO,2BAAKrB,GAAZ,IAAmB2B,WAAY1B,EAAO0B,aAE1C,KAAKL,EACD,OAAO,2BACAtB,GADP,IAEI4B,oBAAqB3B,EAAO0B,WAAP,sBACX3B,EAAM4B,qBADK,CACgB3B,EAAO+B,SACtChC,EAAM4B,oBAAoBO,QAAO,SAAAzC,GAAE,OAAIA,IAAOO,EAAO+B,YAGnE,QACI,OAAOhC,IC5DfR,EAAe,CACf4C,MAAO,KACPC,KAAM,IA6BGC,EAAU,SAACC,EAAWF,GAAZ,MAAsB,CAACnC,KAAM,QAASqC,YAAWF,SAEzDG,EA5BK,WAAmC,IAAlCxC,EAAiC,uDAAzBR,EAAcS,EAAW,uCAClD,OAAQA,EAAOC,MACX,IAAK,QAMD,OALAuC,eAAeC,QAAQ,cAAeC,KAAKC,UAAU,CACjDR,MAAOnC,EAAOsC,UACdF,KAAMpC,EAAOoC,QAGV,2BACArC,GADP,IAEIoC,MAAOnC,EAAOsC,UACdF,KAAMpC,EAAOoC,OAErB,IAAK,SAGD,OAFAI,eAAeI,WAAW,eAEnB,2BACA7C,GADP,IAEIoC,MAAO,KACPC,KAAM,KAEd,QACI,OAAOrC,ICpBb8C,EAAWC,YAAgB,CAC7BC,YAAajD,EACbkD,YAAapC,EACbqC,QAASnC,EACToC,UAAWtB,EACXuB,KAAMZ,IAKKa,EAFDC,YAAYR,G,8FCbbS,EAAU,WAAO,IAAD,EACKC,oBAAS,GADd,mBAClBC,EADkB,KACTC,EADS,OAECF,mBAAS,MAFV,mBAElBG,EAFkB,KAEXC,EAFW,KA8BzB,MAAO,CAACH,UAASE,QAAOE,QA3BRC,sBAAW,uCAAE,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,GAAnD,SAEjBD,IACAA,EAAOvB,KAAKC,UAAUsB,GACtBC,EAAQ,gBAAkB,oBAJT,SAQHC,MAAM,qCAAD,OAAsCL,GAAO,CAACE,SAAQC,OAAMC,YAR9D,cAQfE,EARe,iBASFA,EAAIC,OATF,WASfC,EATe,OAWhBF,EAAIG,GAXY,uBAYX,IAAIC,MAAMF,EAAK5E,SAAW,wBAZf,eAerB+D,GAAW,GAfU,kBAiBda,GAjBc,wCAmBrBb,GAAW,GACXE,EAAS,KAAEjE,SApBU,+DAAF,sDAuBxB,IAI8B+E,WAFdZ,uBAAY,kBAAMF,EAAS,QAAO,MC9B1C,MAA0B,iC,kBC4E1Be,eAdO,SAAC3E,GACnB,MAAO,CACHoC,MAAOpC,EAAMoD,KAAKhB,UAID,SAACwC,GACtB,MAAO,CACHC,OAAQ,WACJD,EJvCmB,CAAC1E,KAAM,eI4CvByE,EAnEA,SAACG,GAAW,IAChBD,EAAUC,EAAVD,OACDE,EAAUC,cAFM,EAGezB,IAAvBM,GAHQ,EAGfF,MAHe,EAGRE,SAHQ,KAGCa,WACelB,mBAAS,KAJzB,mBAIfyB,EAJe,KAIFC,EAJE,OAKc1B,mBAAS,IALvB,mBAKf2B,EALe,KAKHC,EALG,KAatBC,oBAAS,sBAAC,4BAAArB,EAAA,0DACFiB,EADE,0CAGsBpB,EAAQ,+BAAgC,OAAQ,CAACyB,MAAOL,GAAc,CAACM,cAAc,UAAD,OAAYT,EAAM1C,SAH5H,OAGQb,EAHR,OAIE6D,EAAc7D,GAJhB,gDAKaiE,QAAQC,IAAR,MALb,gCAOFL,EAAc,IAPZ,yDASP,CAACH,IAOJ,OACI,yBAAQS,UAAU,SAAlB,UACI,sBAAMA,UAAU,QAAhB,SAAwB,cAAC,IAAD,CAAMC,GAAG,IAAT,SAAa,6CACrC,sBAAKD,UAAU,cAAf,UACI,mBAAGA,UAAU,iBAAiBE,MAAO,CAACC,SAAU,WAAYC,IAAK,MAAOC,UAAW,oBAAnF,oBACA,uBAAOC,OAVG,aAUoB9F,KAAK,OAAO+F,YAAY,YAAYvG,GAAG,eAAewG,MAAOjB,EAAakB,SAAU,SAACC,GAAD,OAAOlB,EAAekB,EAAEC,OAAOH,UAEvH,IAAtBf,EAAWmB,QACX,qBAAKZ,UAAU,mBAAf,SACKP,EAAWrD,KAAI,SAAAO,GAAI,OAAI,cAAC,IAAD,CAAMsD,GAAI,YAActD,EAAKkE,IAAqBC,QAAS,kBAAMtB,EAAe,KAAhF,SAAqF,gCAAK,cAACuB,EAAA,EAAD,CAAQC,IAAKrE,EAAKsE,YAAcC,IAAY,4BAAIvE,EAAKwE,kBAAvGxE,EAAKkE,aAIjF,sBAAKb,UAAU,aAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,SAAa,mBAAGD,UAAU,iBAAb,oBACb,cAAC,IAAD,CAAMC,GAAG,WAAT,SAAoB,mBAAGD,UAAU,iBAAb,sBACpB,cAAC,IAAD,CAAMC,GAAG,WAAT,SAAoB,mBAAGD,UAAU,iBAAb,uBACpB,cAAC,IAAD,CAAMC,GAAG,SAAT,SAAkB,mBAAGD,UAAU,iBAAb,sBAClB,cAAC,IAAD,CAAMC,GAAG,IAAIa,QAxCH,SAACJ,GACnBA,EAAEU,iBACFjC,IACAE,EAAQgC,KAAK,MAqCL,SAAqC,mBAAGrB,UAAU,iBAAb,oC,wCC9C/CsB,EAAS,IAAIC,IAAO,uBAAwB,CAC9CC,QAAS,OAoGEvC,eAzBO,SAAC3E,GACnB,MAAO,CACHK,QAASL,EAAMiD,YAAY5C,QAC3B+B,MAAOpC,EAAMoD,KAAKhB,MAClBC,KAAMrC,EAAMoD,KAAKf,SAIA,SAACuC,GACtB,MAAO,CACHuC,WAAY,SAAC9G,GACTuE,EAASlE,EAAaL,KAE1B+G,YAAa,SAAC9G,GACVsE,EAASnE,EAAcH,KAE3B+G,QAAS,SAAA9G,GACLqE,EAASjE,EAAUJ,KAEvB+G,oBAAqB,SAACtD,GAClBY,EAAShE,EAAsBoD,QAK5BW,EAjGI,SAACG,GAAU,MAEoBvB,IAAvBM,GAFG,EAEnBJ,QAFmB,EAEVE,MAFU,EAEHE,SAFG,KAEMa,WACYlB,mBAAS,KAH3B,mBAGnB+D,EAHmB,KAGHC,EAHG,OAIAhE,mBAAS,IAJT,mBAInBiE,EAJmB,KAIZC,EAJY,KAKtBb,EAAc,GAAIlH,EAAU,GAAIgI,EAAY,EAEhDtC,qBAAU,WACNP,EAAM2C,MAAMG,SAAQ,SAAAC,GACZA,EAAGnI,KAAOoF,EAAMzC,KAAKkE,KACrBmB,EAASG,QAGlB,IAEH,IAAMC,EAAc,uCAAG,4BAAA9D,EAAA,+EAEIH,EAAQ,iCAAD,OAAkCiB,EAAMpF,IAAM,MAAO,KAAM,CAAC6F,cAAc,UAAD,OAAYT,EAAM1C,SAFtG,OAETmC,EAFS,OAGfiD,EAAkBjD,GAHH,gDAIViB,QAAQC,IAAI,GAJF,yDAAH,qDAOpBJ,qBAAU,WACNyC,IAEA,IAAMC,EAAUf,EAAOgB,UAAU,YAKjC,OAJAD,EAAQE,KAAK,cAAc,WACvBH,OAGG,WACHC,EAAQG,aACRH,EAAQI,iBAEb,CAACrD,EAAMpF,KAEV,IAAM0I,EAAc,uCAAG,4BAAApE,EAAA,+EAEIH,EAAQ,kCAAD,OAAmCiB,EAAMpF,IAAM,MAAO,KAAM,CAAC6F,cAAc,UAAD,OAAYT,EAAM1C,SAFvG,OAETmC,EAFS,OAGfO,EAAMsC,YAAY7C,EAAK8D,cACvBvD,EAAMuC,QAAQ,CACViB,SAAUb,EAAMZ,aAAetC,EAAK+D,SACpCC,QAASd,EAAMd,YAAcpC,EAAKgE,QAClCC,OAAQ1D,EAAMpF,KAElBoF,EAAMwC,qBAAoB,GATX,gDAUV9B,QAAQC,IAAI,GAVF,yDAAH,qDAapB,IACIoB,EAAcU,EAAekB,MAAM5B,YACnClH,EAAU4H,EAAe5H,QACzBgI,EAAYJ,EAAeI,UAC7B,UAEF,OACI,qBAAKnB,QAAS4B,EAAgB1C,UAAU,aAAxC,SACI,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,0BAAf,SAAyC,cAACe,EAAA,EAAD,CAAQC,IAAKe,EAAMd,YAAcC,MAC1E,sBAAKlB,UAAU,wBAAf,UACI,8BAAK,6BAAK+B,EAAMZ,aAAe/B,EAAM4D,SACrC,uBAAMhD,UAAU,2BAAhB,UAA4CmB,EAA5C,KAA2DlH,QAE/D,qBAAK+F,UAAU,YAAf,SAA2B,kCAAQ,IAAIiD,KAAKC,SAASjB,IAAYkB,WAAtC,IAAmD,IAAIF,KAAKC,SAASjB,IAAYmB,sBClE7GC,G,OARC,WACZ,OACI,qBAAKrD,UAAU,UAAf,SACI,sBAAKA,UAAU,eAAf,UAA8B,wBAAW,wBAAW,wBAAW,+BCUrEsB,EAAS,IAAIC,IAAO,uBAAwB,CAC9CC,QAAS,OA4FEvC,gBAjBO,SAAC3E,GACnB,MAAO,CACHK,QAASL,EAAMiD,YAAY5C,QAC3BG,iBAAkBR,EAAMiD,YAAYzC,iBACpC6B,KAAMrC,EAAMoD,KAAKf,KACjBD,MAAOpC,EAAMoD,KAAKhB,UAID,SAACwC,GACtB,MAAO,CACHuC,WAAY,SAAC9G,GACTuE,EAASlE,EAAaL,QAKnBsE,EAzFK,SAACG,GAAW,IAAD,EACUvB,IAAvBM,GADa,EACpBF,MADoB,EACbE,SADa,KACJa,WACOlB,oBAAS,IAFZ,mBAEpBC,EAFoB,KAEXC,EAFW,OAGWF,mBAAS,IAHpB,mBAGpBwF,EAHoB,KAGPC,EAHO,KAIrB5I,EAAU6I,iBAAO,MACjBC,EAAgBD,iBAAO,MACvBE,EAAeF,iBAAO,MAEtBG,EAAU,uCAAG,4BAAArF,EAAA,+EAEQH,EAAQ,+BAAgC,MAAO,KAAM,CACpE0B,cAAc,UAAD,OAAYT,EAAM1C,SAHxB,OAELmC,EAFK,OAKXO,EAAMqC,WAAW5C,GACjBb,GAAW,GANA,gDAOD8B,QAAQC,IAAR,MAPC,yDAAH,qDAUhBJ,qBAAU,WACLP,EAAMtE,iBAA2DH,EAAQiJ,QAAQC,UAAUC,OAAO,QAAzEnJ,EAAQiJ,QAAQC,UAAUE,IAAI,UACzD,CAAC3E,EAAMtE,mBAEV6E,qBAAU,WACNgE,IAEgBrC,EAAOgB,UAAU,SACzBC,KAAK,WAAW,WACpBoB,SAEL,IAEH,IAAMK,EAAU,uCAAG,kCAAA1F,EAAA,yDACTsE,EAAWqB,OAAO,qBAClBC,EAAWD,OAAO,2BAErBrB,IAAYsB,EAJA,iCAMHpB,EAAS,GANN,SAQY3E,EAAQ,8BAA+B,OAAQ,CAACyE,YAAW,CAAC/C,cAAc,UAAD,OAAYT,EAAM1C,SARvG,cAQDmC,EARC,OAUPiE,EAASjE,EAAKgC,IAVP,UAYD1C,EAAQ,6BAAD,OAA8B2E,GAAU,OAAQ,CACzD7I,QAASiK,EACTjC,UAAWgB,KAAKkB,OACjB,CAACtE,cAAc,UAAD,OAAYT,EAAM1C,SAf5B,0DAgBGoD,QAAQC,IAAR,MAhBH,0DAAH,qDAoBhB,OACQ,sBAAKqE,IAAKzJ,EAASqF,UAAW,eAA9B,UACI,qBAAKoE,IAAKX,EAAezD,UAAU,kBAAnC,SACI,sBAAKA,UAAU,eAAf,UACI,mBAAGA,UAAU,iBAAiBE,MAAO,CAACC,SAAU,WAAYC,IAAK,MAAOC,UAAW,mBAAoBgE,YAAa,OAApH,oBACA,uBAAO7J,KAAK,OAAO+F,YAAY,+BAA+BvG,GAAG,qBAAqBwG,MAAO8C,EAAa7C,SAAU,SAACC,GAAD,OAAO6C,EAAe7C,EAAEC,OAAOH,UACnJ,mBAAGM,QAASkD,EAAYhE,UAAU,iBAAiBE,MAAO,CAACC,SAAU,WAAYC,IAAK,MAAOkE,MAAO,IAAKjE,UAAW,mBAAoBkE,aAAc,OAAtJ,sBAGR,qBAAKH,IAAKV,EAAc1D,UAAU,iBAAlC,SAEIjC,EACA,cAAC,EAAD,IAEAqB,EAAMzE,QAAQyB,KAAI,SAAAoI,GAAM,OAAI,cAAC,EAAD,CAAYxB,KAAMwB,EAAOxB,KAAsBhJ,GAAIwK,EAAOxK,GAAIiI,UAAWuC,EAAOvC,UAAWF,MAAOyC,EAAOzC,OAArEyC,EAAOxK,e,8BCxE5EyK,I,cAVC,SAACrF,GACb,OACI,sBAAKY,UAAS,0BAAqBZ,EAAMnF,QAAQ8I,MAAM5B,cAAgB/B,EAAMsF,UAAY,sBAAzF,UACI,sBAAM1E,UAAU,gBAAhB,SAAiCZ,EAAMnF,QAAQ8I,MAAM5B,cACrD,qBAAKnB,UAAU,UAAf,SAA0BZ,EAAMnF,QAAQA,UACxC,sBAAM+F,UAAU,qBAAhB,SAAsC,IAAIiD,KAAKC,SAAS9D,EAAMnF,QAAQgI,YAAY0C,cAAcC,QAAQ,KAAM,KAAKA,QAAQ,OAAQ,W,ICRhI,I,kBCmHAC,GAxGM,SAACzF,GAAW,IAAD,EACkBvB,IAAvBM,GADK,EACrBJ,QADqB,EACZE,MADY,EACLE,SADK,KACIa,WACIlB,mBAAS,KAFjB,mBAErBgH,EAFqB,KAETC,EAFS,OAGcjH,oBAAS,GAHvB,mBAGrBkH,EAHqB,KAGNC,EAHM,OAIUnH,mBAAS,MAJnB,mBAIrBoH,EAJqB,KAIRC,EAJQ,KAUtBC,EAAkB,uCAAG,sBAAA9G,EAAA,6DACvByG,EAAc,IACdE,GAAiB,GAFM,kBAIb9G,EAAQ,6BAAD,OAA8BiB,EAAMvE,KAAKiI,QAAU,OAAQ,CACpE7I,QAAS6K,EACT7C,UAAWgB,KAAKkB,OACjB,CAACtE,cAAc,UAAD,OAAYT,EAAM1C,SAPhB,uDAQToD,QAAQC,IAAR,MARS,yDAAH,qDAWlBsF,EAAY,WACd,IACI,IAAMC,EAAQC,SAASC,cAAc,mBACrCF,EAAMG,UAAYH,EAAMI,aAC1B,YAoCN,OAjCA/F,qBAAU,WAGN,OAFAgG,OAAOC,iBAAiB,UAAU,kBAAMP,OAEjC,kBAAMM,OAAOE,oBAAoB,UAAU,kBAAMR,UACzD,IAEH1F,qBAAU,WACN,IAIM0C,EAJS,IAAId,IAAO,uBAAwB,CAC9CC,QAAS,OAGUc,UAAU,YAWjC,OAVAD,EAAQE,KAAK,aAAb,sBAA2B,4BAAAjE,EAAA,+EAEAH,EAAQ,kCAAD,OAAmCiB,EAAMvE,KAAKiI,QAAU,MAAO,KAAM,CAACjD,cAAc,UAAD,OAAYT,EAAM1C,SAF5G,OAEbmC,EAFa,OAGnBO,EAAMsC,YAAY7C,EAAK8D,cACvB0C,IAJmB,0GAQ3BA,IAEO,WACHhD,EAAQG,aACRH,EAAQI,iBAEb,CAACrD,EAAMvE,KAAKiI,SAEfnD,qBAAU,WACFuF,GACJH,GAAc,SAAAe,GAAI,OAAIA,EAAOZ,EAAYa,WAC1C,CAACb,IAGA,sBAAKlF,UAAU,WAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,mBAAGc,QAAS,kBAAM1B,EAAMwC,qBAAoB,IAAQ5B,UAAW,yBAA0BE,MAAO,CAAC8F,SAAU,QAA3G,wBACA,cAACjF,EAAA,EAAD,CAAQC,IAAK5B,EAAMvE,KAAKgI,UACxB,qBAAK7C,UAAU,uBAAf,SACI,6BAAKZ,EAAMvE,KAAK+H,aAEpB,sBAAK5C,UAAU,wBAAf,UACI,cAACiG,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,MAKJ,cAACD,GAAA,EAAD,UACI,cAACE,GAAA,EAAD,YAIZ,qBAAKnG,UAAU,iBAAf,SACMZ,EAAMxE,SAASwB,KAAK,SAAAnC,GAAO,OAAI,cAAC,GAAD,CAAayK,SAAUtF,EAAMzC,KAAKwE,YAAalH,QAASA,GAAcA,EAAQ4G,UAEnH,sBAAKb,UAAU,mBAAf,UACI,mBAAGc,QAAS,kBAAMmE,GAAkBD,IAChChF,UAAW,0BACXE,MAAO,CAAC8F,SAAU,OAAQI,OAAQ,UAAWC,MAAO,QAFxD,6BAGA,uBACI7F,MAAOsE,EACPrE,SAAU,SAAAC,GAAMqE,EAAcrE,EAAEC,OAAOH,OAAQyE,GAAiB,IAChEqB,QAAS,SAAA5F,GAAC,QAAmB,KAAdA,EAAE6F,UAAkBzB,IAAcM,KACjD5K,KAAK,OACL+F,YAAY,uBAChB,wBAAQO,QAASsE,EAAoBoB,UAAW1B,EAAhD,SAA4D,mBAAG9E,UAAW,iBAAkBE,MAAO,CAAC8F,SAAU,OAAQI,OAAQ,UAAWC,MAAO,QAApF,uBAE/DrB,GACD,qBAAK9E,MAAO,CAACC,SAAU,WAAYC,IAAK,MAAOqG,KAAM,MAAOpG,UAAW,wBAAyBqG,OAAQ,QAAxG,SACI,cAAC,KAAD,CAAQC,kBAAkB,EAAMC,aA5FvB,SAACC,EAAOC,GACzB3B,EAAe2B,YCWR7H,gBAzBO,SAAC3E,GACnB,MAAO,CACHM,SAAUN,EAAMiD,YAAY3C,SAC5BC,KAAMP,EAAMiD,YAAY1C,KACxB8B,KAAMrC,EAAMoD,KAAKf,KACjBD,MAAOpC,EAAMoD,KAAKhB,UAGD,SAACwC,GACtB,MAAO,CACH6H,YAAa,WACT7H,EdwB6B,CAAC1E,KAAM,kBctBxCkH,YAAa,SAAC9G,GACVsE,EAASnE,EAAcH,KAE3B+G,QAAS,SAAA9G,GACLqE,EAASjE,EAAUJ,KAEvB+G,oBAAqB,SAACtD,GAClBY,EAAShE,EAAsBoD,QAK5BW,CAA6C4F,ICR7C5F,gBANO,SAAC3E,GACnB,MAAO,CACHQ,iBAAkBR,EAAMiD,YAAYzC,oBAI7BmE,EAfK,SAACG,GACjB,OACI,sBAAKY,UAAU,eAAf,UACI,cAAC,GAAD,IACEZ,EAAMtE,iBAAqE,cAAC,GAAD,IAAlD,qBAAKkF,UAAU,aAAf,iCCgLxBf,I,aAAAA,aAfO,SAAC3E,GACnB,MAAO,CACHoC,MAAOpC,EAAMoD,KAAKhB,MAClBC,KAAMrC,EAAMoD,KAAKf,QAYVsC,EA9KC,SAACG,GAAW,IAAD,EACcvB,IAAvBM,GADS,EAChBF,MADgB,EACTE,SADS,KACAa,WACyBlB,oBAAS,IAFlC,mBAEhBkJ,EAFgB,KAEEC,EAFF,OAGqCnJ,oBAAS,GAH9C,mBAGhBoJ,EAHgB,KAGQC,EAHR,OAIGrJ,mBAAS,IAJZ,mBAIhBsJ,EAJgB,aAKCtJ,mBAAS,KALV,mBAKhBU,EALgB,KAKV6I,EALU,OAMiBvJ,mBAAS,IAN1B,mBAMhBwJ,EANgB,KAMFC,EANE,OAOuBzJ,mBAAS,IAPhC,mBAOhB0J,EAPgB,KAOCC,EAPD,OAQO3J,mBAAS,MARhB,mBAQhB4J,EARgB,KAQPC,EARO,OASa7J,mBAAS,MATtB,mBAShB8J,EATgB,KASJC,EATI,OAUyB/J,mBAAS,MAVlC,mBAUhBgK,EAVgB,KAUEC,EAVF,KAYvBpI,oBAAS,sBAAC,8BAAArB,EAAA,sEACaH,EAAQ,yBAA0B,MAAO,KAAM,CAC9D0B,cAAc,UAAD,OAAYT,EAAM1C,SAF7B,cACAmC,EADA,gBAIsBV,EAAQ,8BAA+B,MAAO,KAAM,CAC5E0B,cAAc,UAAD,OAAYT,EAAM1C,SAL7B,OAIAsL,EAJA,OAQN,IAAIC,SAAQ,SAASC,EAASC,GAC1B,IADmC,IAAD,WACzBC,GACL,IAAIC,EAAM9C,SAAS+C,cAAc,OACjCD,EAAIrH,IAAInC,EAAK9E,MAAMqO,GAAGG,QACtBF,EAAIG,OAAS,WACT3J,EAAK9E,MAAMqO,GAAGK,OAASJ,EAAIhC,OAASgC,EAAIK,OACxC,CAACA,OAAQ,OAAQC,SAAU,OAAQtC,MAAO,OAAQuC,UAAW,QAE7D,CAACF,OAAQ,OAAQC,SAAU,OAAQtC,MAAO,OAAQuC,UAAW,QAEzDR,EAAE,IAAMvJ,EAAK9E,MAAM6G,QAAQsH,MAT9BE,EAAI,EAAGA,EAAIvJ,EAAK9E,MAAM6G,SAAUwH,EAAG,EAAnCA,MAYVS,MAAK,WACJhB,EAAcG,GACdL,EAAW9I,EAAK9E,UAGpB,IAAIkO,SAAQ,SAASC,EAASC,GAC1B,IAAIE,EAAM9C,SAAS+C,cAAc,OACjCD,EAAIrH,IAAM5B,EAAMzC,KAAKsE,WACrBoH,EAAIG,OAAS,WACTT,GAAoB,WAChB,OAAIM,EAAIhC,MAAQgC,EAAIK,OACb,CAACA,OAAQ,OAAQC,SAAU,QACzBN,EAAIhC,MAAQgC,EAAIK,OAClB,CAACrC,MAAO,OAAQuC,UAAW,QACtB,CAACF,OAAQ,OAAQrC,MAAO,WAGxC6B,QAtCF,2CA0CP,IAEH,IAAMY,EAAW,uCAAG,4BAAAxK,EAAA,6DACVyK,EAAW,IAAIC,UACZC,OAAO,OAAQ3B,GACxByB,EAASE,OAAO,gBAAiB,kBACjCF,EAASE,OAAO,aAAc,kBAJd,SAKVvK,MAAM,8DAA+D,CACvEH,OAAQ,OACRC,KAAMuK,IAETF,MAAK,SAAAlK,GAAG,OAAIA,EAAIC,UAChBiK,KALK,uCAKA,WAAME,GAAN,SAAAzK,EAAA,sEACIH,EAAQ,sBAAuB,OAAQ,CAACiJ,QAAO5I,OAAM+J,QAASQ,EAAS1K,KAAM,CAC/EwB,cAAc,UAAD,OAAYT,EAAM1C,SAFjC,OAIFuK,GAAoB,GAJlB,2CALA,uDAWLiC,OAAM,SAAAC,GAAG,OAAIrJ,QAAQC,IAAIoJ,MAhBV,2CAAH,qDAmBXC,EAAkB,uCAAG,4BAAA9K,EAAA,6DACjByK,EAAW,IAAIC,UACZC,OAAO,OAAQzB,GACxBuB,EAASE,OAAO,gBAAiB,kBACjCF,EAASE,OAAO,aAAc,kBAJP,SAKjBvK,MAAM,8DAA+D,CACvEH,OAAQ,OACRC,KAAMuK,IAETF,MAAK,SAAAlK,GAAG,OAAIA,EAAIC,UAChBiK,KALK,uCAKA,WAAME,GAAN,eAAAzK,EAAA,sEACiBH,EAAQ,4BAA6B,MAAO,CAACoK,QAASQ,EAAS1K,KAAM,CACpFwB,cAAc,UAAD,OAAYT,EAAM1C,SAFjC,OACImC,EADJ,OAIF9B,eAAeC,QAAQ,cAAeC,KAAKC,UAAU,CACjDR,MAAO0C,EAAM1C,MAAOC,KAAMkC,KAE9BsI,GAA0B,GAPxB,2CALA,uDAcL+B,OAAM,SAAAC,GAAG,OAAIrJ,QAAQC,IAAIoJ,MAnBH,2CAAH,qDA4BxB,OACI,mCAEKzB,EAGD,sBAAK1H,UAAU,eAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,SAAf,SACI,qBAAKE,MAAO4H,EAAkBhH,QAAS,kBAAMqG,GAA0B,IAAOnG,IAAK5B,EAAMzC,KAAKsE,YAAcC,EAAWmI,IAAI,OAE/H,sBAAKrJ,UAAU,OAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,6BAAKZ,EAAMzC,KAAKwE,cAChB,8CACA,wBAAQL,QAAS,kBAAMmG,GAAoB,IAA3C,yBAEJ,sBAAKjH,UAAU,aAAf,UACI,+BAAI,iCAAS0H,EAAQ9G,SAArB,YACA,+BAAI,iCAASgH,EAAW0B,UAAU1I,SAAlC,gBACA,+BAAI,iCAASgH,EAAW2B,UAAU3I,SAAlC,yBAKZ,qBAAKZ,UAAU,mBAAf,SAEC0H,EAAQtL,KAAI,SAACoN,EAAMpB,GAAP,OAAa,8BAAoB,8BAAK,qBAAKpH,IAAKwI,EAAKjB,QAASc,IAAI,GAAInJ,MAAOsJ,EAAKf,YAA3De,EAAK3I,UAGxCqG,GAA0B,mCACvB,qBAAKlH,UAAU,gBAAf,SACI,sBAAKA,UAAU,cAAf,UACI,gDACA,uBAAOxF,KAAK,OAAOiG,SAAU,SAAAC,GAAC,OAAI+G,EAAmB/G,EAAEC,OAAO8I,MAAM,OACpE,wBAAQ3I,QAASsI,EAAjB,2BAIXpC,GAAoB,mCACjB,qBAAKhH,UAAU,gBAAf,SACI,sBAAKA,UAAU,cAAf,UACI,+CACA,uBAAOxF,KAAK,OAAO+F,YAAY,oBAAoBC,MAAOhC,EAAMiC,SAAU,SAAAC,GAAC,OAAI2G,EAAQ3G,EAAEC,OAAOH,UAChG,gDACA,uBAAOhG,KAAK,OAAOiG,SAAU,SAAAC,GAAC,OAAI6G,EAAgB7G,EAAEC,OAAO8I,MAAM,OACjE,wBAAQ3I,QAASgI,EAAjB,8BA1ChB,cAAC,EAAD,UCgEG7J,gBAfO,SAAC3E,GACnB,MAAO,CACHoC,MAAOpC,EAAMoD,KAAKhB,MAClBC,KAAMrC,EAAMoD,KAAKf,QAYVsC,EA9KC,SAACG,GAAW,IAAD,EACcvB,IAAvBM,GADS,EAChBF,MADgB,EACTE,SADS,KACAa,WACelB,mBAAS,OAFxB,mBAEhB4L,EAFgB,KAEHC,EAFG,OAGe7L,mBAAS,MAHxB,mBAGhB8L,EAHgB,KAGHC,EAHG,OAIyB/L,mBAAS,MAJlC,mBAIhBgK,EAJgB,KAIEC,EAJF,KAKhBzL,EAAUwN,cAAVxN,OAEPqD,oBAAS,sBAAC,4BAAArB,EAAA,sEACaH,EAAQ,uBAAD,OAAwB7B,GAAU,MAAO,KAAM,CACrEuD,cAAc,UAAD,OAAYT,EAAM1C,SAF7B,OACAmC,EADA,OAKN,IAAIoJ,SAAQ,SAASC,EAASC,GAC1B,IADmC,IAAD,WACzBC,GACL,IAAIC,EAAM9C,SAAS+C,cAAc,OACjCD,EAAIrH,IAAInC,EAAK9E,MAAMqO,GAAGG,QACtBF,EAAIG,OAAS,WACT3J,EAAK9E,MAAMqO,GAAGK,OAASJ,EAAIhC,OAASgC,EAAIK,OACxC,CAACA,OAAQ,OAAQC,SAAU,OAAQtC,MAAO,OAAQuC,UAAW,QAE7D,CAACF,OAAQ,OAAQC,SAAU,OAAQtC,MAAO,OAAQuC,UAAW,QAEzDR,EAAE,IAAMvJ,EAAK9E,MAAM6G,QAAQsH,MAT9BE,EAAI,EAAGA,EAAIvJ,EAAK9E,MAAM6G,SAAUwH,EAAG,EAAnCA,MAYVS,MAAK,WACJc,EAAe9K,GACfgL,EAAehL,EAAKlC,KAAK2M,UAAUS,SAAS3K,EAAMzC,KAAKkE,SApBrD,2CAsBP,IAEHlB,qBAAU,WACF+J,GACA,IAAIzB,SAAQ,SAASC,EAASC,GAC1B,IAAIE,EAAM9C,SAAS+C,cAAc,OACjCD,EAAIrH,IAAM0I,EAAY/M,KAAKsE,WAC3BoH,EAAIG,OAAS,WACTT,EAAoBM,EAAIhC,OAASgC,EAAIK,OACrC,CAACA,OAAQ,OAAQC,SAAU,OAAQtC,MAAO,OAAQuC,UAAW,QAE7D,CAACF,OAAQ,OAAQC,SAAU,OAAQtC,MAAO,OAAQuC,UAAW,SAE7DV,UAIb,CAACwB,IAEJ,IAAMM,EAAU,uCAAG,sBAAA1L,EAAA,sEACIH,EAAQ,wBAAyB,MAAO,CAAC8L,SAAU3N,GAAS,CAC3EuD,cAAc,UAAD,OAAYT,EAAM1C,SAFpB,cAKfiN,GAAe,SAAA7D,GAEX,OADAA,EAAKnJ,KAAK2M,UAAUjI,KAAK,IAClByE,KAGX+D,GAAe,GAVA,2CAAH,qDAaVK,EAAY,uCAAG,sBAAA5L,EAAA,sEACEH,EAAQ,0BAA2B,MAAO,CAACgM,WAAY7N,GAAS,CAC/EuD,cAAc,UAAD,OAAYT,EAAM1C,SAFlB,cAKjBiN,GAAe,SAAA7D,GAEX,OADAA,EAAKnJ,KAAK2M,UAAUc,MACbtE,KAGX+D,GAAe,GAVE,2CAAH,qDAaZ9C,EAAW,uCAAG,gCAAAzI,EAAA,4DACC,SACX4F,EAAW,QAFD,SAMJpB,EAAS,GANL,SAQW3E,EAAQ,8BAA+B,OAAQ,CAACyE,SAP1D,SAOoEyH,MAAO/N,GAAS,CAACuD,cAAc,UAAD,OAAYT,EAAM1C,SARrH,cAQFmC,EARE,OAURiE,EAASjE,EAAKgC,IAVN,UAYF1C,EAAQ,6BAAD,OAA8B2E,GAAU,OAAQ,CACzD7I,QAASiK,EACTjC,UAAWgB,KAAKkB,OACjB,CAACtE,cAAc,UAAD,OAAYT,EAAM1C,SAf3B,0DAgBEoD,QAAQC,IAAR,MAhBF,0DAAH,qDAoBjB,OACI,mCAEK2J,EA4BD,sBAAK1J,UAAU,eAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,SAAf,SACI,qBAAKE,MAAO4H,EAAkB9G,IAAK0I,EAAY/M,KAAKsE,YAAcC,EAAWmI,IAAI,OAErF,sBAAKrJ,UAAU,OAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,6BAAK0J,EAAY/M,KAAKwE,cAEtByI,EACA,wBAAQ9I,QAASoJ,EAAjB,sBAEA,wBAAQpJ,QAASkJ,EAAjB,oBAEJ,wBAAQlJ,QAASiG,EAAjB,6BAEA,sBAAK/G,UAAU,aAAf,UACI,+BAAI,iCAAS0J,EAAY3P,MAAM6G,SAA/B,YACA,+BAAI,iCAAS8I,EAAY/M,KAAK2M,UAAU1I,SAAxC,gBACA,+BAAI,iCAAS8I,EAAY/M,KAAK4M,UAAU3I,SAAxC,yBAKZ,qBAAKZ,UAAU,mBAAf,SAEC0J,EAAY3P,MAAMqC,KAAI,SAAAoN,GAAI,OAAI,8BAAoB,8BAAK,qBAAKxI,IAAKwI,EAAKjB,QAASc,IAAI,GAAInJ,MAAOsJ,EAAKf,YAA3De,EAAK3I,aArDlD,cAAC,EAAD,SCrEGyJ,I,OAjCH,SAAClL,GAET,OACI,8BACI,gCACI,iCACI,8BACG,cAAC,IAAD,UACC,qBAAKiK,IAAI,GAAGrI,IAAKE,EACZlB,UAAW,kBAGpB,gCACI,8CACC,kDAIT,iCACI,iCACI,8BAAM,WACN,8BAAM,gBAEV,iCACI,8BAAM,uBACN,8BAAM,iCCmEff,I,cAAAA,aALS,SAAC3E,GAAD,MAAY,CAChCoC,MAAOpC,EAAMoD,KAAKhB,MAClBC,KAAMrC,EAAMoD,KAAKf,QAGNsC,EAxFE,SAAC,GAAyB,IAAxBuK,EAAuB,EAAvBA,KAAM9M,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KAAU,EACQkB,IAAvBM,GADe,EAC/BJ,QAD+B,EACtBE,MADsB,EACfE,SADe,KACNa,WACFlB,mBAAS0L,EAAKe,MAAMR,SAASpN,EAAKkE,OAF1B,mBAE/B2J,EAF+B,KAEtBC,EAFsB,OAGN3M,oBAAS,GAHH,mBAG/B4M,EAH+B,KAGrBC,EAHqB,OAIF7M,mBAAS0L,EAAKe,MAAM3J,QAJlB,mBAI/B1G,EAJ+B,KAInB0Q,EAJmB,OAKN9M,mBAAS0L,EAAKqB,UALR,mBAK/BA,EAL+B,KAKrBC,EALqB,OAMIhN,mBAAS0L,EAAKqB,SAASjK,QAN3B,mBAM/BmK,EAN+B,KAMhBC,EANgB,OAOQlN,oBAAS,GAPjB,mBAO/BmN,EAP+B,KAOdC,EAPc,OAQFpN,mBAAS,IARP,mBAQ/BqN,EAR+B,KAQnBC,EARmB,KAShCC,EAAgB7H,iBAAO,MATS,EAUA1F,mBAAS,MAVT,mBAU/BoH,EAV+B,KAUlBC,EAVkB,OAWIrH,oBAAS,GAXb,mBAW/BkH,EAX+B,KAWhBC,EAXgB,KAiBtCtF,oBAAS,sBAAC,4BAAArB,EAAA,0DACFoM,EADE,gCAEiBvM,EAAQ,kBAAD,OAAmBqM,EAAU,OAAS,UAAY,MAAO,CAACc,OAAQ9B,EAAK3I,KAAM,CAAChB,cAAc,UAAD,OAAYnD,KAF/H,OAEImC,EAFJ,OAGF+L,EAAc/L,EAAK0L,MAAM3J,QAHvB,2CAKP,CAAC4J,IAEJ,IAKMe,EAAiB,uCAAG,4BAAAjN,EAAA,sEACHH,EAAQ,yBAA0B,MAAO,CAACmN,OAAQ9B,EAAK3I,IAAK2K,KAAML,GAAa,CAACtL,cAAc,UAAD,OAAYnD,KADtG,OAChBmC,EADgB,OAEtBiM,EAAYjM,EAAKgM,UACjBO,EAAc,IACdJ,EAAiBnM,EAAKgM,SAASjK,QAC/BqE,GAAiB,GALK,2CAAH,qDAqBvB,OAbAtF,qBAAU,WACN0L,EAAczH,QAAQC,UAAU4H,OAAO,mBACxC,CAACR,IAEJtL,qBAAU,WACNmL,EAAYD,EAASa,MAAK,SAACpN,EAAGqN,GAAJ,OAAUA,EAAE1J,UAAY3D,EAAE2D,gBACrD,CAAC4I,IAEJlL,qBAAU,WACFuF,GACJkG,GAAc,SAAAtF,GAAI,OAAIA,EAAOZ,EAAYa,WAC1C,CAACb,IAGA,qBAAKlF,UAAU,UAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,eAAC,IAAD,CAAMC,GAAItD,EAAKkE,MAAQ2I,EAAKzG,MAAMlC,IAAM,YAAc2I,EAAKzG,MAAMlC,IAAM,WAAvE,UAAmF,cAACE,EAAA,EAAD,CAAQC,IAAKwI,EAAKzG,MAAM9B,YAAcC,IAAY,4BAAIsI,EAAKzG,MAAM5B,mBAExJ,qBAAKnB,UAAU,aAAf,SACI,qBAAKgB,IAAKwI,EAAKjB,QAASc,IAAI,OAEhC,sBAAKrJ,UAAU,eAAf,UACI,mBAAGc,QApCC,WAChB6J,GAAY,GACZF,GAAYD,IAkCyBxK,UAAW,iBAAkBE,MAAO,CAAC8F,SAAU,OAAQI,OAAQ,UAAWwF,MAAO,OAA1G,SAAoHpB,EAAU,WAAa,oBAC3I,gCAAO,6CAAgBtQ,OACvB,8BAAG,iCAASsP,EAAKzG,MAAM5B,cAAvB,IAA8CqI,EAAKhL,QACnD,8BAAK,yBAAQwB,UAAU,oBAAoBc,QAAS,kBAAMoK,GAAoBD,IAAzE,UAA6FA,EAA2B,OAAT,OAA/G,kBAA+IF,EAA/I,SACL,qBAAK/K,UAAW,yBAA0BoE,IAAKiH,EAA/C,SACKR,EAASzO,KAAI,SAAAyP,GAAI,OAAI,gCAAoB,iCAASA,EAAK9I,MAAM5B,cAAxC,IAA+D0K,EAAKL,OAA1DK,EAAKhL,UAEzC,qBAAKb,UAAU,YAAf,SAA4BwJ,EAAKsC,eAErC,sBAAK9L,UAAU,cAAf,UACKgF,GACD,qBAAK9E,MAAO,CAACC,SAAU,WAAYC,IAAK,OAAQqG,KAAM,MAAOpG,UAAW,mBAAoBqG,OAAQ,QAApG,SACI,cAAC,KAAD,CAAQC,kBAAkB,EAAMC,aA3D/B,SAACC,EAAOC,GAC3B3B,EAAe2B,QA4DD,mBAAGhG,QAAS,kBAAMmE,GAAkBD,IAAgBhF,UAAW,0BAA2BE,MAAO,CAAC8F,SAAU,OAAQI,OAAQ,UAAWC,MAAO,QAA9I,6BACA,uBAAO7F,MAAO2K,EAAY1K,SAAU,SAAAC,GAAM0K,EAAc1K,EAAEC,OAAOH,OAAQyE,GAAiB,IAAUqB,QAAS,SAAA5F,GAAC,QAAmB,KAAdA,EAAE6F,UAAkB4E,IAAcI,KAA6B/Q,KAAK,OAAO+F,YAAY,qBAC1M,wBAAQO,QAASyK,EAAmB/E,UAAW2E,EAA/C,iCC/CLlM,gBAJS,SAAC3E,GAAD,MAAY,CAChCoC,MAAOpC,EAAMoD,KAAKhB,SAGPuC,EA9BE,SAACG,GAAW,IAAD,EACQtB,mBAAS,IADjB,mBACjBiO,EADiB,KACPC,EADO,OAEMlO,oBAAS,GAFf,mBAEjBC,EAFiB,KAERC,EAFQ,OAGaH,IAAvBM,GAHU,EAGjBF,MAHiB,EAGVE,SAHU,EAGDa,WAUvB,OARAW,oBAAS,sBAAC,4BAAArB,EAAA,sEACaH,EAAQ,uBAAwB,MAAO,KAAM,CAC5D0B,cAAc,UAAD,OAAYT,EAAM1C,SAF7B,OACAmC,EADA,OAINmN,EAAYnN,EAAK9E,OACjBiE,GAAW,GALL,2CAMP,IAGC,sBAAKgC,UAAU,YAAf,UACKjC,GAAW,cAAC,EAAD,IAIZ,qBAAKiC,UAAU,mBAAf,SACK+L,EAAS3P,KAAI,SAAAoN,GAAI,OAAI,cAAC,GAAD,CAAUA,KAAMA,GAAWA,EAAK3I,gB,SCgIvD5B,I,OAAAA,aAdO,SAAC3E,GACnB,MAAO,CACHoC,MAAOpC,EAAMoD,KAAKhB,UAID,SAACwC,GACtB,MAAO,CACH+M,MAAO,SAACvP,EAAOC,GACXuC,EAAStC,EAAQF,EAAOC,QAKrBsC,EApJE,SAACG,GAAW,IAClB6M,EAAS7M,EAAT6M,MACDhS,ECPCmE,uBAAY,SAAAoN,GACX7F,OAAOuG,GAAKV,GACZ7F,OAAOuG,EAAEC,MAAM,CAACC,KAAMZ,MAE3B,IDCqB,EAGa3N,IAA9BI,EAHiB,EAGjBA,MAAOE,EAHU,EAGVA,QAASa,EAHC,EAGDA,WAHC,EAIMlB,oBAAS,GAJf,mBAIjBC,EAJiB,KAIRC,EAJQ,OAKAF,mBAAS,CAC7BuO,MAAO,GACPlL,YAAa,GACbmL,SAAU,KARU,mBAKjBC,EALiB,KAKXC,EALW,OAUwB1O,oBAAS,GAVjC,mBAUjB2O,EAViB,KAUCC,EAVD,KAYxB/M,qBAAU,WACN1F,EAAQgE,GACRe,MACF,CAACf,EAAOhE,EAAS+E,IAEnBW,qBAAU,WACN,IAAMd,EAAO5B,KAAK0P,MAAM5P,eAAe6P,QAAQ,gBAE3C/N,GAAQA,EAAKnC,OACbuP,EAAMpN,EAAKnC,MAAOmC,EAAKlC,QAE5B,CAACsP,IAEJ,IAAMY,EAAgB,SAAAnM,GAClB8L,EAAQ,2BAAID,GAAL,mBAAY7L,EAAEC,OAAOqC,KAAOtC,EAAEC,OAAOH,UAG1CsM,EAAe,uCAAG,4BAAAxO,EAAA,sEAEhBN,GAAW,GAFK,SAGOG,EAAQ,qBAAsB,OAAvB,eAAmCoO,GAAO,CAAC1M,cAAc,UAAD,OAAYT,EAAM1C,SAHxF,OAGVqQ,EAHU,OAIhB9S,EAAQ8S,EAAS9S,SACjB+D,GAAW,GACXgP,IANgB,kDAQhBC,MAAM,KAAIhT,SACV+D,GAAW,GATK,0DAAH,qDAafkP,EAAY,uCAAG,4BAAA5O,EAAA,sEAEbN,GAAW,GAFE,SAGMG,EAAQ,kBAAmB,OAApB,eAAgCoO,GAAO,CAAC1M,cAAc,UAAD,OAAYT,EAAM1C,SAHpF,OAGPmC,EAHO,OAKboN,EAAMpN,EAAKnC,MAAOmC,EAAKlC,MALV,gDAObsQ,MAAM,KAAIhT,SACV+D,GAAW,GARE,yDAAH,qDAYZgP,EAAoB,WACtBN,GAAqBD,IAGzB,OACI,mCACK1O,EACG,cAAC,EAAD,IAEA,sBAAKiC,UAAU,eAAf,UACI,qBAAKA,UAAU,OAAf,SACI,0BAASA,UAAU,OAAnB,UACI,wCACA,0DAGR,qBAAKA,UAAU,QAAf,SACI,iCACI,0BAASA,UAAU,OAAnB,UACI,uCAAUyM,EAAmB,KAAO,QACpC,qBAAKzM,UAAU,kBAAf,SACKyM,EACG,0DAA4B,mBAAG3L,QAASkM,EAAZ,SAA+B,mDAE3D,wDAA0B,mBAAGlM,QAASkM,EAAZ,SAA+B,wDAIpEP,GAAoB,sBAAKzM,UAAU,uBAAf,UACjB,uBAAOmN,QAAQ,cAAf,sBACA,uBACInK,KAAK,cACLhJ,GAAG,cACHQ,KAAK,OACLgG,MAAO+L,EAAKpL,YACZV,SAAUoM,EACVO,UAAQ,OAEhB,sBAAKpN,UAAU,wBAAf,UACI,uBAAOmN,QAAQ,QAAf,mBACA,uBACInK,KAAK,QACLhJ,GAAG,QACHQ,KAAK,QACLgG,MAAO+L,EAAKF,MACZ5L,SAAUoM,EACVO,UAAQ,OAEhB,sBAAKpN,UAAU,2BAAf,UACI,uBAAOmN,QAAQ,WAAf,sBACA,uBACInK,KAAK,WACLhJ,GAAG,WACHQ,KAAK,WACLgG,MAAO+L,EAAKD,SACZ7L,SAAUoM,EACVtM,YAAY,yBACZ6M,UAAQ,IACZ,mBAAGpN,UAAU,wBAEhByM,EACG,wBAAQzM,UAAU,aAAaxF,KAAK,SAASsG,QAASgM,EAAtD,qBAEA,wBAAQ9M,UAAU,aAAaxF,KAAK,SAASsG,QAASoM,EAAtD,qBAEJ,yBAASlN,UAAU,aAAnB,SACI,4BACI,uBAAMA,UAAU,QAAhB,oDAC2C,uBAAK,+CADhD,MACwE,iDADxE,yBE/DrBf,gBAZS,SAAC3E,GAAD,MAAY,CAChCoC,MAAOpC,EAAMoD,KAAKhB,UAGK,SAACwC,GACxB,MAAO,CACH+M,MAAO,SAACvP,EAAOC,GACXuC,EAAStC,EAAQF,EAAOC,QAKrBsC,EAxDH,SAACG,GACT,IAAMP,EAAO5B,KAAK0P,MAAM5P,eAAe6P,QAAQ,gBACzCS,EAAa7J,iBAAO,MAEpB8J,IAAoBlO,EAAM1C,MAC1B6Q,ECLF,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,WAAWC,UAAWC,KAClC,cAAC,IAAD,CAAOC,OAAK,EAACH,KAAK,WAAWI,OAAS,kBAAM,cAAC,GAAD,OAC5C,cAAC,IAAD,CAAOD,OAAK,EAACH,KAAK,mBAAmBI,OAAS,kBAAM,cAACC,GAAD,OACpD,cAAC,IAAD,CAAOF,OAAK,EAACH,KAAK,SAASI,OAAS,kBAAM,cAAC,GAAD,OAC1C,cAAC,IAAD,CAAOD,OAAK,EAACH,KAAK,IAAIC,UAAWK,QDczC,SAASC,IACL,IACIV,EAAWzJ,QAAQ1D,MAAMwI,OAASnD,SAAS/G,KAAKwP,cAAgBV,EAAkB,GAAK,GAAK,KAC9F,WAGN,OAlBIzO,GAAQA,EAAKnC,OACb0C,EAAM6M,MAAMpN,EAAKnC,MAAOmC,EAAKlC,MAGjCgD,qBAAU,WAKN,OAJAoO,IAEApI,OAAOC,iBAAiB,SAAUmI,GAE3B,kBAAMpI,OAAOE,oBAAoB,SAAUkI,MACnD,CAACT,IASA,cAAC,IAAD,UACMA,EAGE,qCACI,qBAAKtN,UAAU,eACf,sBAAKA,UAAU,MAAf,UACI,cAAC,EAAD,IACA,qBAAKoE,IAAKiJ,EAAYrN,UAAU,cAAhC,SACKuN,UAPb,cAAC,IAAD,CAAOC,KAAK,IAAIG,OAAK,EAACF,UAAWQ,UE9B7CC,GAA0B,IAArBvI,OAAOwI,YAChB5I,SAAS6I,gBAAgBlO,MAAMmO,YAAY,OAA3C,UAAsDH,GAAtD,OAEAvI,OAAOC,iBAAiB,UAAU,WAChC,IAAIsI,EAA0B,IAArBvI,OAAOwI,YAChB5I,SAAS6I,gBAAgBlO,MAAMmO,YAAY,OAA3C,UAAsDH,EAAtD,UAGFI,IAASV,OACL,cAAC,IAAD,CAAUjQ,MAAOA,EAAjB,SACI,cAAC,GAAD,MAEF4H,SAASgJ,eAAe,U","file":"static/js/main.0b909217.chunk.js","sourcesContent":["const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    newPostText: '',\r\n    profile: null\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text })\r\n\r\nexport default profileReducer;","let initialState = {\r\n    dialogs: [],\r\n    messages: [],\r\n    chat: {},\r\n    isDialogSelected: false\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SEND_MESSAGE':\r\n            return {\r\n                ...state\r\n            }\r\n        case 'SET_MESSAGES':\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: action.messages\r\n            };\r\n        case 'SET_DIALOGS':\r\n            return {\r\n                ...state,\r\n                dialogs: action.dialogs\r\n            };\r\n        case 'SET_CHAT':\r\n            return {\r\n                ...state,\r\n                chat: action.chat\r\n            };\r\n        case 'SET_IS_DIALOG_SELECTED':\r\n            return {\r\n                ...state,\r\n                isDialogSelected: action.isDialogSelected\r\n        };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = () => ({type: 'SEND_MESSAGE'});\r\nexport const setMessagesAC = (messages) => ({type: 'SET_MESSAGES', messages});\r\nexport const setDialogsAC = (dialogs) => ({type: 'SET_DIALOGS', dialogs});\r\nexport const setChatAC = (chat) => ({type: 'SET_CHAT', chat});\r\nexport const setIsDialogSelectedAC = (isDialogSelected) => ({type: 'SET_IS_DIALOG_SELECTED', isDialogSelected});\r\n\r\nexport default dialogsReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId })\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport default usersReducer;","let initialState = {\r\n    token: null,\r\n    user: {}\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            sessionStorage.setItem('storageName', JSON.stringify({\r\n                token: action.jwtSecret,\r\n                user: action.user\r\n            }));\r\n            \r\n            return {\r\n                ...state,\r\n                token: action.jwtSecret,\r\n                user: action.user\r\n            }\r\n        case 'LOGOUT':\r\n            sessionStorage.removeItem('storageName');\r\n\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: {}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const loginAC = (jwtSecret, user) => ({type: 'LOGIN', jwtSecret, user});\r\nexport const logoutAC = () => ({type: 'LOGOUT'});\r\nexport default authReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const request = useCallback( async (url, method = 'GET', body = null, headers = {}) => {\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body);\r\n                headers['Content-Type'] = 'application/json';\r\n            }\r\n\r\n            // const res = await fetch(`http://localhost:5000${url}`, {method, body, headers});\r\n            const res = await fetch(`https://kalinaserver.herokuapp.com${url}`, {method, body, headers});\r\n            const data = await res.json();\r\n\r\n            if (!res.ok) {\r\n                throw new Error(data.message || 'Something goes wrong');\r\n            }\r\n\r\n            setLoading(false);\r\n\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n    \r\n    return {loading, error, request, clearError};\r\n} ","export default __webpack_public_path__ + \"static/media/user.c979855e.png\";","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport { useHttp } from '../../hooks/http.hook';\r\nimport { logoutAC } from '../../redux/auth-reducer';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport './Header.scss';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nconst Header = (props) => {\r\n    const {logout} = props;\r\n    const history = useHistory();\r\n    const {error, request, clearError} = useHttp();\r\n    const [searchUsers, setSearchUsers] = useState('');\r\n    const [foundUsers, setFoundUsers] = useState([]);\r\n\r\n    const logoutHandler = (e) => {\r\n        e.preventDefault();\r\n        logout(); \r\n        history.push('/');\r\n    };\r\n    \r\n    useEffect(async () => {\r\n        if (searchUsers) {\r\n            try{\r\n                const users = await request('/api/users/post/users-search', 'POST', {query: searchUsers}, {Authorization: `Bearer ${props.token}`});\r\n                setFoundUsers(users);\r\n            } catch (err) {console.log(err)}\r\n        } else {\r\n            setFoundUsers([]);\r\n        }\r\n    }, [searchUsers]);\r\n\r\n    const onSearchClose = () => {\r\n        // setFoundUsers([]);\r\n        // setSearchUsers('');\r\n    }\r\n\r\n    return (\r\n        <header className='header'>\r\n            <span className=\"label\"><Link to=\"/\"><big>Kalina</big></Link></span>\r\n            <div className=\"search-user\">\r\n                <i className=\"material-icons\" style={{position: 'absolute', top: '50%', transform: 'translateY(-50%)'}}>search</i>\r\n                <input onBlur={onSearchClose} type=\"text\" placeholder=\"Search...\" id=\"search-input\" value={searchUsers} onChange={(e) => setSearchUsers(e.target.value)}/>\r\n                {\r\n                    foundUsers.length !== 0 &&\r\n                    <div className=\"dropdown-content\">\r\n                        {foundUsers.map(user => <Link to={'/profile/' + user._id}  key={user._id} onClick={() => setSearchUsers('')}><div><Avatar src={user.profileImg || userPhoto}/><p>{user.displayName}</p></div></Link>)}\r\n                    </div> \r\n                }\r\n            </div>\r\n            <div className=\"navigation\">\r\n                <Link to=\"/\"><i className=\"material-icons\">home</i></Link>\r\n                <Link to=\"/profile\"><i className=\"material-icons\">person</i></Link>\r\n                <Link to=\"/dialogs\"><i className=\"material-icons\">message</i></Link>\r\n                <Link to=\"/users\"><i className=\"material-icons\">people</i></Link>\r\n                <Link to=\"/\" onClick={logoutHandler}><i className=\"material-icons\">exit_to_app</i></Link>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logout: () => {\r\n            dispatch(logoutAC());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { useEffect, useState } from 'react';\r\nimport './DialogItem.scss';\r\nimport {Link} from \"react-router-dom\";\r\nimport { Avatar } from '@material-ui/core';\r\nimport Pusher from 'pusher-js';\r\nimport { setChatAC, setDialogsAC, setIsDialogSelectedAC, setMessagesAC } from \"../../../redux/dialogs-reducer\";\r\nimport { connect } from 'react-redux';\r\nimport { useHttp } from '../../../hooks/http.hook';\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\n\r\nconst pusher = new Pusher('b634efb073fba40fbf3a', {\r\n    cluster: 'eu'\r\n});\r\n\r\nconst DialogItem = (props) => {\r\n    // const path = \"/dialogs/\" + props.id;\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [dialogsLastMsg, setDialogsLastMsg] = useState({});\r\n    const [extra, setExtra] = useState({});\r\n    let displayName = '', message = '', timestamp = 0;\r\n\r\n    useEffect(() => {\r\n        props.extra.forEach(el => {\r\n            if (el.id !== props.user._id) {\r\n                setExtra(el);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const getLastMessage = async () => {\r\n        try {\r\n            const data = await request(`/api/chats/get/lastMessage?id=${props.id}`, 'GET', null, {Authorization: `Bearer ${props.token}`});\r\n            setDialogsLastMsg(data);\r\n        } catch {console.log(1)}\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLastMessage();\r\n        \r\n        const channel = pusher.subscribe('messages');\r\n        channel.bind('newMessage', () => {\r\n            getLastMessage();   \r\n        });\r\n\r\n        return () => {\r\n            channel.unbind_all();\r\n            channel.unsubscribe();\r\n        };\r\n    }, [props.id]);\r\n\r\n    const selectedDialog = async () => {\r\n        try {\r\n            const data = await request(`/api/chats/get/conversation?id=${props.id}`, 'GET', null, {Authorization: `Bearer ${props.token}`});\r\n            props.setMessages(data.conversation);\r\n            props.setChat({\r\n                chatName: extra.displayName || data.chatName,\r\n                chatImg: extra.profileImg || data.chatImg,\r\n                chatId: props.id\r\n            });\r\n            props.setIsDialogSelected(true);\r\n        } catch {console.log(1)}\r\n    }\r\n\r\n    try {\r\n        displayName = dialogsLastMsg.owner.displayName;\r\n        message = dialogsLastMsg.message;\r\n        timestamp = dialogsLastMsg.timestamp;\r\n    } catch {}\r\n\r\n    return (\r\n        <div onClick={selectedDialog} className='dialogItem'>\r\n            <div className='dialogItem__info'>\r\n                <div className='dialogItem__info-avatar'><Avatar src={extra.profileImg || userPhoto}/></div>\r\n                <div className='dialogItem__info-main'>\r\n                    <div><h1>{extra.displayName || props.name}</h1></div>\r\n                    <span className='dialogItem__info-message'>{displayName}: {message}</span>\r\n                </div>\r\n                <div className=\"timaStamp\"><small>{new Date(parseInt(timestamp)).getMonth()}.{new Date(parseInt(timestamp)).getDay()}</small></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// {/* <div><small>.toISOString().replace(/T/g, ' ').replace(/\\..*/, '')</small> </div> */}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        token: state.auth.token,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setDialogs: (dialogs) => {\r\n            dispatch(setDialogsAC(dialogs));\r\n        },\r\n        setMessages: (messages) => {\r\n            dispatch(setMessagesAC(messages));\r\n        },\r\n        setChat: chat => {\r\n            dispatch(setChatAC(chat))\r\n        },\r\n        setIsDialogSelected: (a) => {\r\n            dispatch(setIsDialogSelectedAC(a))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogItem);","import React from 'react';\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import React, { useEffect, useRef } from 'react';\r\n// import ChatIcon from '@material-ui/icons/Chat';\r\n// import DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport \"./Dialogs.scss\";\r\n// import { IconButton, Avatar } from '@material-ui/core';\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport DialogItem from './DialogItem';\r\nimport { Button } from '@material-ui/core';\r\nimport Pusher from 'pusher-js';\r\nimport { useHttp } from '../../../hooks/http.hook';\r\nimport { setDialogsAC } from '../../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport Spinner from '../../../components/Spinner/Spinner';\r\n\r\nconst pusher = new Pusher('b634efb073fba40fbf3a', {\r\n    cluster: 'eu'\r\n});\r\n\r\nconst DialogsList = (props) => {    \r\n    const {error, request, clearError} = useHttp();\r\n    const [loading, setLoading] = useState(true);\r\n    const [searchChats, setSearchChats] = useState('');\r\n    const dialogs = useRef(null);\r\n    const dialogsHeader = useRef(null);\r\n    const dialogsItems = useRef(null);\r\n\r\n    const getDialogs = async () => {\r\n        try {\r\n            const data = await request('/api/chats/get/conversations', 'GET', null, {\r\n                Authorization: `Bearer ${props.token}`,\r\n            });\r\n            props.setDialogs(data);\r\n            setLoading(false);\r\n        } catch(err) {console.log(err)}\r\n    }\r\n    \r\n    useEffect(() => {\r\n        !props.isDialogSelected ? dialogs.current.classList.add('show') : dialogs.current.classList.remove('show');\r\n    }, [props.isDialogSelected])\r\n    \r\n    useEffect(() => {\r\n        getDialogs();\r\n        \r\n        const channel = pusher.subscribe('chats');\r\n        channel.bind('newChat', () => {\r\n            getDialogs();\r\n        });\r\n    }, []);\r\n\r\n    const addNewChat = async () => {\r\n        const chatName = prompt('Enter a chat name');\r\n        const firstMsg = prompt('Send a welcome message');\r\n\r\n        if(chatName && firstMsg) {\r\n            try {\r\n                let chatId = '';\r\n\r\n                const data = await request('/api/chats/new/conversation', 'POST', {chatName}, {Authorization: `Bearer ${props.token}`});\r\n\r\n                chatId = data._id\r\n\r\n                await request(`/api/chats/new/message?id=${chatId}`, 'POST', {\r\n                    message: firstMsg,\r\n                    timestamp: Date.now()\r\n                }, {Authorization: `Bearer ${props.token}`});\r\n            } catch(err) {console.log(err)}\r\n        }\r\n    }\r\n    \r\n    return (\r\n            <div ref={dialogs} className={'dialogs show'}>\r\n                <div ref={dialogsHeader} className='dialogs__header'>\r\n                    <div className=\"search-chats\">\r\n                        <i className=\"material-icons\" style={{position: 'absolute', top: '50%', transform: 'translateY(-50%)', paddingLeft: '5px'}}>search</i>\r\n                        <input type=\"text\" placeholder=\"Search the chat or start new\" id=\"search-chats-input\" value={searchChats} onChange={(e) => setSearchChats(e.target.value)}/>\r\n                        <i onClick={addNewChat} className=\"material-icons\" style={{position: 'absolute', top: '50%', right: '0', transform: 'translateY(-50%)', paddingRight: '5px'}}>add</i>\r\n                    </div>\r\n                </div>\r\n                <div ref={dialogsItems} className='dialogs__items'>\r\n                {\r\n                    loading ? \r\n                    <Spinner />\r\n                    :\r\n                    props.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} timestamp={dialog.timestamp} extra={dialog.extra}/> )\r\n                }\r\n                </div>\r\n            </div>\r\n    )  \r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        isDialogSelected: state.dialogsPage.isDialogSelected,\r\n        user: state.auth.user,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setDialogs: (dialogs) => {\r\n            dispatch(setDialogsAC(dialogs));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogsList);","import React from 'react';\r\nimport './MessageItem.scss';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={`messages__item  ${props.message.owner.displayName === props.userName && 'messages__receiver'}`}>\r\n            <span className='message__name'>{props.message.owner.displayName}</span>\r\n            <div className='message'>{props.message.message}</div>\r\n            <span className='message__timestamp'>{new Date(parseInt(props.message.timestamp)).toISOString().replace(/T/g, ' ').replace(/\\..*/, '')}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","export default __webpack_public_path__ + \"static/media/arrowback.f36fb0e7.svg\";","import { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, InsertEmoticon, MoreVert, SearchOutlined } from '@material-ui/icons';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Messages.scss';\r\nimport Pusher from 'pusher-js';\r\nimport MessageItem from './MessageItem';\r\nimport { useHttp } from '../../../hooks/http.hook';\r\nimport btnBack from '../../../assets/images/arrowback.svg';\r\nimport Picker from 'emoji-picker-react';\r\n\r\nconst MessagesList = (props) => {\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [newMessage, setNewMessage] = useState('');\r\n    const [isOpenedEmoji, setIsOpenedEmoji] = useState(false);\r\n    const [chosenEmoji, setChosenEmoji] = useState(null);\r\n\r\n    const onEmojiClick = (event, emojiObject) => {\r\n        setChosenEmoji(emojiObject);\r\n      };\r\n    \r\n    const onSendMessageClick = async () => {\r\n        setNewMessage('');\r\n        setIsOpenedEmoji(false);\r\n        try {\r\n            await request(`/api/chats/new/message?id=${props.chat.chatId}`, 'POST', {\r\n                message: newMessage,\r\n                timestamp: Date.now()\r\n            }, {Authorization: `Bearer ${props.token}`});\r\n        } catch(err) {console.log(err)}\r\n    }\r\n\r\n    const fixScroll = () => {\r\n        try {\r\n            const block = document.querySelector('.messages__body');\r\n            block.scrollTop = block.scrollHeight;\r\n        } catch{}\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => fixScroll());\r\n\r\n        return () => window.removeEventListener('resize', () => fixScroll());\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const pusher = new Pusher('b634efb073fba40fbf3a', {\r\n            cluster: 'eu'\r\n        });\r\n      \r\n        const channel = pusher.subscribe('messages');\r\n        channel.bind('newMessage', async () => {\r\n            try {\r\n                const data = await request(`/api/chats/get/conversation?id=${props.chat.chatId}`, 'GET', null, {Authorization: `Bearer ${props.token}`});\r\n                props.setMessages(data.conversation);\r\n                fixScroll();\r\n            } catch {}\r\n        });\r\n\r\n        fixScroll();\r\n\r\n        return () => {\r\n            channel.unbind_all();\r\n            channel.unsubscribe();\r\n        };\r\n    }, [props.chat.chatId]);\r\n\r\n    useEffect(() => {\r\n        if (chosenEmoji)\r\n        setNewMessage(prev => prev + chosenEmoji.emoji)\r\n    }, [chosenEmoji]);\r\n\r\n    return (\r\n        <div className='messages'>\r\n            <div className='messages__header'>\r\n                <i onClick={() => props.setIsDialogSelected(false)} className={\"material-icons btnBack\"} style={{fontSize: '40px'}}>arrow_back</i>\r\n                <Avatar src={props.chat.chatImg}/>\r\n                <div className='messages__headerInfo'>\r\n                    <h3>{props.chat.chatName}</h3>\r\n                </div>\r\n                <div className='messages__headerRight'>\r\n                    <IconButton>\r\n                        <SearchOutlined/>\r\n                    </IconButton>\r\n                    {/* <IconButton>\r\n                        <AttachFile/>\r\n                    </IconButton> */}\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className='messages__body'>\r\n                { props.messages.map( message => <MessageItem userName={props.user.displayName} message={message} key={message._id} /> ) }\r\n            </div>\r\n            <div className='messages__footer'>\r\n                <i onClick={() => setIsOpenedEmoji(!isOpenedEmoji)} \r\n                    className={\"material-icons emojicon\"} \r\n                    style={{fontSize: '35px', cursor: 'pointer', width: '35px'}} >insert_emoticon</i>\r\n                <input \r\n                    value={newMessage} \r\n                    onChange={e => {setNewMessage(e.target.value); setIsOpenedEmoji(false);}} \r\n                    onKeyUp={e => (e.keyCode === 13 && newMessage) ? onSendMessageClick() : false} \r\n                    type='text' \r\n                    placeholder='Enter your message'/>\r\n                <button onClick={onSendMessageClick} disabled={!newMessage}><i className={\"material-icons\"} style={{fontSize: '35px', cursor: 'pointer', width: '35px'}}>send</i></button>\r\n            </div>\r\n            {isOpenedEmoji && \r\n            <div style={{position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', zIndex: '1000'}}>\r\n                <Picker disableAutoFocus={true} onEmojiClick={onEmojiClick} />\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessagesList;","import {sendMessageCreator, setChatAC, setIsDialogSelectedAC, setMessagesAC} from \"../../../redux/dialogs-reducer\";\r\nimport MessagesList from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.dialogsPage.messages,\r\n        chat: state.dialogsPage.chat,\r\n        user: state.auth.user,\r\n        token: state.auth.token\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        },\r\n        setMessages: (messages) => {\r\n            dispatch(setMessagesAC(messages));\r\n        },\r\n        setChat: chat => {\r\n            dispatch(setChatAC(chat))\r\n        },\r\n        setIsDialogSelected: (a) => {\r\n            dispatch(setIsDialogSelectedAC(a))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessagesList);\r\n","import React from 'react';\r\nimport './DialogsPage.scss';\r\nimport Dialogs from './Dialogs/Dialogs';\r\nimport Messages from './Messages/MessagesContainer';\r\nimport { connect } from 'react-redux';\r\n \r\nconst DialogsPage = (props) => {\r\n    return (\r\n        <div className='dialogs-page'>\r\n            <Dialogs />\r\n            {!props.isDialogSelected ? <div className='chooseChat'>Choose a chat</div> : <Messages />}\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isDialogSelected: state.dialogsPage.isDialogSelected\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DialogsPage);","import { connect } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHttp } from '../../hooks/http.hook';\r\n// import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n// import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport './Profile.scss';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport Jimp from 'jimp';\r\n\r\n\r\nconst Profile = (props) => {\r\n    const {error, request, clearError} = useHttp();\r\n    const [isCreatePostOpen, setIsCreatePostOpen] = useState(false);\r\n    const [isChangingProfileImage, setIsChangingProfileImage] = useState(false);\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [newPostImage, setNewPostImage] = useState('');\r\n    const [newProfileImage, setNewProfileImage] = useState('');\r\n    const [myPosts, setMyPosts] = useState(null);\r\n    const [followData, setFollowData] = useState(null);\r\n    const [profileImgParams, setProfileImgParams] = useState(null);\r\n    \r\n    useEffect(async () => {\r\n        const data = await request('/api/posts/get/myposts', 'GET', null, {\r\n            Authorization: `Bearer ${props.token}`,\r\n        });\r\n        const newfollowData = await request('/api/users/get/myfollowdata', 'GET', null, {\r\n            Authorization: `Bearer ${props.token}`\r\n        });\r\n\r\n        new Promise(function(resolve, reject) {\r\n            for (let i = 0; i < data.posts.length; ++i){\r\n                let img = document.createElement('img');\r\n                img.src=data.posts[i].picture;\r\n                img.onload = function () { \r\n                    data.posts[i].params = img.width >= img.height ? \r\n                    {height: '100%', minWidth: '100%', width: 'none', minHeight: 'none'} \r\n                    : \r\n                    {height: 'none', minWidth: 'none', width: '100%', minHeight: '100%'}\r\n\r\n                    if (i+1 === data.posts.length) resolve();\r\n                };\r\n            }\r\n        }).then(() => {\r\n            setFollowData(newfollowData);\r\n            setMyPosts(data.posts)\r\n        });\r\n\r\n        new Promise(function(resolve, reject) {\r\n            let img = document.createElement('img');\r\n            img.src = props.user.profileImg;\r\n            img.onload = () => { \r\n                setProfileImgParams(() => {\r\n                    if (img.width > img.height)\r\n                    return {height: '100%', minWidth: '100%'} \r\n                    else if (img.width < img.height)\r\n                    return {width: '100%', minHeight: '100%'}\r\n                    else return {height: '100%', width: '100%'}\r\n                })\r\n                \r\n                resolve();\r\n            };\r\n        })\r\n        \r\n    }, []);\r\n\r\n    const setPostData = async () => {\r\n        const formData = new FormData();\r\n        formData.append('file', newPostImage);\r\n        formData.append('upload_preset', 'kalina-why-not');\r\n        formData.append('cloud_name', 'kalina-why-not');\r\n        await fetch('https://api.cloudinary.com/v1_1/kalina-why-not/image/upload', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        .then(res => res.json())\r\n        .then(async formData => {\r\n            await request('/api/posts/new/post', 'POST', {title, body, picture: formData.url}, {\r\n                Authorization: `Bearer ${props.token}`,\r\n            });\r\n            setIsCreatePostOpen(false)\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n    const changeProfileImage = async () => {\r\n        const formData = new FormData();\r\n        formData.append('file', newProfileImage);\r\n        formData.append('upload_preset', 'kalina-why-not');\r\n        formData.append('cloud_name', 'kalina-why-not');\r\n        await fetch('https://api.cloudinary.com/v1_1/kalina-why-not/image/upload', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        .then(res => res.json())\r\n        .then(async formData => {\r\n            const data = await request('/api/users/put/profileImg', 'PUT', {picture: formData.url}, {\r\n                Authorization: `Bearer ${props.token}`,\r\n            });\r\n            sessionStorage.setItem('storageName', JSON.stringify({\r\n                token: props.token, user: data\r\n            }));\r\n            setIsChangingProfileImage(false);\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n    const deletePost = async () => {\r\n        const data = await request('/api/posts/delete/post/id', 'DELETE', null, {\r\n            Authorization: `Bearer ${props.token}`,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            !myPosts ? \r\n            <Spinner />\r\n            :\r\n            <div className='profile-page'>\r\n                <div className='profile__info'>\r\n                    <div className='avatar'>\r\n                        <img style={profileImgParams} onClick={() => setIsChangingProfileImage(true)} src={props.user.profileImg || userPhoto} alt=''/>\r\n                    </div> \r\n                    <div className='info'>\r\n                        <div className='name-settings'>\r\n                            <h1>{props.user.displayName}</h1>\r\n                            <button>Settings</button>\r\n                            <button onClick={() => setIsCreatePostOpen(true)}>New post</button>\r\n                        </div>\r\n                        <div className='attributes'>\r\n                            <h3><strong>{myPosts.length}</strong> posts</h3>\r\n                            <h3><strong>{followData.followers.length}</strong> followers</h3>\r\n                            <h3><strong>{followData.following.length}</strong> following</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className='profile__gallery'>\r\n                {/* <i onClick={deletePost} className={\"material-icons\"} style={{fontSize: '30px', cursor: 'pointer', float: 'right'}}>delete</i> */}\r\n                {myPosts.map((post, i) => <div key={post._id}><div><img src={post.picture} alt=\"\"  style={post.params}/></div></div>)}\r\n                </div>\r\n                \r\n                {isChangingProfileImage && <>\r\n                    <div className='newPostWindow'>\r\n                        <div className='newPostBody'>\r\n                            <span>Upload image</span>\r\n                            <input type='file' onChange={e => setNewProfileImage(e.target.files[0])}/>\r\n                            <button onClick={changeProfileImage}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n                {isCreatePostOpen && <>\r\n                    <div className='newPostWindow'>\r\n                        <div className='newPostBody'>\r\n                            <span>Description</span>\r\n                            <input type='text' placeholder='Enter Description' value={body} onChange={e => setBody(e.target.value)}/>\r\n                            <span>Upload image</span>\r\n                            <input type='file' onChange={e => setNewPostImage(e.target.files[0])}/>\r\n                            <button onClick={setPostData}>Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </>}\r\n            </div>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         setDialogs: (dialogs) => {\r\n//             dispatch(setDialogsAC(dialogs));\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default connect(mapStateToProps)(Profile);","import { connect } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useHttp } from '../../hooks/http.hook';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport './Profile.scss';\r\nimport { Avatar } from '@material-ui/core';\r\nimport userPhoto from '../../assets/images/user.png'\r\n\r\nconst Profile = (props) => {\r\n    const {error, request, clearError} = useHttp(); \r\n    const [userProfile, setUserProfile] = useState(null);\r\n    const [isFollowing, setIsFollowing] = useState(null);\r\n    const [profileImgParams, setProfileImgParams] = useState(null);\r\n    const {userId} = useParams();\r\n\r\n    useEffect(async () => {\r\n        const data = await request(`/api/users/get/user/${userId}`, 'GET', null, {\r\n            Authorization: `Bearer ${props.token}`,\r\n        });\r\n\r\n        new Promise(function(resolve, reject) {\r\n            for (let i = 0; i < data.posts.length; ++i){\r\n                let img = document.createElement('img');\r\n                img.src=data.posts[i].picture;\r\n                img.onload = function () { \r\n                    data.posts[i].params = img.width >= img.height ? \r\n                    {height: '100%', minWidth: '100%', width: 'none', minHeight: 'none'} \r\n                    : \r\n                    {height: 'none', minWidth: 'none', width: '100%', minHeight: '100%'}\r\n\r\n                    if (i+1 === data.posts.length) resolve();\r\n                };\r\n            }\r\n        }).then(() => {\r\n            setUserProfile(data);\r\n            setIsFollowing(data.user.followers.includes(props.user._id));\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (userProfile) {\r\n            new Promise(function(resolve, reject) {\r\n                let img = document.createElement('img');\r\n                img.src = userProfile.user.profileImg;\r\n                img.onload = function () { \r\n                    setProfileImgParams(img.width >= img.height ? \r\n                    {height: '100%', minWidth: '100%', width: 'none', minHeight: 'none'} \r\n                    : \r\n                    {height: 'none', minWidth: 'none', width: '100%', minHeight: '100%'}\r\n                    )\r\n                    resolve();\r\n                };\r\n            });\r\n        }\r\n    }, [userProfile])\r\n\r\n    const followUser = async () => {\r\n        const data = await request(`/api/users/put/follow`, 'PUT', {followId: userId}, {\r\n            Authorization: `Bearer ${props.token}`,\r\n        }); \r\n        \r\n        setUserProfile(prev => {\r\n            prev.user.followers.push('');\r\n            return prev;\r\n        });\r\n\r\n        setIsFollowing(true);\r\n    }\r\n\r\n    const unfollowUser = async () => {\r\n        const data = await request(`/api/users/put/unfollow`, 'PUT', {unfollowId: userId}, {\r\n            Authorization: `Bearer ${props.token}`,\r\n        }); \r\n        \r\n        setUserProfile(prev => {\r\n            prev.user.followers.pop();\r\n            return prev;\r\n        });\r\n\r\n        setIsFollowing(false);\r\n    }\r\n\r\n    const sendMessage = async () => {\r\n        const chatName = 'prompt';\r\n        const firstMsg = 'Hello';\r\n\r\n        // if(chatName && firstMsg) {\r\n            try {\r\n                let chatId = '';\r\n\r\n                const data = await request('/api/chats/new/conversation', 'POST', {chatName, other: userId}, {Authorization: `Bearer ${props.token}`});\r\n\r\n                chatId = data._id\r\n\r\n                await request(`/api/chats/new/message?id=${chatId}`, 'POST', {\r\n                    message: firstMsg,\r\n                    timestamp: Date.now()\r\n                }, {Authorization: `Bearer ${props.token}`});\r\n            } catch(err) {console.log(err)}\r\n        // }\r\n    }\r\n    \r\n    return(\r\n        <>\r\n        {\r\n            !userProfile ?\r\n            <Spinner />\r\n            :\r\n            // <div className='profile-page'>\r\n            //     <div className='profile__info'>\r\n            //         <div>\r\n            //             <Avatar src={userProfile.profileImg || userPhoto}/>                    </div> \r\n            //         <div>\r\n            //             <h4>{userProfile.user.displayName}</h4>\r\n            //             <div className='profile__info-attributes'>\r\n            //                 <h5>{userProfile.posts.length} posts</h5>\r\n            //                 <h5>{userProfile.user.followers.length} followers</h5>\r\n            //                 <h5>{userProfile.user.following.length} following</h5>\r\n            //             </div>\r\n            //             {\r\n            //                 isFollowing ? \r\n            //                 <button onClick={unfollowUser}>Unfollow</button>\r\n            //                 :\r\n            //                 <button onClick={followUser}>Follow</button>\r\n            //             }\r\n                        \r\n            //             <button onClick={sendMessage}>Send hello message</button>\r\n            //         </div>\r\n            //     </div>\r\n            //     <div className='profile__gallery'>\r\n            //         {userProfile.posts.map(post => <img key={post._id} src={post.picture} alt=\"\"/>)}\r\n            //     </div>\r\n            // </div>\r\n            <div className='profile-page'>\r\n                <div className='profile__info'>\r\n                    <div className='avatar'>\r\n                        <img style={profileImgParams} src={userProfile.user.profileImg || userPhoto} alt=''/>\r\n                    </div> \r\n                    <div className='info'>\r\n                        <div className='name-settings'>\r\n                            <h1>{userProfile.user.displayName}</h1>\r\n                        {\r\n                            isFollowing ? \r\n                            <button onClick={unfollowUser}>Unfollow</button>\r\n                            :\r\n                            <button onClick={followUser}>Follow</button>\r\n                        }\r\n                        <button onClick={sendMessage}>Send message</button>\r\n                        </div>\r\n                        <div className='attributes'>\r\n                            <h3><strong>{userProfile.posts.length}</strong> posts</h3>\r\n                            <h3><strong>{userProfile.user.followers.length}</strong> followers</h3>\r\n                            <h3><strong>{userProfile.user.following.length}</strong> following</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className='profile__gallery'>\r\n                {/* <i onClick={deletePost} className={\"material-icons\"} style={{fontSize: '30px', cursor: 'pointer', float: 'right'}}>delete</i> */}\r\n                {userProfile.posts.map(post => <div key={post._id}><div><img src={post.picture} alt=\"\"  style={post.params}/></div></div>)}\r\n                </div>\r\n            </div>\r\n        }\r\n        </>        \r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         setDialogs: (dialogs) => {\r\n//             dispatch(setDialogsAC(dialogs));\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default connect(mapStateToProps)(Profile);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport './Users.scss';\r\n\r\nlet Users = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <span>\r\n                    <div>\r\n                       <Link>\r\n                        <img alt='' src={userPhoto}\r\n                             className={'userPhoto'}/>\r\n                       </Link>\r\n                    </div>\r\n                    <div>\r\n                        <button>Unfollow</button>\r\n                         <button>Follow</button>\r\n\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{'u.name'}</div>\r\n                        <div>{'u.status'}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import { connect } from 'react-redux';\r\nimport React, { useEffect, useRef } from 'react';\r\nimport { useState } from 'react';\r\nimport { useHttp } from '../../hooks/http.hook';\r\nimport { Link } from 'react-router-dom';\r\nimport userPhoto from '../../assets/images/user.png';\r\nimport { Avatar } from '@material-ui/core';\r\nimport Picker from 'emoji-picker-react';\r\n\r\nconst PostItem = ({post, token, user}) => {\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [isLiked, setIsLiked] = useState(post.likes.includes(user._id));\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [likesCount, setLikesCount] = useState(post.likes.length);\r\n    const [comments, setComments] = useState(post.comments);\r\n    const [commentsCount, setCommentsCount] = useState(post.comments.length);\r\n    const [showAllComments, setShowAllComments] = useState(false);\r\n    const [newComment, setNewComment] = useState('');\r\n    const commentsField = useRef(null);\r\n    const [chosenEmoji, setChosenEmoji] = useState(null);\r\n    const [isOpenedEmoji, setIsOpenedEmoji] = useState(false);\r\n\r\n    const onEmojiClick = (event, emojiObject) => {\r\n      setChosenEmoji(emojiObject);\r\n    };\r\n\r\n    useEffect(async () => {\r\n        if (isLoaded) {\r\n            const data = await request(`/api/posts/put/${isLiked ? 'like' : 'unlike'}`, 'PUT', {postId: post._id}, {Authorization: `Bearer ${token}`});\r\n            setLikesCount(data.likes.length);\r\n        }\r\n    }, [isLiked]);\r\n\r\n    const likeHandler = () => {\r\n        setIsLoaded(true);\r\n        setIsLiked(!isLiked);\r\n    }\r\n    \r\n    const newCommentHandler = async () => {\r\n        const data = await request(`/api/posts/put/comment`, 'PUT', {postId: post._id, text: newComment}, {Authorization: `Bearer ${token}`});\r\n        setComments(data.comments);\r\n        setNewComment('');\r\n        setCommentsCount(data.comments.length);\r\n        setIsOpenedEmoji(false);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        commentsField.current.classList.toggle('show-comments');\r\n    }, [showAllComments]);\r\n\r\n    useEffect(() => {\r\n        setComments(comments.sort((a, b) => b.timestamp - a.timestamp));\r\n    }, [comments]);\r\n\r\n    useEffect(() => {\r\n        if (chosenEmoji)\r\n        setNewComment(prev => prev + chosenEmoji.emoji)\r\n    }, [chosenEmoji]);\r\n\r\n    return (\r\n        <div className='element'>\r\n            <div className='card'>\r\n                <div className='card-header'>\r\n                    <Link to={user._id !== post.owner._id ? '/profile/' + post.owner._id : '/profile'}><Avatar src={post.owner.profileImg || userPhoto}/><p>{post.owner.displayName}</p></Link>\r\n                </div>\r\n                <div className='card-image'>\r\n                    <img src={post.picture} alt=\"\"/>\r\n                </div>\r\n                <div className='card-content'>\r\n                    <i onClick={likeHandler} className={\"material-icons\"} style={{fontSize: '35px', cursor: 'pointer', color: 'red'}} >{isLiked ? 'favorite' : 'favorite_border'}</i>\r\n                    <small><strong>Likes: {likesCount}</strong></small>\r\n                    <p><strong>{post.owner.displayName}</strong> {post.body}</p>\r\n                    <div><strong className='show-comments-btn' onClick={() => setShowAllComments(!showAllComments)}>{!showAllComments ? 'Show' : 'Hide'} all comments ({commentsCount})</strong></div>\r\n                    <div className={'comments show-comments'} ref={commentsField}>\r\n                        {comments.map(item => <div key={item._id}><strong>{item.owner.displayName}</strong> {item.text}</div>)}\r\n                    </div>\r\n                    <div className='timestamp'>{post.createdAt}</div>\r\n                </div>\r\n                <div className='new-comment'>\r\n                    {isOpenedEmoji && \r\n                    <div style={{position: 'absolute', top: '50px', left: '50%', transform: 'translateX(-50%)', zIndex: '1000'}}>\r\n                        <Picker disableAutoFocus={true} onEmojiClick={onEmojiClick} />\r\n                    </div>}\r\n                    <i onClick={() => setIsOpenedEmoji(!isOpenedEmoji)} className={\"material-icons emojicon\"} style={{fontSize: '35px', cursor: 'pointer', width: '35px'}} >insert_emoticon</i>\r\n                    <input value={newComment} onChange={e => {setNewComment(e.target.value); setIsOpenedEmoji(false);}} onKeyUp={e => (e.keyCode === 13 && newComment) ? newCommentHandler() : false} type='text' placeholder='Add a comment...'/>\r\n                    <button onClick={newCommentHandler} disabled={!newComment}>Publish</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token,\r\n    user: state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PostItem);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Slider from '../../components/Slider/Slider';\r\nimport { useHttp } from '../../hooks/http.hook';\r\nimport './HomePage.scss';\r\nimport PostItem from './PostItem';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\n\r\nconst HomePage = (props) => {\r\n    const [allPosts, setAllPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const {error, request, clearError} = useHttp();\r\n\r\n    useEffect(async () => {\r\n        const data = await request('/api/posts/get/posts', 'GET', null, {\r\n            Authorization: `Bearer ${props.token}`,\r\n        });\r\n        setAllPosts(data.posts)\r\n        setLoading(false)\r\n    }, []);\r\n\r\n    return (\r\n        <div className='home-page'>\r\n            {loading && <Spinner/>}\r\n            {/* <div className='element'>\r\n                <Slider imgWidth={1200} imgHeight={500}/>\r\n            </div> */}\r\n            <div className='home-page__inner'>\r\n                {allPosts.map(post => <PostItem post={post} key={post._id}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token\r\n});\r\n\r\nexport default connect(mapStateToProps)(HomePage);","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHttp } from '../../hooks/http.hook';\r\nimport { useMessage } from '../../hooks/message.hook';\r\nimport { loginAC } from '../../redux/auth-reducer';\r\nimport Spinner from '../../components/Spinner/Spinner';\r\nimport './AuthPage.scss';\r\n\r\nconst AuthPage = (props) => {\r\n    const {login} = props;\r\n    const message = useMessage();\r\n    const {error, request, clearError} = useHttp();\r\n    const [loading, setLoading] = useState(false);\r\n    const [form, setForm] = useState({\r\n        email: '',\r\n        displayName: '',\r\n        password: ''\r\n    });\r\n    const [isRegistrateForm, setIsRegistrateForm] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        message(error);\r\n        clearError();\r\n    },[error, message, clearError]);\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(sessionStorage.getItem('storageName'));\r\n        \r\n        if (data && data.token) {\r\n            login(data.token, data.user);\r\n        }\r\n    }, [login])\r\n\r\n    const changeHandler = e => {\r\n        setForm({...form, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const registerHandler = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const register = await request('/api/auth/register', 'POST', {...form}, {Authorization: `Bearer ${props.token}`});\r\n            message(register.message);\r\n            setLoading(false);\r\n            changeFormHandler();\r\n        } catch (err) {\r\n            alert(err.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const data = await request('/api/auth/login', 'POST', {...form}, {Authorization: `Bearer ${props.token}`});\r\n            \r\n            login(data.token, data.user);\r\n        } catch (err) {\r\n            alert(err.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const changeFormHandler = () => {\r\n        setIsRegistrateForm(!isRegistrateForm);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {loading ?\r\n                <Spinner />\r\n                :\r\n                <div className='split-screen'>\r\n                    <div className='left'>\r\n                        <section className='copy'>\r\n                            <h1>Kalina</h1>\r\n                            <p>Text for the beauty.</p>\r\n                        </section>\r\n                    </div>\r\n                    <div className='right'>\r\n                        <form>\r\n                            <section className='copy'>\r\n                                <h2>Sign {isRegistrateForm ? 'up' : 'in'}</h2>\r\n                                <div className='login-container'>\r\n                                    {isRegistrateForm ?\r\n                                        <p>Already have an account? <a onClick={changeFormHandler}><strong>Sign in!</strong></a></p>\r\n                                        :\r\n                                        <p>Don't have an account? <a onClick={changeFormHandler}><strong>Sign up!</strong></a></p>\r\n                                    }\r\n                                </div>\r\n                            </section>\r\n                            {isRegistrateForm && <div className='input-container name'>\r\n                                <label htmlFor='displayName'>Nickname</label>\r\n                                <input \r\n                                    name=\"displayName\"\r\n                                    id=\"displayName\" \r\n                                    type=\"text\"\r\n                                    value={form.displayName}\r\n                                    onChange={changeHandler}\r\n                                    required/>\r\n                            </div>}\r\n                            <div className='input-container email'>\r\n                                <label htmlFor='email'>Email</label>\r\n                                <input \r\n                                    name=\"email\"\r\n                                    id=\"email\" \r\n                                    type=\"email\" \r\n                                    value={form.email}\r\n                                    onChange={changeHandler}\r\n                                    required/>\r\n                            </div>\r\n                            <div className='input-container password'>\r\n                                <label htmlFor='password'>Password</label>\r\n                                <input \r\n                                    name=\"password\"\r\n                                    id=\"password\" \r\n                                    type=\"password\" \r\n                                    value={form.password}\r\n                                    onChange={changeHandler}\r\n                                    placeholder='At least 6 characters!' \r\n                                    required/>\r\n                                <i className='far fa-eye-slash' />\r\n                            </div>\r\n                            {isRegistrateForm ?\r\n                                <button className='signup-btn' type='submit' onClick={registerHandler}>Sign up</button>\r\n                                :\r\n                                <button className='signup-btn' type='submit' onClick={loginHandler}>Sign in</button>\r\n                            }\r\n                            <section className='copy legal'>\r\n                                <p>\r\n                                    <span className='small'>\r\n                                        By continuing, you agree to accept our <br/><a>Privacy Policy</a> & <a>Terms of Service</a>.\r\n                                    </span>\r\n                                </p>\r\n                            </section>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (token, user) => {\r\n            dispatch(loginAC(token, user));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthPage);","import { useCallback } from \"react\"\r\n\r\nexport const useMessage = () => {\r\n    return useCallback(text => {\r\n        if (window.M && text) {\r\n            window.M.toast({html: text});\r\n        }\r\n    }, []);\r\n}","import React, { createRef, forwardRef, useEffect, useRef } from 'react';\r\nimport './App.scss';\r\nimport {BrowserRouter as Router, HashRouter, Route} from \"react-router-dom\";\r\nimport Header from \"./components/Header/Header\";\r\nimport { connect } from 'react-redux';\r\nimport { useRoutes } from './routes';\r\n// import Spinner from './components/Spinner/spinner';\r\nimport { loginAC } from './redux/auth-reducer';\r\nimport AuthPage from './pages/AuthPage/AuthPage';\r\n\r\nconst App = (props) => {\r\n    const data = JSON.parse(sessionStorage.getItem('storageName'));\r\n    const appWrapper = useRef(null);\r\n\r\n    const isAuthenticated = !!props.token;\r\n    const routes = useRoutes();\r\n\r\n    if (data && data.token) {\r\n        props.login(data.token, data.user);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fixOffset()\r\n        \r\n        window.addEventListener('resize', fixOffset);\r\n\r\n        return () => window.removeEventListener('resize', fixOffset);\r\n    }, [isAuthenticated]);\r\n\r\n    function fixOffset() {\r\n        try{\r\n            appWrapper.current.style.height = document.body.clientHeight - (isAuthenticated ? 40 : 0) + 'px';\r\n        } catch {}    \r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            {!isAuthenticated ? \r\n                <Route path=\"/\" exact component={AuthPage} />\r\n                :\r\n                <>\r\n                    <div className='white-line'></div>\r\n                    <div className='app'>\r\n                        <Header />\r\n                        <div ref={appWrapper} className='app-wrapper'> \r\n                            {routes}\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n        </Router>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (token, user) => {\r\n            dispatch(loginAC(token, user));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport DialogsPage from './pages/DialogsPage/DialogsPage';\r\nimport ProfilePage from './pages/ProfilePage/Profile';\r\nimport UserProfile from './pages/ProfilePage/UserProfile';\r\nimport UsersPage from './pages/UsersPage/Users';\r\nimport HomePage from './pages/HomePage/HomePage';\r\n\r\nexport const useRoutes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route path='/dialogs' component={DialogsPage}/>\r\n            <Route exact path='/profile' render={ () => <ProfilePage /> }/>\r\n            <Route exact path='/profile/:userId' render={ () => <UserProfile /> }/>\r\n            <Route exact path='/users' render={ () => <UsersPage /> }/>\r\n            <Route exact path=\"/\" component={HomePage}/>\r\n        </Switch>\r\n    )\r\n}\r\n","import store from \"./redux/store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nlet vh = window.innerHeight * 0.01;\r\ndocument.documentElement.style.setProperty('--vh', `${vh}px`);\r\n\r\nwindow.addEventListener('resize', () => {\r\n  let vh = window.innerHeight * 0.01;\r\n  document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n});\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n    , document.getElementById('root'));"],"sourceRoot":""}