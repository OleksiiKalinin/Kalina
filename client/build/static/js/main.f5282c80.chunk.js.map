{"version":3,"sources":["components/Users/users.module.css","components/Profile/MyPosts/Post/Post.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/store.js","components/Header/Header.js","hooks/http.hook.js","assets/images/user.png","components/Dialogs/DialogsList/DialogItem.js","components/Dialogs/DialogsList/DialogsList.js","components/Dialogs/MessagesList/Message.js","components/Dialogs/MessagesList/MessagesList.js","assets/images/arrowback.svg","components/Dialogs/MessagesList/MessagesListContainer.js","components/Dialogs/Dialogs/Dialogs.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","components/Spinner/spinner.js","pages/AuthPage.js","hooks/message.hook.js","components/Slider/Slider.js","pages/HomePage.js","App.js","routes.js","index.js"],"names":["module","exports","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","initialState","posts","id","message","likesCount","newPostText","profile","profileReducer","state","action","type","newPost","newText","dialogs","messages","chat","isDialogSelected","setMessagesAC","setDialogsAC","setChatAC","setIsDialogSelectedAC","dialogsReducer","newMessageBody","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","map","u","userId","followed","count","filter","token","user","loginAC","jwtSecret","authReducer","sessionStorage","setItem","JSON","stringify","removeItem","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","store","createStore","connect","dispatch","logout","props","history","useHistory","className","ref","parentRef","to","onClick","e","preventDefault","push","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","res","json","data","ok","Error","clearError","pusher","Pusher","cluster","setDialogs","setMessages","setChat","setIsDialogSelected","dialogsLastMsg","setDialogsLastMsg","displayName","getLastMessage","Authorization","console","log","useEffect","channel","subscribe","bind","unbind_all","unsubscribe","selectedDialog","conversation","chatName","chatId","timestamp","src","userPhoto","alt","name","useRef","getDialogs","current","classList","remove","add","addNewChat","prompt","firstMsg","_id","Date","now","Button","SearchOutlined","placeholder","dialog","Message","userName","parseInt","toISOString","replace","MessagesList","newMessage","setNewMessage","onSendMessageClick","fixScroll","block","document","querySelector","scrollTop","scrollHeight","window","addEventListener","removeEventListener","xmlns","x1","x2","y1","y2","stroke","strokeWidth","Avatar","IconButton","AttachFile","MoreVert","InsertEmoticon","value","onChange","target","sendMessage","MessagesListContainer","ProfileInfo","photos","large","Post","s","item","MyPosts","postsElements","p","newPostElement","React","createRef","text","updateNewPostText","addPost","updateNewPostTextActionCreator","Profile","MyPostsContainer","ProfileContainer","this","match","params","Component","WithUrlDataContainerComponent","withRouter","setUserProfile","Users","pagesCount","Math","ceil","pages","i","styles","selectedPage","onPageChanged","small","disabled","some","toggleFollowingProgress","status","UsersContainer","pageNumber","setCurrentPage","toggleIsFetching","follow","unfollow","setUsers","setTotalUsersCount","Spinner","login","M","toast","html","email","password","form","setForm","isRegistrateForm","setIsRegistrateForm","parse","getItem","changeHandler","registerHandler","register","changeFormHandler","loginHandler","Slider","slidesUrls","slidesWrapper","slidesField","slider","dotWrapper","slides","dots","slideIndex","offset","toSlide","width","replaceWords","getComputedStyle","fixSlideSize","fixOffset","colorCurDot","style","length","toRight","transform","toLeft","forEach","background","temp","height","abs","element","lastNumIndexInWidth","split","reverse","join","search","round","splice","_","dotIndex","appWrapper","isAuthenticated","routes","path","component","Dialogs","exact","render","Home","AuthPage","useRoutes","clientHeight","vh","innerHeight","documentElement","setProperty","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f5282c80.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__pOnw3\",\"selectedPage\":\"users_selectedPage__CpXl2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2gkFz\"};","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    newPostText: '',\r\n    profile: null\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text })\r\n\r\nexport default profileReducer;","let initialState = {\r\n    dialogs: [],\r\n    messages: [],\r\n    chat: {},\r\n    isDialogSelected: false\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SEND_MESSAGE':\r\n            return {\r\n                ...state\r\n            }\r\n        case 'SET_MESSAGES':\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: action.messages\r\n            };\r\n        case 'SET_DIALOGS':\r\n            return {\r\n                ...state,\r\n                dialogs: action.dialogs\r\n            };\r\n        case 'SET_CHAT':\r\n            return {\r\n                ...state,\r\n                chat: action.chat\r\n            };\r\n        case 'SET_IS_DIALOG_SELECTED':\r\n            return {\r\n                ...state,\r\n                isDialogSelected: action.isDialogSelected\r\n        };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = () => ({type: 'SEND_MESSAGE'});\r\nexport const setMessagesAC = (messages) => ({type: 'SET_MESSAGES', messages});\r\nexport const setDialogsAC = (dialogs) => ({type: 'SET_DIALOGS', dialogs});\r\nexport const setChatAC = (chat) => ({type: 'SET_CHAT', chat});\r\nexport const setIsDialogSelectedAC = (isDialogSelected) => ({type: 'SET_IS_DIALOG_SELECTED', isDialogSelected});\r\n\r\nexport default dialogsReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId })\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport default usersReducer;","let initialState = {\r\n    token: null,\r\n    user: {}\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            sessionStorage.setItem('storageName', JSON.stringify({\r\n                token: action.jwtSecret,\r\n                user: action.user\r\n            }));\r\n            \r\n            return {\r\n                ...state,\r\n                token: action.jwtSecret,\r\n                user: action.user\r\n            }\r\n        case 'LOGOUT':\r\n            sessionStorage.removeItem('storageName');\r\n\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: {}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const loginAC = (jwtSecret, user) => ({type: 'LOGIN', jwtSecret, user});\r\nexport const logoutAC = () => ({type: 'LOGOUT'});\r\nexport default authReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport { logoutAC } from '../../redux/auth-reducer';\r\nimport './Header.scss';\r\n\r\nconst Header = (props) => {\r\n    const {logout} = props;\r\n    const history = useHistory();\r\n\r\n    const logoutHandler = (e) => {\r\n        e.preventDefault();\r\n        logout(); \r\n        history.push('/');\r\n    };\r\n\r\n    return (\r\n        <header className='header' ref={props.parentRef}>\r\n            <span className=\"label\"><Link to=\"/\"><big>Kalina</big></Link></span>\r\n            <div className=\"navigation\">\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/profile\">Profile</Link>\r\n                <Link to=\"/dialogs\">Dialogs</Link>\r\n                <Link to=\"/users\">Users</Link>\r\n                <Link to=\"/\" onClick={logoutHandler}>Log out</Link>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logout: () => {\r\n            dispatch(logoutAC());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const request = useCallback( async (url, method = 'GET', body = null, headers = {}) => {\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body);\r\n                headers['Content-Type'] = 'application/json';\r\n            }\r\n\r\n            const res = await fetch(`https://kalinaserver.herokuapp.com${url}`, {method, body, headers});\r\n            const data = await res.json();\r\n\r\n            if (!res.ok) {\r\n                throw new Error(data.message || 'Something goes wrong');\r\n            }\r\n\r\n            setLoading(false);\r\n\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n    \r\n    return {loading, error, request, clearError};\r\n} ","export default __webpack_public_path__ + \"static/media/user.96e310a6.png\";","import React, { useEffect, useState } from 'react';\r\nimport './DialogItem.scss';\r\nimport {Link} from \"react-router-dom\";\r\nimport { Avatar } from '@material-ui/core';\r\nimport Pusher from 'pusher-js';\r\nimport { setChatAC, setDialogsAC, setIsDialogSelectedAC, setMessagesAC } from \"../../../redux/dialogs-reducer\";\r\nimport { connect } from 'react-redux';\r\nimport { useHttp } from '../../../hooks/http.hook';\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\n\r\nconst pusher = new Pusher('b634efb073fba40fbf3a', {\r\n    cluster: 'eu'\r\n});\r\n\r\nconst DialogItem = (props) => {\r\n    // const path = \"/dialogs/\" + props.id;\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [dialogsLastMsg, setDialogsLastMsg] = useState({});\r\n    let displayName = '', message = '', timestamp = 0;\r\n\r\n    const getLastMessage = async () => {\r\n        try {\r\n            const data = await request(`/api/chats/get/lastMessage?id=${props.id}`, 'GET', null, {Authorization: `Bearer ${props.token}`});\r\n            setDialogsLastMsg(data);\r\n        } catch {console.log(1)}\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLastMessage();\r\n        \r\n        const channel = pusher.subscribe('messages');\r\n        channel.bind('newMessage', () => {\r\n            getLastMessage();   \r\n        });\r\n\r\n        return () => {\r\n            channel.unbind_all();\r\n            channel.unsubscribe();\r\n        };\r\n    }, [props.id]);\r\n\r\n    const selectedDialog = async () => {\r\n        try {\r\n            const data = await request(`/api/chats/get/conversation?id=${props.id}`, 'GET', null, {Authorization: `Bearer ${props.token}`});\r\n            props.setMessages(data['0'].conversation);\r\n            props.setChat({\r\n                chatName: data['0'].chatName,\r\n                chatId: props.id\r\n            });\r\n            props.setIsDialogSelected(true);\r\n        } catch {console.log(1)}\r\n    }\r\n\r\n    try {\r\n        displayName = dialogsLastMsg.user.displayName;\r\n        message = dialogsLastMsg.message;\r\n        timestamp = dialogsLastMsg.timestamp;\r\n    } catch {}\r\n\r\n    return (\r\n        // <Link to={path}>\r\n            <div onClick={selectedDialog} className='dialogItem'>\r\n                <div className='dialogItem__info'>\r\n                    <img className='avatar' src={userPhoto} alt=''/>\r\n                    <div>\r\n                        <div><h1>{props.name}</h1></div>\r\n                        <div><p>{`${displayName}: ${message}...`}</p></div>\r\n                    </div>\r\n                    <div className=\"timaStamp\"><small>24.03</small></div>\r\n                </div>\r\n            </div>\r\n        // </Link>  \r\n    )\r\n}\r\n\r\n\r\n// {/* <div><small>{new Date(parseInt(timestamp)).toISOString().replace(/T/g, ' ').replace(/\\..*/, '')}</small> </div> */}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setDialogs: (dialogs) => {\r\n            dispatch(setDialogsAC(dialogs));\r\n        },\r\n        setMessages: (messages) => {\r\n            dispatch(setMessagesAC(messages));\r\n        },\r\n        setChat: chat => {\r\n            dispatch(setChatAC(chat))\r\n        },\r\n        setIsDialogSelected: (a) => {\r\n            dispatch(setIsDialogSelectedAC(a))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogItem);","import React, { useEffect, useRef } from 'react';\r\n// import ChatIcon from '@material-ui/icons/Chat';\r\n// import DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport \"./DialogsList.scss\";\r\n// import { IconButton, Avatar } from '@material-ui/core';\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport DialogItem from './DialogItem';\r\nimport { Button } from '@material-ui/core';\r\nimport Pusher from 'pusher-js';\r\nimport { useHttp } from '../../../hooks/http.hook';\r\nimport { setDialogsAC } from '../../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { useState } from 'react';\r\n\r\nconst pusher = new Pusher('b634efb073fba40fbf3a', {\r\n    cluster: 'eu'\r\n});\r\n\r\nconst DialogsList = (props) => {    \r\n    const {error, request, clearError} = useHttp();\r\n    const [loading, setLoading] = useState(false);\r\n    const dialogs = useRef(null);\r\n\r\n    const getDialogs = async () => {\r\n        try {\r\n            const data = await request('/api/chats/get/conversations', 'GET', null, {\r\n                Authorization: `Bearer ${props.token}`,\r\n            });\r\n            props.setDialogs(data);\r\n        } catch {console.log(1)}\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        !props.isDialogSelected ? dialogs.current.classList.add('show') : dialogs.current.classList.remove('show');\r\n    }, [props.isDialogSelected])\r\n    \r\n    useEffect(() => {\r\n        getDialogs();\r\n        \r\n        const channel = pusher.subscribe('chats');\r\n        channel.bind('newChat', () => {\r\n            getDialogs();\r\n        });\r\n    }, []);\r\n\r\n    const addNewChat = async (e) => {\r\n        e.preventDefault();\r\n        const chatName = prompt('Enter a chat name');\r\n        const firstMsg = prompt('Send a welcome message');\r\n\r\n        if(chatName && firstMsg) {\r\n            try {\r\n                let chatId = '';\r\n\r\n                const data = await request('/api/chats/new/conversation', 'POST', {chatName}, {Authorization: `Bearer ${props.token}`});\r\n\r\n                chatId = data._id\r\n\r\n                await request(`/api/chats/new/message?id=${chatId}`, 'POST', {\r\n                    message: firstMsg,\r\n                    timestamp: Date.now(),\r\n                    user: props.user\r\n                }, {Authorization: `Bearer ${props.token}`});\r\n            } catch {console.log(1)}\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div ref={dialogs} className='dialogs'>\r\n            <div className='dialogs__header'>\r\n                <Button onClick={addNewChat}>Add a new chat</Button>\r\n            </div>\r\n            <div className='dialogs__search'>\r\n                <div className='dialogs__searchContainer'>\r\n                    <SearchOutlined/>\r\n                    <input placeholder='Search or start new chat' type='text' />\r\n                </div>\r\n            </div>\r\n            <div className='dialogs__items'>\r\n                {props.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} timestamp={dialog.timestamp}/> )} \r\n            </div>\r\n        </div>\r\n    )  \r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        isDialogSelected: state.dialogsPage.isDialogSelected,\r\n        user: state.auth.user,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setDialogs: (dialogs) => {\r\n            dispatch(setDialogsAC(dialogs));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogsList);","import React from 'react';\r\nimport './Message.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={`messages__item  ${props.message.user.displayName === props.userName && 'messages__receiver'}`}>\r\n            <span className='message__name'>{props.message.user.displayName}</span>\r\n            <div className='message'>{props.message.message}</div>\r\n            <span className='message__timestamp'>{new Date(parseInt(props.message.timestamp)).toISOString().replace(/T/g, ' ').replace(/\\..*/, '')}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, InsertEmoticon, MoreVert, SearchOutlined } from '@material-ui/icons';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './MessagesList.scss';\r\nimport Pusher from 'pusher-js';\r\nimport Message from './Message';\r\nimport { useHttp } from '../../../hooks/http.hook';\r\nimport btnBack from '../../../assets/images/arrowback.svg';\r\n\r\nconst MessagesList = (props) => {\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [newMessage, setNewMessage] = useState('');\r\n    \r\n    const onSendMessageClick = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await request(`/api/chats/new/message?id=${props.chat.chatId}`, 'POST', {\r\n                message: newMessage,\r\n                timestamp: Date.now(),\r\n                user: props.user\r\n            }, {Authorization: `Bearer ${props.token}`});\r\n        } catch {console.log(1)}\r\n        setNewMessage('');\r\n    }\r\n\r\n    const fixScroll = () => {\r\n        const block = document.querySelector('.messages__body');\r\n        block.scrollTop = block.scrollHeight;\r\n    }\r\n\r\n    const onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        setNewMessage(body);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => fixScroll());\r\n\r\n        return () =>  window.removeEventListener('resize', () => fixScroll());\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const pusher = new Pusher('b634efb073fba40fbf3a', {\r\n            cluster: 'eu'\r\n        });\r\n      \r\n        const channel = pusher.subscribe('messages');\r\n        channel.bind('newMessage', async () => {\r\n            try {\r\n                const data = await request(`/api/chats/get/conversation?id=${props.chat.chatId}`, 'GET', null, {Authorization: `Bearer ${props.token}`});\r\n                props.setMessages(data['0'].conversation);\r\n                fixScroll();\r\n            } catch {console.log(1)}\r\n        });\r\n\r\n        fixScroll();\r\n\r\n        return () => {\r\n            channel.unbind_all();\r\n            channel.unsubscribe();\r\n        };\r\n    }, [props.chat.chatId]);\r\n\r\n    const toggleChat = () => {props.setIsDialogSelected(false)}\r\n\r\n    return (\r\n        <div className='messages'>\r\n            <div className='messages__header'>\r\n                <div className='btnBack' onClick={toggleChat}><svg  xmlns=\"http://www.w3.org/2000/svg\"><line x1=\"2\" x2=\"30\" y1=\"15\" y2=\"15\" stroke=\"black\" strokeWidth=\"3\"/><line x1=\"0\" x2=\"15\" y1=\"15\" y2=\"10\" stroke=\"black\" strokeWidth=\"3\"/><line x1=\"0\" x2=\"15\" y1=\"15\" y2=\"20\" stroke=\"black\" strokeWidth=\"3\"/></svg></div>\r\n                <Avatar />\r\n                <div className='messages__headerInfo'>\r\n                    <h3>{props.chat.chatName}</h3>\r\n                    <p>Last seen at...</p>\r\n                </div>\r\n                <div className='messages__headerRight'>\r\n                    <IconButton>\r\n                        <SearchOutlined/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className='messages__body'>\r\n                { props.messages.map( message => <Message userName={props.user.displayName} message={message} key={message._id} /> ) }\r\n            </div>\r\n            <div className='messages__footer'>\r\n                <InsertEmoticon className='emoji'/>\r\n                <form>\r\n                    <input \r\n                        type='text'\r\n                        value={newMessage}\r\n                        onChange={onNewMessageChange}\r\n                        placeholder='Enter your message'/>\r\n                    <button \r\n                        type='submit'\r\n                        onClick={onSendMessageClick}>Send</button>\r\n                </form>\r\n                <MicIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessagesList;","export default __webpack_public_path__ + \"static/media/arrowback.f36fb0e7.svg\";","import {sendMessageCreator, setChatAC, setIsDialogSelectedAC, setMessagesAC} from \"../../../redux/dialogs-reducer\";\r\nimport MessagesList from \"./MessagesList\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.dialogsPage.messages,\r\n        chat: state.dialogsPage.chat,\r\n        user: state.auth.user,\r\n        token: state.auth.token\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        },\r\n        setMessages: (messages) => {\r\n            dispatch(setMessagesAC(messages));\r\n        },\r\n        setChat: chat => {\r\n            dispatch(setChatAC(chat))\r\n        },\r\n        setIsDialogSelected: (a) => {\r\n            dispatch(setIsDialogSelectedAC(a))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessagesList);\r\n","import React from 'react';\r\nimport './Dialogs.scss';\r\nimport DialogsList from '../DialogsList/DialogsList';\r\nimport MessagesListContainer from '../MessagesList/MessagesListContainer';\r\nimport { connect } from 'react-redux';\r\n \r\nconst Dialogs = (props) => {\r\n    return (\r\n        <div className='dialogs-page'>\r\n            <DialogsList />\r\n            {!props.isDialogSelected ? <div className='chooseChat'>Choose a chat</div> : <MessagesListContainer />}\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isDialogSelected: state.dialogsPage.isDialogSelected\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dialogs);","import React from 'react';\r\nimport './ProfileInfo.css';\r\n// import Preloader from \"../../common/Preloader/Preloader\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    // if (!props.profile) {\r\n    //     return <Preloader />\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <img alt='' src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'/>\r\n            </div>\r\n            <div className={'description'}>\r\n                <img alt='' src={props.profile.photos.large} />\r\n                ava + description\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img alt='' src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport './MyPosts.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements =\r\n        props.posts.map( p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    }\r\n\r\n    return (\r\n        <div className={'posts'}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea onChange={ onPostChange } ref={newPostElement}\r\n                              value={props.newPostText} />\r\n                </div>\r\n                <div>\r\n                    <button onClick={ onAddPost }>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={'posts__list'}>\r\n                { postsElements }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPosts);;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport './Profile.css';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className='profile'>\r\n            <div className='profile__inner'>\r\n                <ProfileInfo profile={props.profile} />\r\n                <MyPostsContainer />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\n// import * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {setUserProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = 2;\r\n        }\r\n        // axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId)\r\n        //     .then(response => {\r\n        //         this.props.setUserProfile(response.data);\r\n        //     });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile\r\n});\r\n\r\nlet WithUrlDataContainerComponent = withRouter(ProfileContainer);\r\n\r\nexport default connect(mapStateToProps, {setUserProfile})(WithUrlDataContainerComponent);","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n// import * as axios from \"axios\";\r\n// import {toggleFollowingProgress} from \"../../redux/users-reducer\";\r\n\r\nlet Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p && styles.selectedPage}\r\n                             onClick={(e) => {\r\n                                 props.onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + u.id}>\r\n                        <img alt='' src={u.photos.small != null ? u.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.toggleFollowingProgress(true, u.id);\r\n                                // axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {\r\n                                //     withCredentials: true,\r\n                                //     headers: {\r\n                                //         \"API-KEY\": \"b1775b2f-c3a5-4509-8dc9-90b5629de7c3\"\r\n                                //     }\r\n                                // })\r\n                                //     .then(response => {\r\n                                //         if (response.data.resultCode === 0) {\r\n                                //             props.unfollow(u.id);\r\n                                //         }\r\n                                //         props.toggleFollowingProgress(false, u.id);\r\n                                //     });\r\n\r\n\r\n\r\n                            }}>Unfollow</button>\r\n                            : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.toggleFollowingProgress(true, u.id);\r\n                                // axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {}, {\r\n                                //     withCredentials: true,\r\n                                //     headers: {\r\n                                //         \"API-KEY\": \"b1775b2f-c3a5-4509-8dc9-90b5629de7c3\"\r\n                                //     }\r\n                                // })\r\n                                //     .then(response => {\r\n                                //         if (response.data.resultCode === 0) {\r\n                                //             props.follow(u.id);\r\n                                //         }\r\n                                //         props.toggleFollowingProgress(false, u.id);\r\n                                //     });\r\n\r\n\r\n                            }}>Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setUsers,\r\n    setTotalUsersCount,\r\n    toggleIsFetching,\r\n    unfollow, toggleFollowingProgress\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n\r\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n\r\n        //         this.props.toggleIsFetching(false);\r\n        //         this.props.setUsers(data.items);\r\n        //         this.props.setTotalUsersCount(data.totalCount);\r\n        //     });\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.toggleIsFetching(true);\r\n\r\n        // usersAPI.getUsers(pageNumber, this.props.pageSize)\r\n        //     .then(data => {\r\n        //         this.props.toggleIsFetching(false);\r\n        //         this.props.setUsers(data.items);\r\n        //     });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {/* { this.props.isFetching ? <Preloader /> : null } */}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage={this.props.currentPage}\r\n                        onPageChanged={this.onPageChanged}\r\n                        users={this.props.users}\r\n                        follow={this.props.follow}\r\n                        unfollow={this.props.unfollow}\r\n                        toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                        followingInProgress={this.props.followingInProgress}\r\n             />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching, toggleFollowingProgress})(UsersContainer);","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"ldio-xb2vocd1fhk\">\r\n                <div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHttp } from '../hooks/http.hook';\r\nimport { useMessage } from '../hooks/message.hook';\r\nimport { loginAC } from '../redux/auth-reducer';\r\nimport Spinner from '../components/Spinner/spinner';\r\nimport './AuthPage.css';\r\n\r\nconst AuthPage = (props) => {\r\n    const {login} = props;\r\n    const message = useMessage();\r\n    const {error, request, clearError} = useHttp();\r\n    const [loading, setLoading] = useState(false);\r\n    const [form, setForm] = useState({\r\n        email: '',\r\n        displayName: '',\r\n        password: ''\r\n    });\r\n    const [isRegistrateForm, setIsRegistrateForm] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        message(error);\r\n        clearError();\r\n    },[error, message, clearError]);\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(sessionStorage.getItem('storageName'));\r\n        \r\n        if (data && data.token) {\r\n            login(data.token, data.user);\r\n        }\r\n    }, [login])\r\n\r\n    const changeHandler = e => {\r\n        setForm({...form, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const registerHandler = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const register = await request('/api/auth/register', 'POST', {...form}, {Authorization: `Bearer ${props.token}`});\r\n            message(register.message);\r\n            setLoading(false);\r\n            changeFormHandler();\r\n        } catch {console.log(-1)}\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const data = await request('/api/auth/login', 'POST', {...form}, {Authorization: `Bearer ${props.token}`});\r\n\r\n            login(data.token, data.user);\r\n        } catch {console.log(-1)}\r\n    }\r\n\r\n    const changeFormHandler = () => {\r\n        setIsRegistrateForm(!isRegistrateForm);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {loading ?\r\n                <Spinner />\r\n            :\r\n                <div className=\"auth-form\">\r\n                    <div className=\"auth-form__inner\">\r\n                        <h1>Sign {isRegistrateForm ? \"Up\" : \"In\"} With</h1>\r\n                        <div className='auth-form__main'>\r\n                            <div className='auth-form__fields'>\r\n                                <div className=\"auth-form__email\">\r\n                                    <input\r\n                                        name=\"email\"\r\n                                        id=\"email\" \r\n                                        type=\"email\" \r\n                                        className=\"validate\"\r\n                                        value={form.email}\r\n                                        onChange={changeHandler}\r\n                                        placeholder='Email'\r\n                                    />\r\n                                </div>\r\n                                {isRegistrateForm && <div className=\"auth-form__name\">\r\n                                    <input\r\n                                        name=\"displayName\"\r\n                                        id=\"displayName\" \r\n                                        type=\"text\" \r\n                                        className=\"validate\"\r\n                                        value={form.displayName}\r\n                                        onChange={changeHandler}\r\n                                        placeholder='Name'\r\n                                    />\r\n                                </div> }\r\n                                <div className=\"auth-form__password\">\r\n                                    <input \r\n                                        name=\"password\"\r\n                                        id=\"password\" \r\n                                        type=\"password\" \r\n                                        className=\"validate\"\r\n                                        value={form.password}\r\n                                        onChange={changeHandler}\r\n                                        placeholder='Password'\r\n                                    />\r\n                                </div>\r\n                            </div>  \r\n                            <div className='auth-form__btn'>\r\n                                {!isRegistrateForm ?\r\n                                    <button\r\n                                        onClick={loginHandler}\r\n                                        >\r\n                                            Sign in\r\n                                    </button>\r\n                                    :\r\n                                    <button \r\n                                        onClick={registerHandler}>\r\n                                            Sign up\r\n                                    </button>\r\n                                }\r\n                                {!isRegistrateForm ?\r\n                                    <div>\r\n                                        <p>or</p>\r\n                                        <p>Not a member? <a onClick={changeFormHandler}>Sign up</a> now!</p>\r\n                                    </div>\r\n                                    :\r\n                                    <a onClick={changeFormHandler}>&larr;Back</a>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (token, user) => {\r\n            dispatch(loginAC(token, user));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthPage);","import { useCallback } from \"react\"\r\n\r\nexport const useMessage = () => {\r\n    return useCallback(text => {\r\n        if (window.M && text) {\r\n            window.M.toast({html: text});\r\n        }\r\n    }, []);\r\n}","import React, { createRef, useEffect, useRef } from 'react';\r\nimport './Slider.scss';\r\n\r\nconst Slider = () => {\r\n    const slidesUrls = [\r\n            {url: 'https://www.sunchemical.com/wp-content/uploads/2019/07/SunWave_banner-1200x400.jpg'},\r\n            {url: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTPuUErrrIAbhJWNbw-taT2n5SqTHHPAdjPS6Nd8eGJhsYOmZ1sEHICT8QkN5EbEL0XWVo&usqp=CAU'},\r\n            {url: 'https://www.mapix.com/wp-content/uploads/2018/04/1200x400.png'},\r\n            {url: 'https://sinctech.com/wp-content/uploads/2017/07/placeholder-1200x400.png'}\r\n        ], //slider_item\r\n        slidesWrapper = useRef(null), //slider_container\r\n        slidesField = useRef(null), //slider_track\r\n        slider = useRef(null), //slider_track\r\n        dotWrapper = useRef(null), //slider-dot-wrapper\r\n        slides = useRef(slidesUrls.map(() => createRef())),\r\n        dots = useRef(slidesUrls.map(() => createRef()));\r\n\r\n    let slideIndex = 1, offset = 0, toSlide = 1,\r\n        width = '';\r\n\r\n    useEffect(() => {\r\n        width = replaceWords(window.getComputedStyle(slidesWrapper.current).width);\r\n        fixSlideSize();\r\n        fixOffset();\r\n        \r\n        window.addEventListener('resize', fixOffset);\r\n\r\n        colorCurDot();\r\n    \r\n        slidesField.current.style.width = 100 * slidesUrls.length + '%';\r\n\r\n        return () => window.removeEventListener('resize', fixOffset);\r\n    }, []);\r\n\r\n    const nextBtnClicked = () => {\r\n        toRight();\r\n        if (slideIndex < slidesUrls.length) {\r\n            slideIndex++;\r\n        } else {\r\n            slideIndex = 1;\r\n        }\r\n        colorCurDot();\r\n    };\r\n\r\n    const prevBtnClicked = () => {\r\n        toLeft();\r\n        if (slideIndex > 1) {\r\n            slideIndex--;\r\n        } else {\r\n            slideIndex = slidesUrls.length;\r\n        }\r\n        colorCurDot();\r\n    };\r\n\r\n    function toRight() {\r\n        if (offset == width * (slidesUrls.length - 1)) {\r\n            offset = 0;\r\n        } else {\r\n            offset += width * toSlide;\r\n        }\r\n        slidesField.current.style.transform = `translateX(-${offset}px)`;\r\n    }\r\n\r\n    function toLeft() {\r\n        if (offset === 0) {\r\n            offset = width * (slidesUrls.length - 1) * toSlide;\r\n        } else {\r\n            offset -= width * toSlide;\r\n        }\r\n        slidesField.current.style.transform = `translateX(-${offset}px)`;\r\n    }\r\n\r\n    function goToSlideByDot(dotIndex) {\r\n        toSlide = Math.abs(dotIndex - slideIndex);\r\n        if (dotIndex < slideIndex) {\r\n            slideIndex = dotIndex;\r\n            toLeft();\r\n        } else if (dotIndex > slideIndex) {\r\n            slideIndex = dotIndex;\r\n            toRight();\r\n        }\r\n        toSlide = 1;\r\n        colorCurDot();\r\n    }\r\n\r\n    function colorCurDot() {\r\n        dots.current.forEach(({current}) => {\r\n            current.style.background = \"none\";\r\n        });\r\n        dots.current[slideIndex - 1].current.style.background = \"#fdc84b\";\r\n    }\r\n\r\n    function fixSlideSize() {\r\n        slides.current.forEach(({current}) => {\r\n            current.style.width = `${width}px`;\r\n        });\r\n    }\r\n\r\n    function fixSliderHeight() {\r\n        slider.current.style.height = `${width/3}px`;\r\n    }\r\n\r\n    function fixOffset() {\r\n        let temp = width;\r\n        width = replaceWords(window.getComputedStyle(slidesWrapper.current).width);\r\n        fixSlideSize();\r\n        fixSliderHeight();\r\n        if (width > temp) {\r\n            offset += (slideIndex - 1) * Math.abs(width - temp);\r\n        } else if (width < temp) {\r\n            offset -= (slideIndex - 1) * Math.abs(width - temp);\r\n        }\r\n        slidesField.current.style.transform = `translateX(-${offset}px)`;\r\n    }\r\n\r\n    function replaceWords(element) {\r\n        let lastNumIndexInWidth = element.length - element.split('').reverse().join('').search(/\\d/);\r\n        return Math.round(+element.split('').splice(0, lastNumIndexInWidth).join(''));\r\n    }\r\n\r\n    return (\r\n        <div className=\"slider\" ref={slider}>\r\n            <div className=\"container\" ref={slidesWrapper}>\r\n                <div className=\"track\" ref={slidesField}>\r\n                    {\r\n                        slidesUrls.map(({url}, i) => <div key={i} ref={slides.current[i]} className=\"item\"><img src={url} alt=\"\"/></div>)\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"btn_prev\" onClick={prevBtnClicked}></div>\r\n            <div className=\"btn_next\" onClick={nextBtnClicked}></div>\r\n            <div className=\"dot-wrapper\" ref={dotWrapper}>\r\n                {\r\n                    slidesUrls.map((_, i) => <div className='slider-dot' ref={dots.current[i]} key={i} onClick={() => goToSlideByDot(i+1)}></div>)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Slider;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Slider from '../components/Slider/Slider';\r\nimport './HomePage.scss';\r\n\r\nconst HomePage = (props) => {\r\n    return (\r\n        <div className='home-page'>\r\n            <div className='element'>\r\n                <Slider/>\r\n            </div>\r\n            <div className='element'>\r\n                <Slider/>\r\n            </div>\r\n            <div className='element'>\r\n                <Slider/>\r\n            </div>\r\n            <div className='element'>\r\n                <Slider/>\r\n            </div>\r\n            <div className='element'>\r\n                <div>There will be posts your followings</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token\r\n});\r\n\r\nexport default connect(mapStateToProps)(HomePage);","import React, { createRef, forwardRef, useEffect, useRef } from 'react';\r\nimport './App.scss';\r\nimport {BrowserRouter as Router, HashRouter} from \"react-router-dom\";\r\nimport Header from \"./components/Header/Header\";\r\nimport { connect } from 'react-redux';\r\nimport { useRoutes } from './routes';\r\n// import Spinner from './components/Spinner/spinner';\r\nimport { loginAC } from './redux/auth-reducer';\r\n\r\nconst App = (props) => {\r\n    const data = JSON.parse(sessionStorage.getItem('storageName'));\r\n    const appWrapper = useRef(null);\r\n\r\n    if (data && data.token) {\r\n        props.login(data.token, data.user);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fixOffset()\r\n        \r\n        window.addEventListener('resize', fixOffset);\r\n\r\n        return () => window.removeEventListener('resize', fixOffset);\r\n    }, []);\r\n\r\n    const isAuthenticated = !!props.token;\r\n    const routes = useRoutes(isAuthenticated);\r\n\r\n    function fixOffset() {\r\n        appWrapper.current.style.height = document.body.clientHeight - 40 + 'px';\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div className='white-line'></div>\r\n            <div className='app'>\r\n                {isAuthenticated && <Header />}\r\n                <div ref={appWrapper} className='app-wrapper'> \r\n                    {routes}\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token\r\n});\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (token, user) => {\r\n            dispatch(loginAC(token, user));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport Dialogs from './components/Dialogs/Dialogs/Dialogs';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport AuthPage from './pages/AuthPage';\r\nimport Home from './pages/HomePage';\r\n\r\nexport const useRoutes = (isAuthenticated) => {\r\n    if (isAuthenticated) {\r\n        return (\r\n            <Switch>\r\n                <Route  path='/dialogs' component={Dialogs}/>\r\n                {/* <Route exact path='/profile' render={ () => <ProfileContainer /> }/> */}\r\n                <Route exact path='/users' render={ () => <UsersContainer /> }/>\r\n                <Route exact path=\"/\" component={Home}/>\r\n            </Switch>\r\n        )\r\n    }\r\n\r\n    return <Route path=\"/\" exact component={AuthPage} />\r\n}","import store from \"./redux/store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nlet vh = window.innerHeight * 0.01;\r\ndocument.documentElement.style.setProperty('--vh', `${vh}px`);\r\n\r\nwindow.addEventListener('resize', () => {\r\n  let vh = window.innerHeight * 0.01;\r\n  document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n});\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n    , document.getElementById('root'));"],"sourceRoot":""}