{"version":3,"sources":["pages/UsersPage/users.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/sidebar-reducer.js","redux/users-reducer.js","redux/auth-reducer.js","redux/store.js","components/Header/Header.js","hooks/http.hook.js","assets/images/user.png","pages/DialogsPage/Dialogs/DialogItem.js","pages/DialogsPage/Dialogs/Dialogs.js","pages/DialogsPage/Messages/MessageItem.js","pages/DialogsPage/Messages/Messages.js","assets/images/arrowback.svg","pages/DialogsPage/Messages/MessagesContainer.js","pages/DialogsPage/DialogsPage.js","pages/ProfilePage/Profile.js","pages/UsersPage/Users.jsx","pages/UsersPage/UsersContainer.jsx","components/Spinner/spinner.js","pages/AuthPage/AuthPage.js","hooks/message.hook.js","components/Slider/Slider.js","pages/HomePage/PostItem.js","pages/HomePage/HomePage.js","App.js","routes.js","index.js"],"names":["module","exports","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","initialState","posts","id","message","likesCount","newPostText","profile","profileReducer","state","action","type","newPost","newText","dialogs","messages","chat","isDialogSelected","setMessagesAC","setDialogsAC","setChatAC","setIsDialogSelectedAC","dialogsReducer","newMessageBody","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","map","u","userId","followed","count","filter","token","user","loginAC","jwtSecret","authReducer","sessionStorage","setItem","JSON","stringify","removeItem","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","store","createStore","connect","dispatch","logout","props","history","useHistory","className","to","onClick","e","preventDefault","push","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","res","json","data","ok","Error","clearError","pusher","Pusher","cluster","setDialogs","setMessages","setChat","setIsDialogSelected","dialogsLastMsg","setDialogsLastMsg","displayName","getLastMessage","Authorization","console","log","useEffect","channel","subscribe","bind","unbind_all","unsubscribe","selectedDialog","conversation","chatName","chatId","timestamp","src","userPhoto","alt","name","useRef","dialogsHeader","dialogsItems","getDialogs","current","classList","remove","add","addNewChat","prompt","firstMsg","_id","Date","now","ref","placeholder","dialog","Message","userName","parseInt","toISOString","replace","MessagesList","newMessage","setNewMessage","onSendMessageClick","fixScroll","block","document","querySelector","scrollTop","scrollHeight","window","addEventListener","removeEventListener","xmlns","x1","x2","y1","y2","stroke","strokeWidth","Avatar","IconButton","SearchOutlined","AttachFile","MoreVert","InsertEmoticon","value","onChange","target","sendMessage","isCreatePostOpen","setIsCreatePostOpen","title","setTitle","setBody","image","setImage","myPosts","setMyPosts","postDetails","formData","FormData","append","then","picture","catch","err","files","post","Users","pagesCount","Math","ceil","pages","i","p","styles","selectedPage","onPageChanged","photos","small","disabled","some","toggleFollowingProgress","status","UsersContainer","pageNumber","setCurrentPage","toggleIsFetching","this","follow","unfollow","React","Component","setUsers","setTotalUsersCount","Spinner","login","text","M","toast","html","email","password","form","setForm","isRegistrateForm","setIsRegistrateForm","parse","getItem","changeHandler","registerHandler","register","changeFormHandler","alert","loginHandler","htmlFor","required","Slider","imgWidth","imgHeight","slidesUrls","slidesWrapper","slidesField","slider","dotWrapper","slides","createRef","dots","slideIndex","offset","toSlide","width","replaceWords","getComputedStyle","fixSlideSize","fixOffset","colorCurDot","style","length","toRight","transform","toLeft","forEach","background","temp","height","abs","element","lastNumIndexInWidth","split","reverse","join","search","round","splice","_","dotIndex","PostItem","owner","allPosts","setAllPosts","appWrapper","isAuthenticated","routes","path","component","DialogsPage","exact","render","HomePage","clientHeight","AuthPage","vh","innerHeight","documentElement","setProperty","ReactDOM","getElementById"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,aAAe,8B,0VCDhEC,EAAW,WACXC,EAAuB,uBACvBC,EAAmB,mBAErBC,EAAe,CACfC,MAAO,CACH,CAACC,GAAI,EAAGC,QAAS,mBAAoBC,WAAY,IACjD,CAACF,GAAI,EAAGC,QAAS,qBAAuBC,WAAY,IACpD,CAACF,GAAI,EAAGC,QAAS,SAAUC,WAAY,IACvC,CAACF,GAAI,EAAGC,QAAS,OAAQC,WAAY,KAEzCC,YAAa,GACbC,QAAS,MAsCEC,EAnCQ,WAAmC,IAAlCC,EAAiC,uDAAzBR,EAAcS,EAAW,uCAErD,OAAOA,EAAOC,MACV,KAAKb,EACD,IAAIc,EAAU,CACVT,GAAI,EACJC,QAASK,EAAMH,YACfD,WAAY,GAEhB,OAAO,2BACAI,GADP,IAEIP,MAAM,GAAD,mBAAMO,EAAMP,OAAZ,CAAmBU,IACxBN,YAAa,KAGrB,KAAKP,EACD,OAAO,2BACAU,GADP,IAEIH,YAAaI,EAAOG,UAG5B,KAAKb,EACD,OAAO,2BAAIS,GAAX,IAAkBF,QAASG,EAAOH,UAEtC,QACI,OAAOE,ICxCfR,EAAe,CACfa,QAAS,GACTC,SAAU,GACVC,KAAM,GACNC,kBAAkB,GAoCTC,EAAgB,SAACH,GAAD,MAAe,CAACJ,KAAM,eAAgBI,aACtDI,EAAe,SAACL,GAAD,MAAc,CAACH,KAAM,cAAeG,YACnDM,EAAY,SAACJ,GAAD,MAAW,CAACL,KAAM,WAAYK,SAC1CK,EAAwB,SAACJ,GAAD,MAAuB,CAACN,KAAM,yBAA0BM,qBAE9EK,EAtCQ,WAAmC,IAAlCb,EAAiC,uDAAzBR,EAAcS,EAAW,uCACrD,OAAQA,EAAOC,MACX,IAAK,eACD,OAAO,eACAF,GAEX,IAAK,eACD,OAAO,2BACAA,GADP,IAEIc,eAAgB,GAChBR,SAAUL,EAAOK,WAEzB,IAAK,cACD,OAAO,2BACAN,GADP,IAEIK,QAASJ,EAAOI,UAExB,IAAK,WACD,OAAO,2BACAL,GADP,IAEIO,KAAMN,EAAOM,OAErB,IAAK,yBACD,OAAO,2BACAP,GADP,IAEIQ,iBAAkBP,EAAOO,mBAEjC,QACI,OAAOR,ICnCfR,EAAe,GAMJuB,EAJQ,WAAmC,IAAlCf,EAAiC,uDAAzBR,EAC5B,OAAOQ,GCHLgB,EAAS,SACTC,EAAW,WACXC,EAAY,YACZC,EAAmB,mBACnBC,EAAwB,wBACxBC,EAAqB,qBACrBC,EAA+B,+BAEjC9B,EAAe,CACf+B,MAAO,GACPC,SAAU,EACVC,gBAAiB,EACjBC,YAAa,EACbC,YAAY,EACZC,oBAAqB,IA2DVC,EAxDM,WAAmC,IAAlC7B,EAAiC,uDAAzBR,EAAcS,EAAW,uCACnD,OAAOA,EAAOC,MACV,KAAKc,EACD,OAAO,2BACAhB,GADP,IAEIuB,MAAOvB,EAAMuB,MAAMO,KAAK,SAAAC,GACpB,OAAIA,EAAErC,KAAOO,EAAO+B,OACT,2BAAID,GAAX,IAAcE,UAAU,IAErBF,OAGnB,KAAKd,EACD,OAAO,2BACAjB,GADP,IAEIuB,MAAOvB,EAAMuB,MAAMO,KAAK,SAAAC,GACpB,OAAIA,EAAErC,KAAOO,EAAO+B,OACT,2BAAID,GAAX,IAAcE,UAAU,IAErBF,OAGnB,KAAKb,EACD,OAAO,2BAAKlB,GAAZ,IAAmBuB,MAAOtB,EAAOsB,QAErC,KAAKJ,EACD,OAAO,2BAAKnB,GAAZ,IAAmB0B,YAAazB,EAAOyB,cAE3C,KAAKN,EACD,OAAO,2BAAKpB,GAAZ,IAAmByB,gBAAiBxB,EAAOiC,QAE/C,KAAKb,EACD,OAAO,2BAAKrB,GAAZ,IAAmB2B,WAAY1B,EAAO0B,aAE1C,KAAKL,EACD,OAAO,2BACAtB,GADP,IAEI4B,oBAAqB3B,EAAO0B,WAAP,sBACX3B,EAAM4B,qBADK,CACgB3B,EAAO+B,SACtChC,EAAM4B,oBAAoBO,QAAO,SAAAzC,GAAE,OAAIA,IAAOO,EAAO+B,YAGnE,QACI,OAAOhC,IC5DfR,EAAe,CACf4C,MAAO,KACPC,KAAM,IA6BGC,EAAU,SAACC,EAAWF,GAAZ,MAAsB,CAACnC,KAAM,QAASqC,YAAWF,SAEzDG,EA5BK,WAAmC,IAAlCxC,EAAiC,uDAAzBR,EAAcS,EAAW,uCAClD,OAAQA,EAAOC,MACX,IAAK,QAMD,OALAuC,eAAeC,QAAQ,cAAeC,KAAKC,UAAU,CACjDR,MAAOnC,EAAOsC,UACdF,KAAMpC,EAAOoC,QAGV,2BACArC,GADP,IAEIoC,MAAOnC,EAAOsC,UACdF,KAAMpC,EAAOoC,OAErB,IAAK,SAGD,OAFAI,eAAeI,WAAW,eAEnB,2BACA7C,GADP,IAEIoC,MAAO,KACPC,KAAM,KAEd,QACI,OAAOrC,ICpBb8C,EAAWC,YAAgB,CAC7BC,YAAajD,EACbkD,YAAapC,EACbqC,QAASnC,EACToC,UAAWtB,EACXuB,KAAMZ,IAKKa,EAFDC,YAAYR,G,qEC6BXS,G,MAAAA,aAdO,SAACvD,GACnB,MAAO,CACHoC,MAAOpC,EAAMoD,KAAKhB,UAID,SAACoB,GACtB,MAAO,CACHC,OAAQ,WACJD,EFPmB,CAACtD,KAAM,eEYvBqD,EAtCA,SAACG,GAAW,IAChBD,EAAUC,EAAVD,OACDE,EAAUC,cAQhB,OACI,yBAAQC,UAAU,SAAlB,UACI,sBAAMA,UAAU,QAAhB,SAAwB,cAAC,IAAD,CAAMC,GAAG,IAAT,SAAa,6CACrC,sBAAKD,UAAU,aAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,qBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,qBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,mBACA,cAAC,IAAD,CAAMA,GAAG,IAAIC,QAdH,SAACC,GACnBA,EAAEC,iBACFR,IACAE,EAAQO,KAAK,MAWL,+B,sECtBHC,EAAU,WAAO,IAAD,EACKC,oBAAS,GADd,mBAClBC,EADkB,KACTC,EADS,OAECF,mBAAS,MAFV,mBAElBG,EAFkB,KAEXC,EAFW,KA8BzB,MAAO,CAACH,UAASE,QAAOE,QA3BRC,sBAAW,uCAAE,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,GAAnD,SAEjBD,IACAA,EAAOnC,KAAKC,UAAUkC,GACtBC,EAAQ,gBAAkB,oBAJT,SAQHC,MAAM,qCAAD,OAAsCL,GAAO,CAACE,SAAQC,OAAMC,YAR9D,cAQfE,EARe,iBASFA,EAAIC,OATF,WASfC,EATe,OAWhBF,EAAIG,GAXY,uBAYX,IAAIC,MAAMF,EAAKxF,SAAW,wBAZf,eAerB2E,GAAW,GAfU,kBAiBda,GAjBc,wCAmBrBb,GAAW,GACXE,EAAS,KAAE7E,SApBU,+DAAF,sDAuBxB,IAI8B2F,WAFdZ,uBAAY,kBAAMF,EAAS,QAAO,MC9B1C,MAA0B,iCCUnCe,EAAS,IAAIC,IAAO,uBAAwB,CAC9CC,QAAS,OA2FElC,eAxBO,SAACvD,GACnB,MAAO,CACHK,QAASL,EAAMiD,YAAY5C,QAC3B+B,MAAOpC,EAAMoD,KAAKhB,UAID,SAACoB,GACtB,MAAO,CACHkC,WAAY,SAACrF,GACTmD,EAAS9C,EAAaL,KAE1BsF,YAAa,SAACrF,GACVkD,EAAS/C,EAAcH,KAE3BsF,QAAS,SAAArF,GACLiD,EAAS7C,EAAUJ,KAEvBsF,oBAAqB,SAACjB,GAClBpB,EAAS5C,EAAsBgE,QAK5BrB,EAxFI,SAACG,GAAU,MAEoBS,IAAvBM,GAFG,EAEnBJ,QAFmB,EAEVE,MAFU,EAEHE,SAFG,KAEMa,WACYlB,mBAAS,KAH3B,mBAGnB0B,EAHmB,KAGHC,EAHG,KAItBC,EAAc,GAAIrG,EAAU,GAE1BsG,EAAc,uCAAG,4BAAArB,EAAA,+EAEIH,EAAQ,iCAAD,OAAkCf,EAAMhE,IAAM,MAAO,KAAM,CAACwG,cAAc,UAAD,OAAYxC,EAAMtB,SAFtG,OAET+C,EAFS,OAGfY,EAAkBZ,GAHH,gDAIVgB,QAAQC,IAAI,GAJF,yDAAH,qDAOpBC,qBAAU,WACNJ,IAEA,IAAMK,EAAUf,EAAOgB,UAAU,YAKjC,OAJAD,EAAQE,KAAK,cAAc,WACvBP,OAGG,WACHK,EAAQG,aACRH,EAAQI,iBAEb,CAAChD,EAAMhE,KAEV,IAAMiH,EAAc,uCAAG,4BAAA/B,EAAA,+EAEIH,EAAQ,kCAAD,OAAmCf,EAAMhE,IAAM,MAAO,KAAM,CAACwG,cAAc,UAAD,OAAYxC,EAAMtB,SAFvG,OAET+C,EAFS,OAGfzB,EAAMiC,YAAYR,EAAK,GAAKyB,cAC5BlD,EAAMkC,QAAQ,CACViB,SAAU1B,EAAK,GAAK0B,SACpBC,OAAQpD,EAAMhE,KAElBgE,EAAMmC,qBAAoB,GARX,gDASVM,QAAQC,IAAI,GATF,yDAAH,qDAYpB,IACIJ,EAAcF,EAAezD,KAAK2D,YAClCrG,EAAUmG,EAAenG,QACbmG,EAAeiB,UAC7B,UAEF,OAEQ,aADJ,CACI,OAAKhD,QAAS4C,EAAgB9C,UAAU,aAAxC,SACI,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,0BAAf,SAAyC,qBAAKmD,IAAKC,EAAWC,IAAI,OAClE,sBAAKrD,UAAU,wBAAf,UACI,8BAAK,6BAAKH,EAAMyD,SAChB,uBAAMtD,UAAU,2BAAhB,UAA4CmC,EAA5C,KAA2DrG,QAE/D,qBAAKkE,UAAU,YAAf,SAA2B,oDCrDzC0B,EAAS,IAAIC,IAAO,uBAAwB,CAC9CC,QAAS,OA2FElC,eAjBO,SAACvD,GACnB,MAAO,CACHK,QAASL,EAAMiD,YAAY5C,QAC3BG,iBAAkBR,EAAMiD,YAAYzC,iBACpC6B,KAAMrC,EAAMoD,KAAKf,KACjBD,MAAOpC,EAAMoD,KAAKhB,UAID,SAACoB,GACtB,MAAO,CACHkC,WAAY,SAACrF,GACTmD,EAAS9C,EAAaL,QAKnBkD,EAxFK,SAACG,GAAW,IAAD,EACUS,IAAvBM,GADa,EACpBF,MADoB,EACbE,SADa,KACJa,WACOlB,oBAAS,IAFZ,mBAGrB/D,GAHqB,UAGX+G,iBAAO,OACjBC,EAAgBD,iBAAO,MACvBE,EAAeF,iBAAO,MAEtBG,EAAU,uCAAG,4BAAA3C,EAAA,+EAEQH,EAAQ,+BAAgC,MAAO,KAAM,CACpEyB,cAAc,UAAD,OAAYxC,EAAMtB,SAHxB,OAEL+C,EAFK,OAKXzB,EAAMgC,WAAWP,GALN,gDAMDgB,QAAQC,IAAR,MANC,yDAAH,qDAUhBC,qBAAU,WACL3C,EAAMlD,iBAA2DH,EAAQmH,QAAQC,UAAUC,OAAO,QAAzErH,EAAQmH,QAAQC,UAAUE,IAAI,UACzD,CAACjE,EAAMlD,mBAEV6F,qBAAU,WACNkB,IAEgBhC,EAAOgB,UAAU,SACzBC,KAAK,WAAW,WACpBe,SAEL,IAEH,IAAMK,EAAU,uCAAG,WAAO5D,GAAP,qBAAAY,EAAA,yDACfZ,EAAEC,iBACI4C,EAAWgB,OAAO,qBAClBC,EAAWD,OAAO,2BAErBhB,IAAYiB,EALA,iCAOHhB,EAAS,GAPN,SASYrC,EAAQ,8BAA+B,OAAQ,CAACoC,YAAW,CAACX,cAAc,UAAD,OAAYxC,EAAMtB,SATvG,cASD+C,EATC,OAWP2B,EAAS3B,EAAK4C,IAXP,UAaDtD,EAAQ,6BAAD,OAA8BqC,GAAU,OAAQ,CACzDnH,QAASmI,EACTf,UAAWiB,KAAKC,MAChB5F,KAAMqB,EAAMrB,MACb,CAAC6D,cAAc,UAAD,OAAYxC,EAAMtB,SAjB5B,0DAkBF+D,QAAQC,IAAI,GAlBV,0DAAH,sDAsBhB,OACI,sBAAK8B,IAAK7H,EAASwD,UAAU,UAA7B,UACI,sBAAKqE,IAAKb,EAAexD,UAAU,kBAAnC,UACI,uBAAOsE,YAAY,2BAA2BjI,KAAK,SACnD,wBAAQ6D,QAAS6D,EAAjB,kBAQJ,qBAAKM,IAAKZ,EAAczD,UAAU,iBAAlC,SACKH,EAAMrD,QAAQyB,KAAI,SAAAsG,GAAM,OAAI,cAAC,EAAD,CAAYjB,KAAMiB,EAAOjB,KAAsBzH,GAAI0I,EAAO1I,GAAIqH,UAAWqB,EAAOrB,WAA5CqB,EAAO1I,e,gFCvEzE2I,I,YAVC,SAAC3E,GACb,OACI,sBAAKG,UAAS,0BAAqBH,EAAM/D,QAAQ0C,KAAK2D,cAAgBtC,EAAM4E,UAAY,sBAAxF,UACI,sBAAMzE,UAAU,gBAAhB,SAAiCH,EAAM/D,QAAQ0C,KAAK2D,cACpD,qBAAKnC,UAAU,UAAf,SAA0BH,EAAM/D,QAAQA,UACxC,sBAAMkE,UAAU,qBAAhB,SAAsC,IAAImE,KAAKO,SAAS7E,EAAM/D,QAAQoH,YAAYyB,cAAcC,QAAQ,KAAM,KAAKA,QAAQ,OAAQ,WCqGhIC,IC7GA,IDUM,SAAChF,GAAW,IAAD,EACkBS,IAAvBM,GADK,EACrBJ,QADqB,EACZE,MADY,EACLE,SADK,KACIa,WACIlB,mBAAS,KAFjB,mBAErBuE,EAFqB,KAETC,EAFS,KAItBC,EAAkB,uCAAG,WAAO7E,GAAP,SAAAY,EAAA,6DACvBZ,EAAEC,iBADqB,kBAGbQ,EAAQ,6BAAD,OAA8Bf,EAAMnD,KAAKuG,QAAU,OAAQ,CACpEnH,QAASgJ,EACT5B,UAAWiB,KAAKC,MAChB5F,KAAMqB,EAAMrB,MACb,CAAC6D,cAAc,UAAD,OAAYxC,EAAMtB,SAPhB,sDAQd+D,QAAQC,IAAI,GARE,OASvBwC,EAAc,IATS,yDAAH,sDAYlBE,EAAY,WACd,IACI,IAAMC,EAAQC,SAASC,cAAc,mBACrCF,EAAMG,UAAYH,EAAMI,aAC1B,YAQN9C,qBAAU,WAGN,OAFA+C,OAAOC,iBAAiB,UAAU,kBAAMP,OAEjC,kBAAMM,OAAOE,oBAAoB,UAAU,kBAAMR,UACzD,IAEHzC,qBAAU,WACN,IAIMC,EAJS,IAAId,IAAO,uBAAwB,CAC9CC,QAAS,OAGUc,UAAU,YAWjC,OAVAD,EAAQE,KAAK,aAAb,sBAA2B,4BAAA5B,EAAA,+EAEAH,EAAQ,kCAAD,OAAmCf,EAAMnD,KAAKuG,QAAU,MAAO,KAAM,CAACZ,cAAc,UAAD,OAAYxC,EAAMtB,SAF5G,OAEb+C,EAFa,OAGnBzB,EAAMiC,YAAYR,EAAK,GAAKyB,cAC5BkC,IAJmB,0GAQ3BA,IAEO,WACHxC,EAAQG,aACRH,EAAQI,iBAEb,CAAChD,EAAMnD,KAAKuG,SAIf,OACI,sBAAKjD,UAAU,WAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,UAAUE,QALlB,WAAOL,EAAMmC,qBAAoB,IAKxC,SAA8C,sBAAM0D,MAAM,6BAAZ,UAAyC,sBAAMC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,OAAO,QAAQC,YAAY,MAAK,sBAAML,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,OAAO,QAAQC,YAAY,MAAK,sBAAML,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,OAAO,QAAQC,YAAY,WACjS,cAACC,GAAA,EAAD,IACA,qBAAKjG,UAAU,uBAAf,SACI,6BAAKH,EAAMnD,KAAKsG,aAEpB,sBAAKhD,UAAU,wBAAf,UACI,cAACkG,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,MAEJ,cAACD,GAAA,EAAD,UACI,cAACE,GAAA,EAAD,MAEJ,cAACF,GAAA,EAAD,UACI,cAACG,GAAA,EAAD,YAIZ,qBAAKrG,UAAU,iBAAf,SACMH,EAAMpD,SAASwB,KAAK,SAAAnC,GAAO,OAAI,cAAC,GAAD,CAAa2I,SAAU5E,EAAMrB,KAAK2D,YAAarG,QAASA,GAAcA,EAAQoI,UAEnH,sBAAKlE,UAAU,mBAAf,UACI,cAACsG,GAAA,EAAD,CAAgBtG,UAAU,UAC1B,iCACI,uBACI3D,KAAK,OACLkK,MAAOzB,EACP0B,SAhEO,SAACrG,GACxB,IAAIc,EAAOd,EAAEsG,OAAOF,MACpBxB,EAAc9D,IA+DEqD,YAAY,uBAChB,wBACIjI,KAAK,SACL6D,QAAS8E,EAFb,qBAIJ,cAAC,KAAD,YE1EDtF,gBAzBO,SAACvD,GACnB,MAAO,CACHM,SAAUN,EAAMiD,YAAY3C,SAC5BC,KAAMP,EAAMiD,YAAY1C,KACxB8B,KAAMrC,EAAMoD,KAAKf,KACjBD,MAAOpC,EAAMoD,KAAKhB,UAGD,SAACoB,GACtB,MAAO,CACH+G,YAAa,WACT/G,EbwB6B,CAACtD,KAAM,kBatBxCyF,YAAa,SAACrF,GACVkD,EAAS/C,EAAcH,KAE3BsF,QAAS,SAAArF,GACLiD,EAAS7C,EAAUJ,KAEvBsF,oBAAqB,SAACjB,GAClBpB,EAAS5C,EAAsBgE,QAK5BrB,CAA6CmF,ICR7CnF,gBANO,SAACvD,GACnB,MAAO,CACHQ,iBAAkBR,EAAMiD,YAAYzC,oBAI7B+C,EAfC,SAACG,GACb,OACI,sBAAKG,UAAU,eAAf,UACI,cAAC,EAAD,IACEH,EAAMlD,iBAAqE,cAAC,GAAD,IAAlD,qBAAKqD,UAAU,aAAf,iCCmFxBN,I,MAAAA,aAfO,SAACvD,GACnB,MAAO,CACHoC,MAAOpC,EAAMoD,KAAKhB,MAClBC,KAAMrC,EAAMoD,KAAKf,QAYVkB,EArFC,SAACG,GAAW,IAAD,EACcS,IAAvBM,GADS,EAChBF,MADgB,EACTE,SADS,KACAa,WACyBlB,oBAAS,IAFlC,mBAEhBoG,EAFgB,KAEEC,EAFF,OAGGrG,mBAAS,IAHZ,mBAGhBsG,EAHgB,KAGTC,EAHS,OAICvG,mBAAS,IAJV,mBAIhBU,EAJgB,KAIV8F,EAJU,OAKGxG,mBAAS,IALZ,mBAKhByG,EALgB,KAKTC,EALS,OAMO1G,mBAAS,IANhB,mBAMhB2G,EANgB,KAMPC,EANO,KAQvB3E,oBAAS,sBAAC,4BAAAzB,EAAA,sEACaH,EAAQ,yBAA0B,MAAO,KAAM,CAC9DyB,cAAc,UAAD,OAAYxC,EAAMtB,SAF7B,OACA+C,EADA,OAIN6F,EAAW7F,EAAK1F,OAJV,2CAKP,IAEH,IAAMwL,EAAW,uCAAG,4BAAArG,EAAA,6DACVsG,EAAW,IAAIC,UACZC,OAAO,OAAQP,GACxBK,EAASE,OAAO,gBAAiB,kBACjCF,EAASE,OAAO,aAAc,kBAJd,SAKVpG,MAAM,8DAA+D,CACvEH,OAAQ,OACRC,KAAMoG,IAETG,MAAK,SAAApG,GAAG,OAAIA,EAAIC,UAChBmG,KALK,uCAKA,WAAMH,GAAN,SAAAtG,EAAA,sEACIH,EAAQ,sBAAuB,OAAQ,CAACiG,QAAO5F,OAAMwG,QAASJ,EAASvG,KAAM,CAC/EuB,cAAc,UAAD,OAAYxC,EAAMtB,SAFjC,2CALA,uDAULmJ,OAAM,SAAAC,GAAG,OAAIrF,QAAQC,IAAIoF,MAfV,2CAAH,qDAkBjB,OACI,sBAAK3H,UAAU,eAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,8BACI,qBAAKmD,IAAI,4mBAA4mBE,IAAI,OAE7nB,gCACI,6BAAKxD,EAAMrB,KAAK2D,cAChB,sBAAKnC,UAAU,2BAAf,UACI,0CACA,8CACA,uDAIZ,wBAAQE,QAAS,kBAAM0G,GAAoB,IAA3C,0BACCD,GAAoB,mCACjB,sBAAK3G,UAAU,gBAAf,UACI,qBAAKA,UAAU,cAAcE,QAAS,kBAAM0G,GAAoB,IAAhE,mBACA,sBAAK5G,UAAU,cAAf,UACI,yCACA,uBAAO3D,KAAK,OAAOiI,YAAY,cAAciC,MAAOM,EAAOL,SAAU,SAAArG,GAAC,OAAI2G,EAAS3G,EAAEsG,OAAOF,UAC5F,+CACA,uBAAOlK,KAAK,OAAOiI,YAAY,oBAAoBiC,MAAOtF,EAAMuF,SAAU,SAAArG,GAAC,OAAI4G,EAAQ5G,EAAEsG,OAAOF,UAChG,gDACA,uBAAOlK,KAAK,OAAOmK,SAAU,SAAArG,GAAC,OAAI8G,EAAS9G,EAAEsG,OAAOmB,MAAM,OAC1D,wBAAQ1H,QAASkH,EAAjB,4BAIZ,qBAAKpH,UAAU,mBAAf,SACKkH,EAAQjJ,KAAI,SAAA4J,GAAI,OAAI,qBAAK1E,IAAK0E,EAAKJ,QAASpE,IAAI,iB,wDCkBlDyE,GAnFH,SAACjI,GAKT,IAHA,IAAIkI,EAAaC,KAAKC,KAAKpI,EAAMjC,gBAAkBiC,EAAMlC,UAErDuK,EAAQ,GACHC,EAAI,EAAGA,GAAKJ,EAAYI,IAC7BD,EAAM7H,KAAK8H,GAIf,OAAO,gCACH,8BACKD,EAAMjK,KAAI,SAAAmK,GACP,OAAO,sBAAMpI,UAAWH,EAAMhC,cAAgBuK,GAAKC,KAAOC,aAC7CpI,QAAS,SAACC,GACNN,EAAM0I,cAAcH,IAF9B,SAGUA,SAIrBvI,EAAMnC,MAAMO,KAAI,SAAAC,GAAC,OAAI,gCACjB,iCACI,8BACG,cAAC,IAAD,CAAS+B,GAAI,YAAc/B,EAAErC,GAA7B,SACC,qBAAKwH,IAAI,GAAGF,IAAuB,MAAlBjF,EAAEsK,OAAOC,MAAgBvK,EAAEsK,OAAOC,MAAQrF,EACtDpD,UAAWqI,KAAOjF,gBAG3B,8BACKlF,EAAEE,SACG,wBAAQsK,SAAU7I,EAAM9B,oBAAoB4K,MAAK,SAAA9M,GAAE,OAAIA,IAAOqC,EAAErC,MAAKqE,QAAS,WAC5EL,EAAM+I,yBAAwB,EAAM1K,EAAErC,KADxC,sBAkBA,wBAAQ6M,SAAU7I,EAAM9B,oBAAoB4K,MAAK,SAAA9M,GAAE,OAAIA,IAAOqC,EAAErC,MAAKqE,QAAS,WAC5EL,EAAM+I,yBAAwB,EAAM1K,EAAErC,KADxC,yBAoBd,iCACI,iCACI,8BAAMqC,EAAEoF,OACR,8BAAMpF,EAAE2K,YAEZ,iCACI,8BAAM,uBACN,8BAAM,4BAvDa3K,EAAErC,WCbvCiN,G,+MAYFP,cAAgB,SAACQ,GACb,EAAKlJ,MAAMmJ,eAAeD,GAC1B,EAAKlJ,MAAMoJ,kBAAiB,I,mEAZ5BC,KAAKrJ,MAAMoJ,kBAAiB,K,+BAsB5B,OAAO,mCAEH,cAAC,GAAD,CAAOrL,gBAAiBsL,KAAKrJ,MAAMjC,gBACvBD,SAAUuL,KAAKrJ,MAAMlC,SACrBE,YAAaqL,KAAKrJ,MAAMhC,YACxB0K,cAAeW,KAAKX,cACpB7K,MAAOwL,KAAKrJ,MAAMnC,MAClByL,OAAQD,KAAKrJ,MAAMsJ,OACnBC,SAAUF,KAAKrJ,MAAMuJ,SACrBR,wBAAyBM,KAAKrJ,MAAM+I,wBACpC7K,oBAAqBmL,KAAKrJ,MAAM9B,4B,GAlC3BsL,IAAMC,WAmDpB5J,gBAXO,SAACvD,GACnB,MAAO,CACHuB,MAAOvB,EAAMmD,UAAU5B,MACvBC,SAAUxB,EAAMmD,UAAU3B,SAC1BC,gBAAiBzB,EAAMmD,UAAU1B,gBACjCC,YAAa1B,EAAMmD,UAAUzB,YAC7BC,WAAY3B,EAAMmD,UAAUxB,WAC5BC,oBAAqB5B,EAAMmD,UAAUvB,uBAKzC,CAACoL,OfDiB,SAAChL,GAAD,MAAa,CAAC9B,KAAMc,EAAQgB,WeCrCiL,SfAW,SAACjL,GAAD,MAAa,CAAC9B,KAAMe,EAAUe,WeA/BoL,SfCC,SAAC7L,GAAD,MAAY,CAACrB,KAAMgB,EAAWK,UeDrBsL,efEH,SAACnL,GAAD,MAAkB,CAACxB,KAAMiB,EAAkBO,gBeFxB2L,mBfGf,SAAC5L,GAAD,MAAsB,CAACvB,KAAMkB,EAAuBc,MAAOT,IeHxBqL,iBfIrC,SAACnL,GAAD,MAAiB,CAACzB,KAAMmB,EAAoBM,eeJW8K,wBfKhD,SAAC9K,EAAYK,GAAb,MAAyB,CAAC9B,KAAMoB,EAA8BK,aAAYK,YeNlGuB,CACkGoJ,I,SCrDlGW,I,MAVC,WACZ,OACI,qBAAKzJ,UAAU,UAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,8BAAK,0BAAiB,8BAAK,0BAAiB,8BAAK,0BAAiB,8BAAK,0BAAiB,8BAAK,0BAAiB,8BAAK,0BAAiB,8BAAK,0BAAiB,8BAAK,iCC0NhKN,I,MAAAA,aAdO,SAACvD,GACnB,MAAO,CACHoC,MAAOpC,EAAMoD,KAAKhB,UAID,SAACoB,GACtB,MAAO,CACH+J,MAAO,SAACnL,EAAOC,GACXmB,EAASlB,EAAQF,EAAOC,QAKrBkB,EAzNE,SAACG,GAAW,IAClB6J,EAAS7J,EAAT6J,MACD5N,ECPC+E,uBAAY,SAAA8I,GACXpE,OAAOqE,GAAKD,GACZpE,OAAOqE,EAAEC,MAAM,CAACC,KAAMH,MAE3B,IDCqB,EAGarJ,IAA9BI,EAHiB,EAGjBA,MAAOE,EAHU,EAGVA,QAASa,EAHC,EAGDA,WAHC,EAIMlB,oBAAS,GAJf,mBAIjBC,EAJiB,KAIRC,EAJQ,OAKAF,mBAAS,CAC7BwJ,MAAO,GACP5H,YAAa,GACb6H,SAAU,KARU,mBAKjBC,EALiB,KAKXC,EALW,OAUwB3J,oBAAS,GAVjC,mBAUjB4J,EAViB,KAUCC,EAVD,KAYxB5H,qBAAU,WACN1G,EAAQ4E,GACRe,MACF,CAACf,EAAO5E,EAAS2F,IAEnBe,qBAAU,WACN,IAAMlB,EAAOxC,KAAKuL,MAAMzL,eAAe0L,QAAQ,gBAE3ChJ,GAAQA,EAAK/C,OACbmL,EAAMpI,EAAK/C,MAAO+C,EAAK9C,QAE5B,CAACkL,IAEJ,IAAMa,EAAgB,SAAApK,GAClB+J,EAAQ,2BAAID,GAAL,mBAAY9J,EAAEsG,OAAOnD,KAAOnD,EAAEsG,OAAOF,UAG1CiE,EAAe,uCAAG,4BAAAzJ,EAAA,sEAEhBN,GAAW,GAFK,SAGOG,EAAQ,qBAAsB,OAAvB,eAAmCqJ,GAAO,CAAC5H,cAAc,UAAD,OAAYxC,EAAMtB,SAHxF,OAGVkM,EAHU,OAIhB3O,EAAQ2O,EAAS3O,SACjB2E,GAAW,GACXiK,IANgB,kDAQhBC,MAAM,KAAI7O,SACV2E,GAAW,GATK,0DAAH,qDAafmK,EAAY,uCAAG,4BAAA7J,EAAA,sEAEbN,GAAW,GAFE,SAGMG,EAAQ,kBAAmB,OAApB,eAAgCqJ,GAAO,CAAC5H,cAAc,UAAD,OAAYxC,EAAMtB,SAHpF,OAGP+C,EAHO,OAKboI,EAAMpI,EAAK/C,MAAO+C,EAAK9C,MALV,gDAObmM,MAAM,KAAI7O,SACV2E,GAAW,GARE,yDAAH,qDAYZiK,EAAoB,WACtBN,GAAqBD,IAGzB,OACI,mCACK3J,EACG,cAAC,GAAD,IAEA,sBAAKR,UAAU,eAAf,UACI,qBAAKA,UAAU,OAAf,SACI,0BAASA,UAAU,OAAnB,UACI,yDACA,0DAGR,qBAAKA,UAAU,QAAf,SACI,iCACI,0BAASA,UAAU,OAAnB,UACI,uCAAUmK,EAAmB,KAAO,QACpC,qBAAKnK,UAAU,kBAAf,SACKmK,EACG,0DAA4B,mBAAGjK,QAASwK,EAAZ,SAA+B,mDAE3D,wDAA0B,mBAAGxK,QAASwK,EAAZ,SAA+B,wDAIpEP,GAAoB,sBAAKnK,UAAU,uBAAf,UACjB,uBAAO6K,QAAQ,cAAf,sBACA,uBACIvH,KAAK,cACLzH,GAAG,cACHQ,KAAK,OACLkK,MAAO0D,EAAK9H,YACZqE,SAAU+D,EACVO,UAAQ,OAEhB,sBAAK9K,UAAU,wBAAf,UACI,uBAAO6K,QAAQ,QAAf,mBACA,uBACIvH,KAAK,QACLzH,GAAG,QACHQ,KAAK,QACLkK,MAAO0D,EAAKF,MACZvD,SAAU+D,EACVO,UAAQ,OAEhB,sBAAK9K,UAAU,2BAAf,UACI,uBAAO6K,QAAQ,WAAf,sBACA,uBACIvH,KAAK,WACLzH,GAAG,WACHQ,KAAK,WACLkK,MAAO0D,EAAKD,SACZxD,SAAU+D,EACVjG,YAAY,yBACZwG,UAAQ,IACZ,mBAAG9K,UAAU,wBAEhBmK,EACG,wBAAQnK,UAAU,aAAa3D,KAAK,SAAS6D,QAASsK,EAAtD,qBAEA,wBAAQxK,UAAU,aAAa3D,KAAK,SAAS6D,QAAS0K,EAAtD,qBAEJ,yBAAS5K,UAAU,aAAnB,SACI,4BACI,uBAAMA,UAAU,QAAhB,oDAC2C,uBAAK,+CADhD,MACwE,iDADxE,yBEWrB+K,I,MAzIA,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,UACjBC,EAAa,CACX,CAACpK,IAAK,sFACN,CAACA,IAAK,wIACN,CAACA,IAAK,iEACN,CAACA,IAAK,6EAEVqK,EAAgB5H,iBAAO,MACvB6H,EAAc7H,iBAAO,MACrB8H,EAAS9H,iBAAO,MAChB+H,EAAa/H,iBAAO,MACpBgI,EAAShI,iBAAO2H,EAAWjN,KAAI,kBAAMuN,0BACrCC,EAAOlI,iBAAO2H,EAAWjN,KAAI,kBAAMuN,0BAEnCE,EAAa,EAAGC,EAAS,EAAGC,EAAU,EACtCC,EAAQ,GAEZrJ,qBAAU,WAWN,OAVAqJ,EAAQC,EAAavG,OAAOwG,iBAAiBZ,EAAcxH,SAASkI,OACpEG,IACAC,IAEA1G,OAAOC,iBAAiB,SAAUyG,GAElCC,IAEAd,EAAYzH,QAAQwI,MAAMN,MAAQ,IAAMX,EAAWkB,OAAS,IAErD,kBAAM7G,OAAOE,oBAAoB,SAAUwG,MACnD,IAsBH,SAASI,IACDV,GAAUE,GAASX,EAAWkB,OAAS,GACvCT,EAAS,EAETA,GAAUE,EAAQD,EAEtBR,EAAYzH,QAAQwI,MAAMG,UAA1B,sBAAqDX,EAArD,OAGJ,SAASY,IACU,IAAXZ,EACAA,EAASE,GAASX,EAAWkB,OAAS,GAAKR,EAE3CD,GAAUE,EAAQD,EAEtBR,EAAYzH,QAAQwI,MAAMG,UAA1B,sBAAqDX,EAArD,OAgBJ,SAASO,IACLT,EAAK9H,QAAQ6I,SAAQ,YAAe,EAAb7I,QACXwI,MAAMM,WAAa,UAE/BhB,EAAK9H,QAAQ+H,EAAa,GAAG/H,QAAQwI,MAAMM,WAAa,UAG5D,SAAST,IACLT,EAAO5H,QAAQ6I,SAAQ,YAAe,EAAb7I,QACbwI,MAAMN,MAAd,UAAyBA,EAAzB,SAQR,SAASI,IACL,IAAIS,EAAOb,EACXA,EAAQC,EAAavG,OAAOwG,iBAAiBZ,EAAcxH,SAASkI,OACpEG,IANAX,EAAO1H,QAAQwI,MAAMQ,OAArB,UAAiCd,GAAOb,EAASC,GAAjD,MAQIY,EAAQa,EACRf,IAAWD,EAAa,GAAK1D,KAAK4E,IAAIf,EAAQa,GACvCb,EAAQa,IACff,IAAWD,EAAa,GAAK1D,KAAK4E,IAAIf,EAAQa,IAElDtB,EAAYzH,QAAQwI,MAAMG,UAA1B,sBAAqDX,EAArD,OAGJ,SAASG,EAAae,GAClB,IAAIC,EAAsBD,EAAQT,OAASS,EAAQE,MAAM,IAAIC,UAAUC,KAAK,IAAIC,OAAO,MACvF,OAAOlF,KAAKmF,OAAON,EAAQE,MAAM,IAAIK,OAAO,EAAGN,GAAqBG,KAAK,KAG7E,OACI,sBAAKjN,UAAU,SAASqE,IAAKgH,EAA7B,UACI,qBAAKrL,UAAU,YAAYqE,IAAK8G,EAAhC,SACI,qBAAKnL,UAAU,QAAQqE,IAAK+G,EAA5B,SAEQF,EAAWjN,KAAI,WAAQkK,GAAR,IAAErH,EAAF,EAAEA,IAAF,OAAc,qBAAauD,IAAKkH,EAAO5H,QAAQwE,GAAInI,UAAU,OAA/C,SAAsD,qBAAKmD,IAAKrC,EAAKuC,IAAI,MAA/D8E,UAInD,qBAAKnI,UAAU,WAAWE,QArFX,WACnBqM,IACIb,EAAa,EACbA,IAEAA,EAAaR,EAAWkB,OAE5BF,OA+EI,qBAAKlM,UAAU,WAAWE,QAhGX,WACnBmM,IACIX,EAAaR,EAAWkB,OACxBV,IAEAA,EAAa,EAEjBQ,OA0FI,qBAAKlM,UAAU,cAAcqE,IAAKiH,EAAlC,SAEQJ,EAAWjN,KAAI,SAACoP,EAAGlF,GAAJ,OAAU,qBAAKnI,UAAU,aAAaqE,IAAKoH,EAAK9H,QAAQwE,GAAYjI,QAAS,kBA7DpFoN,EA6DyGnF,EAAE,EA5D/HyD,EAAU5D,KAAK4E,IAAIU,EAAW5B,GAC1B4B,EAAW5B,GACXA,EAAa4B,EACbf,KACOe,EAAW5B,IAClBA,EAAa4B,EACbjB,KAEJT,EAAU,OACVM,IAVJ,IAAwBoB,IA6DwEnF,aChHrFoF,I,MAnBE,SAAC,GAAY,IAAX1F,EAAU,EAAVA,KACf,OACI,qBAAK7H,UAAU,UAAf,SACI,sBAAKA,UAAU,OAAf,UACI,6BAAK6H,EAAK2F,MAAMrL,cAChB,qBAAKnC,UAAU,aAAf,SACI,qBAAKmD,IAAK0E,EAAKJ,QAASpE,IAAI,OAEhC,sBAAKrD,UAAU,eAAf,UACI,qBAAKA,UAAU,SACf,6BAAK6H,EAAKhB,QACV,4BAAIgB,EAAK5G,OACT,uBAAO5E,KAAK,OAAOiI,YAAY,4BCiBpC5E,gBAJS,SAACvD,GAAD,MAAY,CAChCoC,MAAOpC,EAAMoD,KAAKhB,SAGPmB,EAxBE,SAACG,GAAW,IAAD,EACQU,mBAAS,IADjB,mBACjBkN,EADiB,KACPC,EADO,OAEapN,IAAvBM,GAFU,EAEjBF,MAFiB,EAEVE,SAFU,EAEDa,WAQvB,OANAe,oBAAS,sBAAC,4BAAAzB,EAAA,sEACaH,EAAQ,uBAAwB,MAAO,KAAM,CAC5DyB,cAAc,UAAD,OAAYxC,EAAMtB,SAF7B,OACA+C,EADA,OAINoM,EAAYpM,EAAK1F,OAJX,2CAKP,IAEC,sBAAKoE,UAAU,YAAf,UACI,qBAAKA,UAAU,UAAf,SACI,cAAC,GAAD,CAAQgL,SAAU,KAAMC,UAAW,QAEtCwC,EAASxP,KAAI,SAAA4J,GAAI,OAAI,cAAC,GAAD,CAAUA,KAAMA,GAAYA,EAAK3D,cC4CpDxE,gBAZS,SAACvD,GAAD,MAAY,CAChCoC,MAAOpC,EAAMoD,KAAKhB,UAGG,SAACoB,GACtB,MAAO,CACH+J,MAAO,SAACnL,EAAOC,GACXmB,EAASlB,EAAQF,EAAOC,QAKrBkB,EAxDH,SAACG,GACT,IAAMyB,EAAOxC,KAAKuL,MAAMzL,eAAe0L,QAAQ,gBACzCqD,EAAapK,iBAAO,MAEpBqK,IAAoB/N,EAAMtB,MAC1BsP,ECLF,eAAC,IAAD,WACI,cAAC,IAAD,CAAQC,KAAK,WAAWC,UAAWC,KACnC,cAAC,IAAD,CAAOC,OAAK,EAACH,KAAK,WAAWI,OAAS,kBAAM,cAAC,GAAD,OAC5C,cAAC,IAAD,CAAOD,OAAK,EAACH,KAAK,SAASI,OAAS,kBAAM,cAAC,GAAD,OAC1C,cAAC,IAAD,CAAOD,OAAK,EAACH,KAAK,IAAIC,UAAWI,QDezC,SAASlC,IACL,IACI0B,EAAWhK,QAAQwI,MAAMQ,OAASxH,SAASlE,KAAKmN,cAAgBR,EAAkB,GAAK,GAAK,KAC9F,WAGN,OAlBItM,GAAQA,EAAK/C,OACbsB,EAAM6J,MAAMpI,EAAK/C,MAAO+C,EAAK9C,MAGjCgE,qBAAU,WAKN,OAJAyJ,IAEA1G,OAAOC,iBAAiB,SAAUyG,GAE3B,kBAAM1G,OAAOE,oBAAoB,SAAUwG,MACnD,CAAC2B,IASA,cAAC,IAAD,UACMA,EAGE,qCACI,qBAAK5N,UAAU,eACf,sBAAKA,UAAU,MAAf,UACI,cAAC,EAAD,IACA,qBAAKqE,IAAKsJ,EAAY3N,UAAU,cAAhC,SACK6N,UAPb,cAAC,IAAD,CAAOC,KAAK,IAAIG,OAAK,EAACF,UAAWM,UE9B7CC,GAA0B,IAArB/I,OAAOgJ,YAChBpJ,SAASqJ,gBAAgBrC,MAAMsC,YAAY,OAA3C,UAAsDH,GAAtD,OAEA/I,OAAOC,iBAAiB,UAAU,WAChC,IAAI8I,EAA0B,IAArB/I,OAAOgJ,YAChBpJ,SAASqJ,gBAAgBrC,MAAMsC,YAAY,OAA3C,UAAsDH,EAAtD,UAGFI,IAASR,OACL,cAAC,IAAD,CAAU1O,MAAOA,EAAjB,SACI,cAAC,GAAD,MAEF2F,SAASwJ,eAAe,W","file":"static/js/main.204ca60f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3Itvp\",\"selectedPage\":\"users_selectedPage__2hka0\"};","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    newPostText: '',\r\n    profile: null\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text })\r\n\r\nexport default profileReducer;","let initialState = {\r\n    dialogs: [],\r\n    messages: [],\r\n    chat: {},\r\n    isDialogSelected: false\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SEND_MESSAGE':\r\n            return {\r\n                ...state\r\n            }\r\n        case 'SET_MESSAGES':\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: action.messages\r\n            };\r\n        case 'SET_DIALOGS':\r\n            return {\r\n                ...state,\r\n                dialogs: action.dialogs\r\n            };\r\n        case 'SET_CHAT':\r\n            return {\r\n                ...state,\r\n                chat: action.chat\r\n            };\r\n        case 'SET_IS_DIALOG_SELECTED':\r\n            return {\r\n                ...state,\r\n                isDialogSelected: action.isDialogSelected\r\n        };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = () => ({type: 'SEND_MESSAGE'});\r\nexport const setMessagesAC = (messages) => ({type: 'SET_MESSAGES', messages});\r\nexport const setDialogsAC = (dialogs) => ({type: 'SET_DIALOGS', dialogs});\r\nexport const setChatAC = (chat) => ({type: 'SET_CHAT', chat});\r\nexport const setIsDialogSelectedAC = (isDialogSelected) => ({type: 'SET_IS_DIALOG_SELECTED', isDialogSelected});\r\n\r\nexport default dialogsReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId })\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport default usersReducer;","let initialState = {\r\n    token: null,\r\n    user: {}\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            sessionStorage.setItem('storageName', JSON.stringify({\r\n                token: action.jwtSecret,\r\n                user: action.user\r\n            }));\r\n            \r\n            return {\r\n                ...state,\r\n                token: action.jwtSecret,\r\n                user: action.user\r\n            }\r\n        case 'LOGOUT':\r\n            sessionStorage.removeItem('storageName');\r\n\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: {}\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const loginAC = (jwtSecret, user) => ({type: 'LOGIN', jwtSecret, user});\r\nexport const logoutAC = () => ({type: 'LOGOUT'});\r\nexport default authReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport { logoutAC } from '../../redux/auth-reducer';\r\nimport './Header.scss';\r\n\r\nconst Header = (props) => {\r\n    const {logout} = props;\r\n    const history = useHistory();\r\n\r\n    const logoutHandler = (e) => {\r\n        e.preventDefault();\r\n        logout(); \r\n        history.push('/');\r\n    };\r\n\r\n    return (\r\n        <header className='header'>\r\n            <span className=\"label\"><Link to=\"/\"><big>Kalina</big></Link></span>\r\n            <div className=\"navigation\">\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/profile\">Profile</Link>\r\n                <Link to=\"/dialogs\">Dialogs</Link>\r\n                <Link to=\"/users\">Users</Link>\r\n                <Link to=\"/\" onClick={logoutHandler}>Log out</Link>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logout: () => {\r\n            dispatch(logoutAC());\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import {useState, useCallback} from 'react';\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const request = useCallback( async (url, method = 'GET', body = null, headers = {}) => {\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body);\r\n                headers['Content-Type'] = 'application/json';\r\n            }\r\n\r\n            // const res = await fetch(`http://localhost:5000${url}`, {method, body, headers});\r\n            const res = await fetch(`https://kalinaserver.herokuapp.com${url}`, {method, body, headers});\r\n            const data = await res.json();\r\n\r\n            if (!res.ok) {\r\n                throw new Error(data.message || 'Something goes wrong');\r\n            }\r\n\r\n            setLoading(false);\r\n\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n    \r\n    return {loading, error, request, clearError};\r\n} ","export default __webpack_public_path__ + \"static/media/user.96e310a6.png\";","import React, { useEffect, useState } from 'react';\r\nimport './DialogItem.scss';\r\nimport {Link} from \"react-router-dom\";\r\nimport { Avatar } from '@material-ui/core';\r\nimport Pusher from 'pusher-js';\r\nimport { setChatAC, setDialogsAC, setIsDialogSelectedAC, setMessagesAC } from \"../../../redux/dialogs-reducer\";\r\nimport { connect } from 'react-redux';\r\nimport { useHttp } from '../../../hooks/http.hook';\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\n\r\nconst pusher = new Pusher('b634efb073fba40fbf3a', {\r\n    cluster: 'eu'\r\n});\r\n\r\nconst DialogItem = (props) => {\r\n    // const path = \"/dialogs/\" + props.id;\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [dialogsLastMsg, setDialogsLastMsg] = useState({});\r\n    let displayName = '', message = '', timestamp = 0;\r\n\r\n    const getLastMessage = async () => {\r\n        try {\r\n            const data = await request(`/api/chats/get/lastMessage?id=${props.id}`, 'GET', null, {Authorization: `Bearer ${props.token}`});\r\n            setDialogsLastMsg(data);\r\n        } catch {console.log(1)}\r\n    }\r\n\r\n    useEffect(() => {\r\n        getLastMessage();\r\n        \r\n        const channel = pusher.subscribe('messages');\r\n        channel.bind('newMessage', () => {\r\n            getLastMessage();   \r\n        });\r\n\r\n        return () => {\r\n            channel.unbind_all();\r\n            channel.unsubscribe();\r\n        };\r\n    }, [props.id]);\r\n\r\n    const selectedDialog = async () => {\r\n        try {\r\n            const data = await request(`/api/chats/get/conversation?id=${props.id}`, 'GET', null, {Authorization: `Bearer ${props.token}`});\r\n            props.setMessages(data['0'].conversation);\r\n            props.setChat({\r\n                chatName: data['0'].chatName,\r\n                chatId: props.id\r\n            });\r\n            props.setIsDialogSelected(true);\r\n        } catch {console.log(1)}\r\n    }\r\n\r\n    try {\r\n        displayName = dialogsLastMsg.user.displayName;\r\n        message = dialogsLastMsg.message;\r\n        timestamp = dialogsLastMsg.timestamp;\r\n    } catch {}\r\n\r\n    return (\r\n        // <Link to={path}>\r\n            <div onClick={selectedDialog} className='dialogItem'>\r\n                <div className='dialogItem__info'>\r\n                    <div className='dialogItem__info-avatar'><img src={userPhoto} alt=''/></div>\r\n                    <div className='dialogItem__info-main'>\r\n                        <div><h1>{props.name}</h1></div>\r\n                        <span className='dialogItem__info-message'>{displayName}: {message}</span>\r\n                    </div>\r\n                    <div className=\"timaStamp\"><small>24.03</small></div>\r\n                </div>\r\n            </div>\r\n        // </Link>  \r\n    )\r\n}\r\n\r\n\r\n// {/* <div><small>{new Date(parseInt(timestamp)).toISOString().replace(/T/g, ' ').replace(/\\..*/, '')}</small> </div> */}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setDialogs: (dialogs) => {\r\n            dispatch(setDialogsAC(dialogs));\r\n        },\r\n        setMessages: (messages) => {\r\n            dispatch(setMessagesAC(messages));\r\n        },\r\n        setChat: chat => {\r\n            dispatch(setChatAC(chat))\r\n        },\r\n        setIsDialogSelected: (a) => {\r\n            dispatch(setIsDialogSelectedAC(a))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogItem);","import React, { useEffect, useRef } from 'react';\r\n// import ChatIcon from '@material-ui/icons/Chat';\r\n// import DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\n// import MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport \"./Dialogs.scss\";\r\n// import { IconButton, Avatar } from '@material-ui/core';\r\nimport { SearchOutlined } from '@material-ui/icons';\r\nimport DialogItem from './DialogItem';\r\nimport { Button } from '@material-ui/core';\r\nimport Pusher from 'pusher-js';\r\nimport { useHttp } from '../../../hooks/http.hook';\r\nimport { setDialogsAC } from '../../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport { useState } from 'react';\r\n\r\nconst pusher = new Pusher('b634efb073fba40fbf3a', {\r\n    cluster: 'eu'\r\n});\r\n\r\nconst DialogsList = (props) => {    \r\n    const {error, request, clearError} = useHttp();\r\n    const [loading, setLoading] = useState(false);\r\n    const dialogs = useRef(null);\r\n    const dialogsHeader = useRef(null);\r\n    const dialogsItems = useRef(null);\r\n\r\n    const getDialogs = async () => {\r\n        try {\r\n            const data = await request('/api/chats/get/conversations', 'GET', null, {\r\n                Authorization: `Bearer ${props.token}`,\r\n            });\r\n            props.setDialogs(data);\r\n        } catch(err) {console.log(err)}\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        !props.isDialogSelected ? dialogs.current.classList.add('show') : dialogs.current.classList.remove('show');\r\n    }, [props.isDialogSelected])\r\n    \r\n    useEffect(() => {\r\n        getDialogs();\r\n        \r\n        const channel = pusher.subscribe('chats');\r\n        channel.bind('newChat', () => {\r\n            getDialogs();\r\n        });\r\n    }, []);\r\n\r\n    const addNewChat = async (e) => {\r\n        e.preventDefault();\r\n        const chatName = prompt('Enter a chat name');\r\n        const firstMsg = prompt('Send a welcome message');\r\n\r\n        if(chatName && firstMsg) {\r\n            try {\r\n                let chatId = '';\r\n\r\n                const data = await request('/api/chats/new/conversation', 'POST', {chatName}, {Authorization: `Bearer ${props.token}`});\r\n\r\n                chatId = data._id\r\n\r\n                await request(`/api/chats/new/message?id=${chatId}`, 'POST', {\r\n                    message: firstMsg,\r\n                    timestamp: Date.now(),\r\n                    user: props.user\r\n                }, {Authorization: `Bearer ${props.token}`});\r\n            } catch {console.log(1)}\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div ref={dialogs} className='dialogs'>\r\n            <div ref={dialogsHeader} className='dialogs__header'>\r\n                <input placeholder='Search or start new chat' type='text' />\r\n                <button onClick={addNewChat}>+</button>\r\n            </div>\r\n            {/* <div className='dialogs__search'>\r\n                <div className='dialogs__searchContainer'>\r\n                    <SearchOutlined/>\r\n                    <input placeholder='Search or start new chat' type='text' />\r\n                </div>\r\n            </div> */}\r\n            <div ref={dialogsItems} className='dialogs__items'>\r\n                {props.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} timestamp={dialog.timestamp}/> )} \r\n            </div>\r\n        </div>\r\n    )  \r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        isDialogSelected: state.dialogsPage.isDialogSelected,\r\n        user: state.auth.user,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setDialogs: (dialogs) => {\r\n            dispatch(setDialogsAC(dialogs));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DialogsList);","import React from 'react';\r\nimport './MessageItem.scss';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={`messages__item  ${props.message.user.displayName === props.userName && 'messages__receiver'}`}>\r\n            <span className='message__name'>{props.message.user.displayName}</span>\r\n            <div className='message'>{props.message.message}</div>\r\n            <span className='message__timestamp'>{new Date(parseInt(props.message.timestamp)).toISOString().replace(/T/g, ' ').replace(/\\..*/, '')}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import { Avatar, IconButton } from '@material-ui/core';\r\nimport { AttachFile, InsertEmoticon, MoreVert, SearchOutlined } from '@material-ui/icons';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Messages.scss';\r\nimport Pusher from 'pusher-js';\r\nimport MessageItem from './MessageItem';\r\nimport { useHttp } from '../../../hooks/http.hook';\r\nimport btnBack from '../../../assets/images/arrowback.svg';\r\n\r\nconst MessagesList = (props) => {\r\n    const {loading, error, request, clearError} = useHttp();\r\n    const [newMessage, setNewMessage] = useState('');\r\n    \r\n    const onSendMessageClick = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await request(`/api/chats/new/message?id=${props.chat.chatId}`, 'POST', {\r\n                message: newMessage,\r\n                timestamp: Date.now(),\r\n                user: props.user\r\n            }, {Authorization: `Bearer ${props.token}`});\r\n        } catch {console.log(1)}\r\n        setNewMessage('');\r\n    }\r\n\r\n    const fixScroll = () => {\r\n        try {\r\n            const block = document.querySelector('.messages__body');\r\n            block.scrollTop = block.scrollHeight;\r\n        } catch{}\r\n    }\r\n\r\n    const onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        setNewMessage(body);\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', () => fixScroll());\r\n\r\n        return () => window.removeEventListener('resize', () => fixScroll());\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const pusher = new Pusher('b634efb073fba40fbf3a', {\r\n            cluster: 'eu'\r\n        });\r\n      \r\n        const channel = pusher.subscribe('messages');\r\n        channel.bind('newMessage', async () => {\r\n            try {\r\n                const data = await request(`/api/chats/get/conversation?id=${props.chat.chatId}`, 'GET', null, {Authorization: `Bearer ${props.token}`});\r\n                props.setMessages(data['0'].conversation);\r\n                fixScroll();\r\n            } catch {}\r\n        });\r\n\r\n        fixScroll();\r\n\r\n        return () => {\r\n            channel.unbind_all();\r\n            channel.unsubscribe();\r\n        };\r\n    }, [props.chat.chatId]);\r\n\r\n    const toggleChat = () => {props.setIsDialogSelected(false)}\r\n\r\n    return (\r\n        <div className='messages'>\r\n            <div className='messages__header'>\r\n                <div className='btnBack' onClick={toggleChat}><svg  xmlns=\"http://www.w3.org/2000/svg\"><line x1=\"2\" x2=\"30\" y1=\"15\" y2=\"15\" stroke=\"black\" strokeWidth=\"3\"/><line x1=\"0\" x2=\"15\" y1=\"15\" y2=\"10\" stroke=\"black\" strokeWidth=\"3\"/><line x1=\"0\" x2=\"15\" y1=\"15\" y2=\"20\" stroke=\"black\" strokeWidth=\"3\"/></svg></div>\r\n                <Avatar />\r\n                <div className='messages__headerInfo'>\r\n                    <h3>{props.chat.chatName}</h3>\r\n                </div>\r\n                <div className='messages__headerRight'>\r\n                    <IconButton>\r\n                        <SearchOutlined/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className='messages__body'>\r\n                { props.messages.map( message => <MessageItem userName={props.user.displayName} message={message} key={message._id} /> ) }\r\n            </div>\r\n            <div className='messages__footer'>\r\n                <InsertEmoticon className='emoji'/>\r\n                <form>\r\n                    <input \r\n                        type='text'\r\n                        value={newMessage}\r\n                        onChange={onNewMessageChange}\r\n                        placeholder='Enter your message'/>\r\n                    <button \r\n                        type='submit'\r\n                        onClick={onSendMessageClick}>Send</button>\r\n                </form>\r\n                <MicIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessagesList;","export default __webpack_public_path__ + \"static/media/arrowback.f36fb0e7.svg\";","import {sendMessageCreator, setChatAC, setIsDialogSelectedAC, setMessagesAC} from \"../../../redux/dialogs-reducer\";\r\nimport MessagesList from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.dialogsPage.messages,\r\n        chat: state.dialogsPage.chat,\r\n        user: state.auth.user,\r\n        token: state.auth.token\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        },\r\n        setMessages: (messages) => {\r\n            dispatch(setMessagesAC(messages));\r\n        },\r\n        setChat: chat => {\r\n            dispatch(setChatAC(chat))\r\n        },\r\n        setIsDialogSelected: (a) => {\r\n            dispatch(setIsDialogSelectedAC(a))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessagesList);\r\n","import React from 'react';\r\nimport './DialogsPage.scss';\r\nimport DialogsList from './Dialogs/Dialogs';\r\nimport MessagesListContainer from './Messages/MessagesContainer';\r\nimport { connect } from 'react-redux';\r\n \r\nconst Dialogs = (props) => {\r\n    return (\r\n        <div className='dialogs-page'>\r\n            <DialogsList />\r\n            {!props.isDialogSelected ? <div className='chooseChat'>Choose a chat</div> : <MessagesListContainer />}\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isDialogSelected: state.dialogsPage.isDialogSelected\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dialogs);","import { connect } from 'react-redux';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHttp } from '../../hooks/http.hook';\r\n// import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n// import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport './Profile.scss';\r\n\r\nconst Profile = (props) => {\r\n    const {error, request, clearError} = useHttp();\r\n    const [isCreatePostOpen, setIsCreatePostOpen] = useState(false);\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [myPosts, setMyPosts] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        const data = await request('/api/posts/get/myposts', 'GET', null, {\r\n            Authorization: `Bearer ${props.token}`,\r\n        });\r\n        setMyPosts(data.posts)\r\n    }, []);\r\n\r\n    const postDetails = async () => {\r\n        const formData = new FormData();\r\n        formData.append('file', image);\r\n        formData.append('upload_preset', 'kalina-why-not');\r\n        formData.append('cloud_name', 'kalina-why-not');\r\n        await fetch('https://api.cloudinary.com/v1_1/kalina-why-not/image/upload', {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        .then(res => res.json())\r\n        .then(async formData => {\r\n            await request('/api/posts/new/post', 'POST', {title, body, picture: formData.url}, {\r\n                Authorization: `Bearer ${props.token}`,\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n    return (\r\n        <div className='profile-page'>\r\n            <div className='profile__info'>\r\n                <div>\r\n                    <img src=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/5952bfa6-4594-4d7c-bee6-0b5a3988a099/dapn32z-2a11b870-38b2-4caf-ba16-5bbe9a84fe7f.png/v1/fill/w_200,h_200,strp/moonlight_deer___200x200_pixelart_by_fluffzee_dapn32z-fullview.png?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOiIsImlzcyI6InVybjphcHA6Iiwib2JqIjpbW3siaGVpZ2h0IjoiPD0yMDAiLCJwYXRoIjoiXC9mXC81OTUyYmZhNi00NTk0LTRkN2MtYmVlNi0wYjVhMzk4OGEwOTlcL2RhcG4zMnotMmExMWI4NzAtMzhiMi00Y2FmLWJhMTYtNWJiZTlhODRmZTdmLnBuZyIsIndpZHRoIjoiPD0yMDAifV1dLCJhdWQiOlsidXJuOnNlcnZpY2U6aW1hZ2Uub3BlcmF0aW9ucyJdfQ.nf-qh5IpeWu7UCzndssg2ee6_hETzDEAjAQ8cmU0JXE\" alt=\"\" />\r\n                </div> \r\n                <div>\r\n                    <h4>{props.user.displayName}</h4>\r\n                    <div className='profile__info-attributes'>\r\n                        <h5>40 posts</h5>\r\n                        <h5>30 followers</h5>\r\n                        <h5>40 following</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button onClick={() => setIsCreatePostOpen(true)}>Add new post</button>\r\n            {isCreatePostOpen && <>\r\n                <div className='newPostWindow'>\r\n                    <div className='closeWindow' onClick={() => setIsCreatePostOpen(false)}>Close</div>\r\n                    <div className='newPostBody'>\r\n                        <span>Title</span>\r\n                        <input type='text' placeholder='Enter title' value={title} onChange={e => setTitle(e.target.value)} />\r\n                        <span>Description</span>\r\n                        <input type='text' placeholder='Enter Description' value={body} onChange={e => setBody(e.target.value)}/>\r\n                        <span>Upload image</span>\r\n                        <input type='file' onChange={e => setImage(e.target.files[0])}/>\r\n                        <button onClick={postDetails}>Submit</button>\r\n                    </div>\r\n                </div>\r\n            </>}\r\n            <div className='profile__gallery'>\r\n                {myPosts.map(post => <img src={post.picture} alt=\"\"/>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         setDialogs: (dialogs) => {\r\n//             dispatch(setDialogsAC(dialogs));\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default connect(mapStateToProps)(Profile);","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n// import * as axios from \"axios\";\r\n// import {toggleFollowingProgress} from \"../../redux/users-reducer\";\r\n\r\nlet Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    return <div>\r\n        <div>\r\n            {pages.map(p => {\r\n                return <span className={props.currentPage === p && styles.selectedPage}\r\n                             onClick={(e) => {\r\n                                 props.onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        </div>\r\n        {\r\n            props.users.map(u => <div key={u.id}>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + u.id}>\r\n                        <img alt='' src={u.photos.small != null ? u.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {u.followed\r\n                            ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.toggleFollowingProgress(true, u.id);\r\n                                // axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {\r\n                                //     withCredentials: true,\r\n                                //     headers: {\r\n                                //         \"API-KEY\": \"b1775b2f-c3a5-4509-8dc9-90b5629de7c3\"\r\n                                //     }\r\n                                // })\r\n                                //     .then(response => {\r\n                                //         if (response.data.resultCode === 0) {\r\n                                //             props.unfollow(u.id);\r\n                                //         }\r\n                                //         props.toggleFollowingProgress(false, u.id);\r\n                                //     });\r\n\r\n\r\n\r\n                            }}>Unfollow</button>\r\n                            : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                                props.toggleFollowingProgress(true, u.id);\r\n                                // axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {}, {\r\n                                //     withCredentials: true,\r\n                                //     headers: {\r\n                                //         \"API-KEY\": \"b1775b2f-c3a5-4509-8dc9-90b5629de7c3\"\r\n                                //     }\r\n                                // })\r\n                                //     .then(response => {\r\n                                //         if (response.data.resultCode === 0) {\r\n                                //             props.follow(u.id);\r\n                                //         }\r\n                                //         props.toggleFollowingProgress(false, u.id);\r\n                                //     });\r\n\r\n\r\n                            }}>Follow</button>}\r\n\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{u.name}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setUsers,\r\n    setTotalUsersCount,\r\n    toggleIsFetching,\r\n    unfollow, toggleFollowingProgress\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.toggleIsFetching(true);\r\n\r\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n\r\n        //         this.props.toggleIsFetching(false);\r\n        //         this.props.setUsers(data.items);\r\n        //         this.props.setTotalUsersCount(data.totalCount);\r\n        //     });\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.toggleIsFetching(true);\r\n\r\n        // usersAPI.getUsers(pageNumber, this.props.pageSize)\r\n        //     .then(data => {\r\n        //         this.props.toggleIsFetching(false);\r\n        //         this.props.setUsers(data.items);\r\n        //     });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {/* { this.props.isFetching ? <Preloader /> : null } */}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                        pageSize={this.props.pageSize}\r\n                        currentPage={this.props.currentPage}\r\n                        onPageChanged={this.onPageChanged}\r\n                        users={this.props.users}\r\n                        follow={this.props.follow}\r\n                        unfollow={this.props.unfollow}\r\n                        toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                        followingInProgress={this.props.followingInProgress}\r\n             />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching, toggleFollowingProgress})(UsersContainer);","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"ldio-xb2vocd1fhk\">\r\n                <div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHttp } from '../../hooks/http.hook';\r\nimport { useMessage } from '../../hooks/message.hook';\r\nimport { loginAC } from '../../redux/auth-reducer';\r\nimport Spinner from '../../components/Spinner/spinner';\r\nimport './AuthPage.scss';\r\n\r\nconst AuthPage = (props) => {\r\n    const {login} = props;\r\n    const message = useMessage();\r\n    const {error, request, clearError} = useHttp();\r\n    const [loading, setLoading] = useState(false);\r\n    const [form, setForm] = useState({\r\n        email: '',\r\n        displayName: '',\r\n        password: ''\r\n    });\r\n    const [isRegistrateForm, setIsRegistrateForm] = useState(true);\r\n    \r\n    useEffect(() => {\r\n        message(error);\r\n        clearError();\r\n    },[error, message, clearError]);\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(sessionStorage.getItem('storageName'));\r\n        \r\n        if (data && data.token) {\r\n            login(data.token, data.user);\r\n        }\r\n    }, [login])\r\n\r\n    const changeHandler = e => {\r\n        setForm({...form, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const registerHandler = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const register = await request('/api/auth/register', 'POST', {...form}, {Authorization: `Bearer ${props.token}`});\r\n            message(register.message);\r\n            setLoading(false);\r\n            changeFormHandler();\r\n        } catch (err) {\r\n            alert(err.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const data = await request('/api/auth/login', 'POST', {...form}, {Authorization: `Bearer ${props.token}`});\r\n            \r\n            login(data.token, data.user);\r\n        } catch (err) {\r\n            alert(err.message);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const changeFormHandler = () => {\r\n        setIsRegistrateForm(!isRegistrateForm);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {loading ?\r\n                <Spinner />\r\n                :\r\n                <div className='split-screen'>\r\n                    <div className='left'>\r\n                        <section className='copy'>\r\n                            <h1>Explore your creativity</h1>\r\n                            <p>For the beauty text.</p>\r\n                        </section>\r\n                    </div>\r\n                    <div className='right'>\r\n                        <form>\r\n                            <section className='copy'>\r\n                                <h2>Sign {isRegistrateForm ? 'up' : 'in'}</h2>\r\n                                <div className='login-container'>\r\n                                    {isRegistrateForm ?\r\n                                        <p>Already have an account? <a onClick={changeFormHandler}><strong>Sign in!</strong></a></p>\r\n                                        :\r\n                                        <p>Don't have an account? <a onClick={changeFormHandler}><strong>Sign up!</strong></a></p>\r\n                                    }\r\n                                </div>\r\n                            </section>\r\n                            {isRegistrateForm && <div className='input-container name'>\r\n                                <label htmlFor='displayName'>Nickname</label>\r\n                                <input \r\n                                    name=\"displayName\"\r\n                                    id=\"displayName\" \r\n                                    type=\"text\"\r\n                                    value={form.displayName}\r\n                                    onChange={changeHandler}\r\n                                    required/>\r\n                            </div>}\r\n                            <div className='input-container email'>\r\n                                <label htmlFor='email'>Email</label>\r\n                                <input \r\n                                    name=\"email\"\r\n                                    id=\"email\" \r\n                                    type=\"email\" \r\n                                    value={form.email}\r\n                                    onChange={changeHandler}\r\n                                    required/>\r\n                            </div>\r\n                            <div className='input-container password'>\r\n                                <label htmlFor='password'>Password</label>\r\n                                <input \r\n                                    name=\"password\"\r\n                                    id=\"password\" \r\n                                    type=\"password\" \r\n                                    value={form.password}\r\n                                    onChange={changeHandler}\r\n                                    placeholder='At least 6 characters!' \r\n                                    required/>\r\n                                <i className='far fa-eye-slash' />\r\n                            </div>\r\n                            {isRegistrateForm ?\r\n                                <button className='signup-btn' type='submit' onClick={registerHandler}>Sign up</button>\r\n                                :\r\n                                <button className='signup-btn' type='submit' onClick={loginHandler}>Sign in</button>\r\n                            }\r\n                            <section className='copy legal'>\r\n                                <p>\r\n                                    <span className='small'>\r\n                                        By continuing, you agree to accept our <br/><a>Privacy Policy</a> & <a>Terms of Service</a>.\r\n                                    </span>\r\n                                </p>\r\n                            </section>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n            {/* {loading ?\r\n                <Spinner />\r\n            :\r\n                <div className=\"auth-form\">\r\n                    <div className=\"auth-form__inner\">\r\n                        <h1>Sign {isRegistrateForm ? \"Up\" : \"In\"} With</h1>\r\n                        <div className='auth-form__main'>\r\n                            <div className='auth-form__fields'>\r\n                                {isRegistrateForm && <div className=\"auth-form__name\">\r\n                                    <input\r\n                                        name=\"displayName\"\r\n                                        id=\"displayName\" \r\n                                        type=\"text\" \r\n                                        className=\"validate\"\r\n                                        value={form.displayName}\r\n                                        onChange={changeHandler}\r\n                                        placeholder='Name'\r\n                                    />\r\n                                </div> }\r\n                                <div className=\"auth-form__email\">\r\n                                    <input\r\n                                        name=\"email\"\r\n                                        id=\"email\" \r\n                                        type=\"email\" \r\n                                        className=\"validate\"\r\n                                        value={form.email}\r\n                                        onChange={changeHandler}\r\n                                        placeholder='Email'\r\n                                    />\r\n                                </div>\r\n                                <div className=\"auth-form__password\">\r\n                                    <input \r\n                                        name=\"password\"\r\n                                        id=\"password\" \r\n                                        type=\"password\" \r\n                                        className=\"validate\"\r\n                                        value={form.password}\r\n                                        onChange={changeHandler}\r\n                                        placeholder='Password'\r\n                                    />\r\n                                </div>\r\n                            </div>  \r\n                            <div className='auth-form__btn'>\r\n                                {!isRegistrateForm ?\r\n                                    <button\r\n                                        onClick={loginHandler}\r\n                                        >\r\n                                            Sign in\r\n                                    </button>\r\n                                    :\r\n                                    <button \r\n                                        onClick={registerHandler}>\r\n                                            Sign up\r\n                                    </button>\r\n                                }\r\n                                {!isRegistrateForm ?\r\n                                    <div>\r\n                                        <p>or</p>\r\n                                        <p>Not a member? <a onClick={changeFormHandler}>Sign up</a> now!</p>\r\n                                    </div>\r\n                                    :\r\n                                    <a onClick={changeFormHandler}>&larr;Back</a>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            } */}\r\n        </>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (token, user) => {\r\n            dispatch(loginAC(token, user));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthPage);","import { useCallback } from \"react\"\r\n\r\nexport const useMessage = () => {\r\n    return useCallback(text => {\r\n        if (window.M && text) {\r\n            window.M.toast({html: text});\r\n        }\r\n    }, []);\r\n}","import React, { createRef, useEffect, useRef } from 'react';\r\nimport './Slider.scss';\r\n\r\nconst Slider = ({imgWidth, imgHeight}) => {\r\n    const slidesUrls = [\r\n            {url: 'https://www.sunchemical.com/wp-content/uploads/2019/07/SunWave_banner-1200x400.jpg'},\r\n            {url: 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTPuUErrrIAbhJWNbw-taT2n5SqTHHPAdjPS6Nd8eGJhsYOmZ1sEHICT8QkN5EbEL0XWVo&usqp=CAU'},\r\n            {url: 'https://www.mapix.com/wp-content/uploads/2018/04/1200x400.png'},\r\n            {url: 'https://sinctech.com/wp-content/uploads/2017/07/placeholder-1200x400.png'}\r\n        ], //slider_item\r\n        slidesWrapper = useRef(null), \r\n        slidesField = useRef(null), \r\n        slider = useRef(null), \r\n        dotWrapper = useRef(null), \r\n        slides = useRef(slidesUrls.map(() => createRef())),\r\n        dots = useRef(slidesUrls.map(() => createRef()));\r\n\r\n    let slideIndex = 1, offset = 0, toSlide = 1,\r\n        width = '';\r\n\r\n    useEffect(() => {\r\n        width = replaceWords(window.getComputedStyle(slidesWrapper.current).width);\r\n        fixSlideSize();\r\n        fixOffset();\r\n        \r\n        window.addEventListener('resize', fixOffset);\r\n\r\n        colorCurDot();\r\n        \r\n        slidesField.current.style.width = 100 * slidesUrls.length + '%';\r\n\r\n        return () => window.removeEventListener('resize', fixOffset);\r\n    }, []);\r\n\r\n    const nextBtnClicked = () => {\r\n        toRight();\r\n        if (slideIndex < slidesUrls.length) {\r\n            slideIndex++;\r\n        } else {\r\n            slideIndex = 1;\r\n        }\r\n        colorCurDot();\r\n    };\r\n\r\n    const prevBtnClicked = () => {\r\n        toLeft();\r\n        if (slideIndex > 1) {\r\n            slideIndex--;\r\n        } else {\r\n            slideIndex = slidesUrls.length;\r\n        }\r\n        colorCurDot();\r\n    };\r\n\r\n    function toRight() {\r\n        if (offset == width * (slidesUrls.length - 1)) {\r\n            offset = 0;\r\n        } else {\r\n            offset += width * toSlide;\r\n        }\r\n        slidesField.current.style.transform = `translateX(-${offset}px)`;\r\n    }\r\n\r\n    function toLeft() {\r\n        if (offset === 0) {\r\n            offset = width * (slidesUrls.length - 1) * toSlide;\r\n        } else {\r\n            offset -= width * toSlide;\r\n        }\r\n        slidesField.current.style.transform = `translateX(-${offset}px)`;\r\n    }\r\n\r\n    function goToSlideByDot(dotIndex) {\r\n        toSlide = Math.abs(dotIndex - slideIndex);\r\n        if (dotIndex < slideIndex) {\r\n            slideIndex = dotIndex;\r\n            toLeft();\r\n        } else if (dotIndex > slideIndex) {\r\n            slideIndex = dotIndex;\r\n            toRight();\r\n        }\r\n        toSlide = 1;\r\n        colorCurDot();\r\n    }\r\n\r\n    function colorCurDot() {\r\n        dots.current.forEach(({current}) => {\r\n            current.style.background = \"none\";\r\n        });\r\n        dots.current[slideIndex - 1].current.style.background = \"#fdc84b\";\r\n    }\r\n\r\n    function fixSlideSize() {\r\n        slides.current.forEach(({current}) => {\r\n            current.style.width = `${width}px`;\r\n        });\r\n    }\r\n\r\n    function fixSliderHeight() {\r\n        slider.current.style.height = `${width/(imgWidth/imgHeight)}px`;\r\n    }\r\n\r\n    function fixOffset() {\r\n        let temp = width;\r\n        width = replaceWords(window.getComputedStyle(slidesWrapper.current).width);\r\n        fixSlideSize();\r\n        fixSliderHeight();\r\n        if (width > temp) {\r\n            offset += (slideIndex - 1) * Math.abs(width - temp);\r\n        } else if (width < temp) {\r\n            offset -= (slideIndex - 1) * Math.abs(width - temp);\r\n        }\r\n        slidesField.current.style.transform = `translateX(-${offset}px)`;\r\n    }\r\n\r\n    function replaceWords(element) {\r\n        let lastNumIndexInWidth = element.length - element.split('').reverse().join('').search(/\\d/);\r\n        return Math.round(+element.split('').splice(0, lastNumIndexInWidth).join(''));\r\n    }\r\n\r\n    return (\r\n        <div className=\"slider\" ref={slider}>\r\n            <div className=\"container\" ref={slidesWrapper}>\r\n                <div className=\"track\" ref={slidesField}>\r\n                    {\r\n                        slidesUrls.map(({url}, i) => <div key={i} ref={slides.current[i]} className=\"item\"><img src={url} alt=\"\"/></div>)\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"btn_prev\" onClick={prevBtnClicked}></div>\r\n            <div className=\"btn_next\" onClick={nextBtnClicked}></div>\r\n            <div className=\"dot-wrapper\" ref={dotWrapper}>\r\n                {\r\n                    slidesUrls.map((_, i) => <div className='slider-dot' ref={dots.current[i]} key={i} onClick={() => goToSlideByDot(i+1)}></div>)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Slider;","import React from 'react';\r\n\r\nconst PostItem = ({post}) => {\r\n    return (\r\n        <div className='element'>\r\n            <div className='card'>\r\n                <h5>{post.owner.displayName}</h5>\r\n                <div className='card-image'>\r\n                    <img src={post.picture} alt=\"\"/>\r\n                </div>\r\n                <div className='card-content'>\r\n                    <div className='favo'></div>\r\n                    <h6>{post.title}</h6>\r\n                    <p>{post.body}</p>\r\n                    <input type='text' placeholder='add a comment'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostItem;","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Slider from '../../components/Slider/Slider';\r\nimport { useHttp } from '../../hooks/http.hook';\r\nimport './HomePage.scss';\r\nimport PostItem from './PostItem';\r\n\r\nconst HomePage = (props) => {\r\n    const [allPosts, setAllPosts] = useState([]);\r\n    const {error, request, clearError} = useHttp();\r\n\r\n    useEffect(async () => {\r\n        const data = await request('/api/posts/get/posts', 'GET', null, {\r\n            Authorization: `Bearer ${props.token}`,\r\n        });\r\n        setAllPosts(data.posts)\r\n    }, []);\r\n    return (\r\n        <div className='home-page'>\r\n            <div className='element'>\r\n                <Slider imgWidth={1200} imgHeight={500}/>\r\n            </div>\r\n            {allPosts.map(post => <PostItem post={post}  key={post._id}/>)}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token\r\n});\r\n\r\nexport default connect(mapStateToProps)(HomePage);","import React, { createRef, forwardRef, useEffect, useRef } from 'react';\r\nimport './App.scss';\r\nimport {BrowserRouter as Router, HashRouter, Route} from \"react-router-dom\";\r\nimport Header from \"./components/Header/Header\";\r\nimport { connect } from 'react-redux';\r\nimport { useRoutes } from './routes';\r\n// import Spinner from './components/Spinner/spinner';\r\nimport { loginAC } from './redux/auth-reducer';\r\nimport AuthPage from './pages/AuthPage/AuthPage';\r\n\r\nconst App = (props) => {\r\n    const data = JSON.parse(sessionStorage.getItem('storageName'));\r\n    const appWrapper = useRef(null);\r\n\r\n    const isAuthenticated = !!props.token;\r\n    const routes = useRoutes();\r\n    \r\n    if (data && data.token) {\r\n        props.login(data.token, data.user);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fixOffset()\r\n        \r\n        window.addEventListener('resize', fixOffset);\r\n\r\n        return () => window.removeEventListener('resize', fixOffset);\r\n    }, [isAuthenticated]);\r\n\r\n    function fixOffset() {\r\n        try{\r\n            appWrapper.current.style.height = document.body.clientHeight - (isAuthenticated ? 40 : 0) + 'px';\r\n        } catch {}    \r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            {!isAuthenticated ? \r\n                <Route path=\"/\" exact component={AuthPage} />\r\n                :\r\n                <>\r\n                    <div className='white-line'></div>\r\n                    <div className='app'>\r\n                        <Header />\r\n                        <div ref={appWrapper} className='app-wrapper'> \r\n                            {routes}\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n        </Router>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    token: state.auth.token\r\n});\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        login: (token, user) => {\r\n            dispatch(loginAC(token, user));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport DialogsPage from './pages/DialogsPage/DialogsPage';\r\nimport ProfilePage from './pages/ProfilePage/Profile';\r\nimport UsersPage from './pages/UsersPage/UsersContainer';\r\nimport AuthPage from './pages/AuthPage/AuthPage';\r\nimport HomePage from './pages/HomePage/HomePage';\r\n\r\nexport const useRoutes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route  path='/dialogs' component={DialogsPage}/>\r\n            <Route exact path='/profile' render={ () => <ProfilePage /> }/>\r\n            <Route exact path='/users' render={ () => <UsersPage /> }/>\r\n            <Route exact path=\"/\" component={HomePage}/>\r\n        </Switch>\r\n    )\r\n}\r\n","import store from \"./redux/store\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nlet vh = window.innerHeight * 0.01;\r\ndocument.documentElement.style.setProperty('--vh', `${vh}px`);\r\n\r\nwindow.addEventListener('resize', () => {\r\n  let vh = window.innerHeight * 0.01;\r\n  document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n});\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n    , document.getElementById('root'));"],"sourceRoot":""}